%!PS-Adobe-2.0
%%Creator: Thot
%% Delete the last nwpage line command for an encapsulated PostScript
%%CreationDate:  Mon Aug 26 16:16:13 MET DST 1996
%%Pages: (atend)
%%EndComments

/ThotDict 100 dict def
ThotDict begin

%%%%%%%%%%%%%%%%%%%%%%%Fonctions generales%%%%%%%%%%%%%%%%%%%%%%%%%%
/setpatterndict 18 dict def
setpatterndict begin
/bitison
{ /ybit exch def
  /xbit exch def
  /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def
  /mask 1 7 xbit 8 mod sub bitshift def
  bytevalue mask and 0 ne
}def
end
/bpspotf
{setpatterndict begin
  /y exch def
  /x exch def
  /xind x 1 add 2 div bpside mul cvi def
  /yind y 1 add 2 div bpside mul cvi def
  xind yind bitison
   {/onbits onbits 1 add def 1}
   {/offbits offbits 1 add def 0}
  ifelse
 end
}def
/setpattern
{setpatterndict begin
  /cellsz exch def
  /bwidth exch def
  /bpside exch def
  /bstring exch def
  /onbits 0 def
  /offbits 0 def
  cellsz 0 /bpspotf load setscreen
  {} settransfer
  offbits offbits onbits add div setgray
 end
}def
/fillbox	% (red green blue / pattern) code fillbox
{ /code exch def
  code 0 ge
  {code 0 gt
   {code 8 eq 
    {gsave 8 1 72 300 32 div div setpattern fill grestore} %new pattern
    {gsave 1 code 10 div sub setgray fill grestore} %gray level
    ifelse
   }if
  }
  {gsave setrgbcolor fill grestore} %lower
  ifelse
} bind def

/sf	% font val =->
 { exch cvn findfont exch dup 10 eq {pop 9.8} if scalefont setfont } bind def
/s	% string larg x y =->
 { moveto 
   1 index stringwidth pop sub
   1 index length div 0 3 2 roll ashow } bind def
/c	% y x string =->
 { dup 4 1 roll stringwidth pop 2 div sub exch moveto show
 } bind def
/j  % string nbl larg x y =->
 { moveto
   2 index
   stringwidth pop sub dup
   0 ge { exch div 0 32 4 3 roll widthshow }
	{ 2 index length div exch pop
	  0 3 2 roll ashow }
	ifelse
 } bind def
/r	% Radical
 { gsave newpath moveto gsave -1 -1 rlineto 0.75 setlinewidth
   stroke grestore
   lineto 1.5 setlinewidth %1 setlinecap
   gsave stroke grestore
   lineto lineto 0 setlinejoin 2 setmiterlimit
   0.75 setlinewidth stroke grestore
 } bind def
/Seg	% (x y)* dash width nb Segments
{ [/nb /ep /style] {exch def} forall
   newpath
   moveto
   2 1 nb {pop lineto} for
   0 setlinejoin ep 0.4 mul setlinewidth 
   style dup 0 gt
   {5 mul [ exch 3 ] 0 setdash}
   {pop [ ] 0 setdash}
   ifelse
   ep 0 gt {stroke} if
} bind def
/Poly	% rgb fill (x y)* dash width nb Polygone
{ [/nb /ep /style] {exch def} forall
   newpath
   moveto
   2 1 nb {pop lineto} for
   closepath
   fillbox
   0 setlinejoin ep 0.4 mul setlinewidth 
   style dup 0 gt
   {5 mul [ exch 3 ] 0 setdash}
   {pop [ ] 0 setdash}
   ifelse
   ep 0 gt {stroke} if
} bind def
/Curv	% (x y)* dash width nb Curves
{ [/nb /ep /style] {exch def} forall
   newpath
   moveto
   2 1 nb {pop curveto} for
   0 setlinejoin ep 0.4 mul setlinewidth 
   style dup 0 gt
   {5 mul [ exch 3 ] 0 setdash}
   {pop [ ] 0 setdash}
   ifelse
   ep 0 gt {stroke} if
} bind def
/Splin	% rgb fill (x y)* dash width nb Spline
{ [/nb /ep /style] {exch def} forall
   newpath
   moveto
   2 1 nb {pop curveto} for
   closepath
   fillbox
   0 setlinejoin ep 0.4 mul setlinewidth 
   style dup 0 gt
   {5 mul [ exch 3 ] 0 setdash}
   {pop [ ] 0 setdash}
   ifelse
   ep 0 gt {stroke} if
} bind def
/s3	% x yb yt h c1 c2 c3 =->
 { [/c3 /c2 /c1 /h /yt /yb /x] {exch def} forall
   c1 stringwidth pop 2 div x exch sub /x exch def
   x yt moveto c1 show
   x yb moveto c3 show
   { yt h sub /yt exch def
     yt yb sub h gt
     { yb h add /yb exch def
       x yt moveto c2 show x yb moveto c2 show
     }
     { yt yb gt
       { yt yb h 0.75 mul add le { yt h 4 div add /yt exch def } if
         x yt moveto c2 show
       } if
       exit
     } ifelse
   } loop
 } bind def
/s4	% x yb yt h c1 c2 c3 c4 =->
 { 10 dict begin 
   [/c4 /c3 /c2 /c1 /h /yt /yb /x] {exch def} forall
   c1 stringwidth pop 2 div x exch sub /x exch def
   x yt moveto c1 show
   x yb moveto c3 show
   yt yt yb sub 2 div sub /ym exch def
   x ym moveto c2 show
   /ymb ym def
   { yt h sub /yt exch def
     yt ym sub h gt
     { ym h add /ym exch def
       x yt moveto c4 show x ym moveto c4 show
       ymb h sub /ymb exch def yb h add /yb exch def
       x ymb moveto c4 show x yb moveto c4 show
     }
     { ymb h sub /ymb exch def
       yt ym gt
       { yt ym h 0.5 mul add le
         { yt h 0.75 mul add /yt exch def
           ymb h 0.25 mul add /ymb exch def
         } if
         x yt moveto c4 show x ymb moveto c4 show
       } if
       exit
     } ifelse
   } loop end
 } bind def
/arr	% xQueue yQueue xTail yTail th headth headlg Arrow
 { 16 dict begin
   /mtrx matrix def
   /hlg exch def
   /hthick exch 3 div def
   /thick exch def
   /tipy exch def /tipx exch def
   /taily exch def /tailx exch def
   /dash exch def
   /dx tipx tailx sub def
   /dy tipy taily sub def
   /arlg dx dx mul dy dy mul add sqrt def
   dx 0 eq dy 0 eq and 
   { /angle 0 def }
   { /angle dy dx atan def }
   ifelse
   /base arlg hlg sub def
   /savem mtrx currentmatrix def
   tailx taily translate
   angle rotate
   newpath
   base hthick neg moveto
   arlg 0 lineto base hthick lineto
   closepath
   fill
   newpath
   0 0 moveto base 0 moveto
   thick 0.4 mul setlinewidth
   savem setmatrix
   dash 0 gt 
   { dash 5 mul /dash def
     [dash 3] 0 setdash
   }
   { [] 0 setdash }
   ifelse
   thick 0 gt {stroke} if
   end
 } bind def
/ov	% Ovale
{
  8 dict begin
  /ray exch def
  newpath moveto
  /y1 exch def
  /x1 exch def
  4 {
    /y2 exch def /x2 exch def
    x1 y1 x2 y2 ray arcto pop pop pop pop
    /y1 y2 def /x1 x2 def
  } repeat closepath
  /ep exch def /dash exch def
  fillbox
  ep 0.4 mul setlinewidth 
  dash dup 0 gt
  { 5 mul [ exch 3 ] 0 setdash }
  {  pop [ ] 0 setdash }
  ifelse
  ep 0 gt {stroke} if
  end
 } bind def
/cer  % Cercle ep x y R
{
  2 index 2 index moveto 
  newpath 0 360 arc
  /ep exch def /dash exch def
  fillbox
  ep 0.4 mul setlinewidth 
  dash dup 0 gt
  { 5 mul [ exch 3 ] 0 setdash }
  {  pop [ ] 0 setdash }
  ifelse
  ep 0 gt {stroke} if
} bind def

/ellipse { % ep x y A B
  1 index div /scalef exch def /bigaxis exch def
  moveto
  gsave
  1 scalef scale
  currentpoint newpath bigaxis 0 360 arc closepath
  /ep exch def /dash exch def
  fillbox
  ep 0.4 mul setlinewidth 
  dash dup 0 gt
  { 5 mul [ exch 3 ] 0 setdash }
  {  pop [ ] 0 setdash }
  ifelse
  ep 0 gt {stroke} if
  grestore
} bind def

/DumpImage { %% Wim Him Wdr Hdr DumpImage
       /Hdr exch def /Wdr exch def /Him exch def /Wim exch def
       Wdr Hdr scale
       /picstr  Wim 7 add 8 idiv  string def
       Wim Him 1 [ Wim 0 0 Him neg 0 Him ]
          { currentfile picstr readhexstring pop } image
 } bind def

/DumpImage2 { %% Wim Him Wdr Hdr DumpImage2
       /Hdr exch def /Wdr exch def /Him exch def /Wim exch def
       /picstr  Wim 3 mul string def
     	Wdr Hdr scale
        Wim Him 8 
	[ Wim 0 0 Him neg 0 Him ]
          { currentfile picstr readhexstring pop } 
	false 3
	colorimage
 } bind def


%% define 'colorimage' if it isn't defined
%%   ('colortogray' and 'mergeprocs' come from xwd2ps
%%     via xgrab)
/colorimage where   %% do we know about 'colorimage'?
  { pop }           %% yes: pop off the 'dict' returned
  {                 %% no:  define one
    /colortogray {  %% define an RGB->I function
      /rgbdata exch store    %% call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      /grays npixls string store  %% str to hold the result
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    %% Red
        rgbdata rgbindx 1 add get 32 mul    %% Green
        rgbdata rgbindx 2 add get 12 mul    %% Blue
        add add 64 idiv      %% I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays
    } bind def

    %% Utility procedure for colorimage operator.
    %% This procedure takes two procedures off the
    %% stack and merges them into a single procedure.
  
    /mergeprocs { %% def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { %% def
      pop pop     %% remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          %% end of 'false' case


/Pes	% x y width =->
 { 5 dict begin
   [/xf /y /x] {exch def} forall
   /st (.) def
   /lg st stringwidth pop 3 mul def
   /xf xf x add def
   { xf x gt
     { xf y moveto
       st show
       /xf xf lg sub def
     }
     { exit }
     ifelse
   } loop end
 } bind def
/gr	%% trame pour graphique
 { newpath moveto lineto lineto lineto closepath
   0.125 mul 1 exch sub setgray fill 0 setgray
 } bind def

/trm    %% trame pour les boites vides
{ suptrame 0 eq {gr} {pop pop pop pop pop pop pop pop pop} ifelse
} bind def

/BEGINEPSFILE {%def
  /EPSFsave save def
  0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit [] 0 setdash
  newpath
  /showpage {} def
} bind def

/ENDEPSFILE {%def
  EPSFsave restore
} bind def

%%%%%%%%%%%%%% Modification des dictionnaires des polices%%%%%%%%%%%%%%%%%%%%%%%%%

/ISOLatin1Encoding where { pop } { /ISOLatin1Encoding
[/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/space
/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash/zero/one
/two/three/four/five/six/seven/eight/nine/colon/semicolon/less/equal
/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s
/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/dotlessi/grave
/acute/circumflex/tilde/macron/breve/dotaccent/dieresis/.notdef/ring
/cedilla/.notdef/hungarumlaut/ogonek/caron/space/exclamdown/cent
/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/OE/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae
/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex
/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/oe
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
def %ISOLatin1Encoding
} ifelse

/ReEncode	% NouvPolice NPolice ReEncode
  { findfont	% load desired font
    dup maxlength dict /newfont exch def	% allocate new fontdict
    dup
    { exch dup dup dup dup /FID ne exch /Encoding ne and exch /FontBBox ne and exch /FontMatrix ne and
	{ exch newfont 3 1 roll put }
	{ pop pop }
	ifelse }
    forall	% copy fontdict

    dup /FontBBox get 4 array copy newfont /FontBBox 3 -1 roll put
    /FontMatrix get 6 array copy newfont /FontMatrix 3 -1 roll put

    newfont /Encoding ISOLatin1Encoding 256 array copy put	%put new encoding vector
    newfont /Encoding get dup dup dup				%add /**OE*/
			 8#230 /divide put			%add /**OE*/
			 8#231 /multiply put			%add /**OE*/
			 8#367 /oe put				%add /**OE*/
			 8#327 /OE put				%add /**OE*/

    dup newfont /FontName 3 -1 roll put	%put a new Fontname
    newfont definefont pop	%define a new font
  } def

/ReEncodeOblique	% NouvPolice NPolice ReEncodeOblique
  { findfont	% load desired font
    dup maxlength dict /newfont exch def	% allocate new fontdict
    dup
    { exch dup dup dup dup /FID ne exch /Encoding ne and exch /FontBBox ne and exch /FontMatrix ne and
	{ exch newfont 3 1 roll put }
	{ pop pop }
	ifelse }
    forall	% copy fontdict

    dup /FontBBox get 4 array copy newfont /FontBBox 3 -1 roll put
    /FontMatrix get 
    [1 0 15 sin 1 0 0 ] exch 6 array concatmatrix
    newfont /FontMatrix 3 -1 roll put

    newfont /Encoding ISOLatin1Encoding 256 array copy put	%put new encoding vector
    newfont /Encoding get dup dup dup				%add /**OE*/
			 8#230 /divide put			%add /**OE*/
			 8#231 /multiply put			%add /**OE*/
			 8#367 /oe put				%add /**OE*/
			 8#327 /OE put				%add /**OE*/

    dup newfont /FontName 3 -1 roll put	%put a new Fontname
    newfont definefont pop	%define a new font
  } def

/lhr /Helvetica 		ReEncode
/lhb /Helvetica-Bold  		ReEncode
/lho /Helvetica-Oblique  	ReEncode
/lhq /Helvetica-BoldOblique 	ReEncode

/lhr (lhr) def
/lhb (lhb) def
/lhi (lho) def
/lho (lho) def    % lhi pour helvetica italique ( = oblique )
/lhq (lhq) def
/lhg (lhq) def    % lhg pour helvetica bold italique ( = bold oblique )

/ltr /Times-Roman 		ReEncode
/ltb /Times-Bold 		ReEncode
/lti /Times-Italic 		ReEncode
/ltg /Times-BoldItalic 		ReEncode
/lto /Times-Roman 		ReEncodeOblique
/ltq /Times-Bold 		ReEncodeOblique

/ltr (ltr) def
/ltb (ltb) def
/lti (lti) def
/lto (lto) def
/ltg (ltg) def
/ltq (ltq) def

/lcr /Courier 			ReEncode
/lcb /Courier-Bold 		ReEncode
/lco /Courier-Oblique	 	ReEncode
/lcq /Courier-BoldOblique 	ReEncode

/lcr (lcr) def
/lcb (lcb) def
/lco (lco) def
/lci (lco) def    % lci pour courier italique ( = oblique )
/lcq (lcq) def
/lcg (lcq) def    % lcq pour courier bold italique ( = bold oblique )

/ggr (Symbol) def

%%%%%%%%%%% Commandes de changement de pages %%%%%%%%%%%%%%%%%%%

/pagecounter 0 def

/pagenumberok 		% int pagenumberok boolean
 { evenodd 0 eq 	% evenodd = 0 -> toutes les pages	
	{ pop true }
	{ evenodd 1 eq 	% evenodd = 1 -> les pages impaires
		{ 2 mod 1 eq { true }	% le compteur est impair
			     { false }
			     ifelse }
	 	{ 2 mod 0 eq { true }	% evenodd = 2 -> les pages paires et le compteur est pair
			     { false }
			     ifelse }
		ifelse }
	ifelse } bind def

/pagesizeok
 { pop pop true } def

/frstpage	% 1ere page
 { } bind def

/nwpage		% nouvelle page
 { /pagecounter pagecounter 1 add def
   pagesizeok { pagenumberok { showpage }
			     {erasepage } ifelse } 
	      { erasepage } ifelse
   grestore
   VectMatrice pagecounter 4 mod get setmatrix 
   gsave UserMatrice concat } def

/showpage { pagecounter ppf mod 0 eq {systemdict /showpage get exec} if } bind def
/ejectpage { pagecounter ppf mod 0 ne {systemdict /showpage get exec} if } bind def


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/MatriceDict 9 dict def
MatriceDict begin

    /MatPortrait matrix def
    /MatPaysage [0 1 -1 0 0 0] def

    /defmat { 
	matrix concatmatrix matrix concatmatrix matrix currentmatrix matrix concatmatrix } bind def
	
    /defdict_portrait {	% dict defdict
	/Portrait 3 dict def 
	Portrait begin
	    /1ppf 2 dict def 1ppf begin
		/VectMatrice [
	    	    MatPortrait MatScale1 [1 0 0 1 0 PHeight] defmat
		    dup dup dup ] def
		/ppf 1 def
	    end % 1ppf dict
	    /2ppf 2 dict def 2ppf begin
		/VectMatrice [
	    	    MatPaysage MatScale2 [1 0 0 1 0 0] defmat
		    MatPaysage MatScale2 [1 0 0 1 0 PHeight 2 div] defmat
	    	    2 copy ] def
		/ppf 2 def
	    end % 2ppf dict
	    /4ppf 2 dict def 4ppf begin
		/VectMatrice [
	    	    MatPortrait MatScale4 [1 0 0 1 0 PHeight] defmat
		    MatPortrait MatScale4 [1 0 0 1 PWidth 2 div PHeight] defmat
	    	    MatPortrait MatScale4 [1 0 0 1 0 PHeight 2 div] defmat
		    MatPortrait MatScale4 [1 0 0 1 PWidth 2 div PHeight 2 div] defmat
		    ] def
		/ppf 4 def
	    end % 4ppf dict
	end % Portrait dict
    } bind def % end defdict_portrait

    /defdict_paysage {	% defdict
	/Paysage 3 dict def
	Paysage begin
	    /1ppf 2 dict def 1ppf begin
		/VectMatrice [
	    	    MatPaysage MatScale1 [1 0 0 1 0 842 PHeight sub ] defmat
		    dup dup dup ] def
		/ppf 1 def
	    end % 1ppf dict
	    /2ppf 2 dict def 2ppf begin
		/VectMatrice [
	    	    MatPortrait MatScale2 [1 0 0 1 0 PHeight] defmat
		     MatPortrait MatScale2 [1 0 0 1 0 420] defmat
	    	    2 copy ] def
		/ppf 2 def
	    end % 2ppf dict
	    /4ppf 2 dict def 4ppf begin
		/VectMatrice [
	    	    MatPaysage MatScale4 [1 0 0 1 0 0] defmat
		    MatPaysage MatScale4 [1 0 0 1 0 PHeight 2 div] defmat
 		    MatPaysage MatScale4 [1 0 0 1 PWidth 2 div 0] defmat
		    MatPaysage MatScale4 [1 0 0 1 PWidth 2 div PHeight 2 div] defmat
		    ] def
		/ppf 4 def
	    end % 4ppf dict
	end % Paysage dict
    } bind def % end defdict_paysage

    /A4 8 dict def
    A4 begin
    	/MatScale1 matrix def
    	/MatScale2 [1 2 sqrt div 0 0 2 index 0 0] def
    	/MatScale4 [0.5 0 0 0.5 0 0] def
	/PHeight 842 def
	/PWidth 596 def
	end

    /US 8 dict def
    US begin
    	/MatScale1 [1 0 0 1 0 -50.01] def
    	/MatScale2 [1 3 sqrt div 0 0 2 index 0 0] def
    	/MatScale4 [0.45 0 0 0.45 0 0] def
	/PHeight 792 def
	/PWidth 612 def
	end

    /A3 8 dict def
    A3 begin
    	/MatScale1 matrix def
    	/MatScale2 [1 2 sqrt div 0 0 2 index 0 0] def
    	/MatScale4 [0.5 0 0 0.5 0 0] def
	/PHeight 842 def
	/PWidth 596 def
	end

    /A5 8 dict def
    A5 begin
    	/MatScale1 matrix def
    	/MatScale2 matrix def
    	/MatScale4 [1 2 sqrt div 0 0 2 index 0 0] def
	/PHeight 842 def
	/PWidth 596 def
	end


end % Matrice dict

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%DEMARRAGE%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/InitThot {
    /UserMatrice 
	[reduction 100 div 0 0 2 index 0 0] 
	[1 0 0 1 decalageH HPrinterOff add 72 mul 25.4 div decalageV VPrinterOff add 72 mul 25.4 div neg] matrix concatmatrix
        [1 0 0 1 0 0]
	matrix concatmatrix def
    MatriceDict begin
    page_size cvlit load	 		% get the page_size dict
    begin defdict_portrait defdict_paysage	% and init it
    currentdict orientation cvlit get		% get the orientation dict
    nb_ppf cvlit get				% get the nb_ppf dict
    begin 
    VectMatrice 0 get setmatrix			% init CTM
    gsave UserMatrice concat
    100 dict begin				% working dict
    } bind def

/EndThot {
   ejectpage
   end end end end end} bind def	%close all open dict

%%EndProlog
/user_orientation 0 def
statusdict begin

end

/decalageH 0 def /decalageV 0 def
/reduction 100 def
/page_size (A4) def
/orientation (Portrait) def 
/nb_ppf (1ppf) def
/suptrame 1 def
/evenodd 0 def
/HPrinterOff 0 def
/VPrinterOff 0 def
InitThot

frstpage
%%Page: cover 1
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(Thot V1.0) 1 48 151 -68 j
(June 27, 1996) 2 64 151 -87 j
ltr 20 sf
(The Thot Editing Tool Kit) 4 204 151 -149 j
lti 12 sf
(Vincent Q) 1 46 151 -185 j
lti 10 sf
(UINT) 22 197 -185 s
lti 12 sf
(, Ir\350ne V) 2 41 219 -185 j
lti 10 sf
(ATTON) 32 260 -185 s
ltr 12 sf
(The Thot tool kit is a comprehensive set of editing functions that can be used for) 15 382 113 -222 j
(building applications that handle structured documents in the Unix / X Window en\255) 12 396 99 -238 j
(vironment. It is constituted by a set of C libraries that can be linked to any program. It) 17 396 99 -254 j
(allows application programs to perform the same kind of operations as a user) 12 396 99 -271 j
(working with a structured document editor. Typically, an application can use the tool) 12 396 99 -287 j
(kit for creating new documents, for modifying existing documents, for extracting in\255) 11 396 99 -303 j
(formation from documents, for displaying \(parts of\) documents, etc. The tool kit can) 12 396 99 -320 j
(be used either for automatic manipulations performed solely by a program or for al\255) 13 396 99 -336 j
(lowing a human user to cooperate with a program that processes documents. In this) 13 396 99 -352 j
(latter case, it uses OSF/Motif for implementing the user interface.) 9 316 99 -369 j
(The functions provided by the tool kit are derived from the Thot editor and) 13 382 113 -388 j
(therefore are based on the same document model. Documents produced with the tool) 12 396 99 -404 j
(kit can be stored as Unix files in the same standard format as documents produced by) 15 396 99 -420 j
(the Thot editor \(pivot format indicated by the .PIV suffix\). Thot editor is also able to) 15 396 99 -437 j
(save documents in another formats and obviously this capability is provided by the) 12 396 99 -453 j
(tool kit. Thot documents can be processed by all tools available in the Thot envi\255) 14 396 99 -469 j
(ronment and by all applications developed with the tool kit. The Thot environment) 12 396 99 -486 j
(includes in particular flexible tools for editing, printing and translating documents.) 10 389 99 -502 j
ltr 16 sf
(1) 8 99 -550 s
(Introduction to the document model) 4 216 117 -550 j
ltr 14 sf
(1.1) 16 99 -588 s
(Logical structure) 1 94 126 -588 j
ltr 12 sf
(In the editing tool kit, a ) 6 114 113 -611 j
lti 12 sf
(document) 46 228 -611 s
ltr 12 sf
( is primarily considered as an abstract structure) 7 222 274 -611 j
(that assembles typed ) 3 109 99 -627 j
lti 12 sf
(elements) 43 208 -627 s
ltr 12 sf
(. Examples of elements types are titles, chapters,) 7 244 252 -627 j
(sections, paragraphs, lists, notes, etc. The structure itself is basically a hierarchy of) 12 396 99 -643 j
(such elements; it is called an ) 6 145 99 -660 j
lti 12 sf
(abstract tree) 1 60 244 -660 j
ltr 12 sf
(. The lowest level elements \(also called) 6 191 304 -660 j
lti 12 sf
(basic elements) 1 73 99 -676 j
ltr 12 sf
(\) represent the actual ) 4 114 172 -676 j
lti 12 sf
(contents) 40 286 -676 s
ltr 12 sf
( of the document: character stings,) 5 169 326 -676 j
(mathematical symbols, pictures, and graphical elements. In addition to this tree) 10 396 99 -692 j
(structure, non-hierarchical links \(also called ) 5 251 99 -708 j
lti 12 sf
(references) 50 349 -708 s
ltr 12 sf
(\) relate elements) 2 96 399 -708 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
1 413 669 nwpage
%%Page: 2 2
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(2) 6 99 -77 s
(independently of the tree structure, thus representing cross- references and other) 10 396 99 -121 j
(types of hypertext links.) 3 116 99 -137 j
(As the type of an element is not always sufficient for completely representing the) 13 382 113 -156 j
(role of that element in the document logical structure, the notion of ) 12 321 99 -173 j
lti 12 sf
(logical attribute) 1 76 420 -173 j
ltr 12 sf
(has been introduced. A logical attribute is an information associated with an element) 12 396 99 -189 j
(that adds semantics to that element.) 5 176 99 -205 j
(The logical structure of a document is constrained by a model, called a ) 13 340 113 -225 j
lti 12 sf
(structure) 42 453 -225 s
(schema) 36 99 -241 s
ltr 12 sf
(. Several structure schemas can be used, one for each type of document. A) 13 361 134 -241 j
(structure schema defines a document type, by specifying all types of elements that) 12 396 99 -257 j
(can be used in the logical structure of a document of that type. It also specifies the) 16 396 99 -274 j
(attributes that can be associated with each type of element and all structural rela\255) 13 396 99 -290 j
(tionships that can be set between elements. Structure schemas are written in a) 12 396 99 -306 j
(specific declarative language, called S. A compiler for the S language is available, so) 13 396 99 -323 j
(that new document types can be defined, according to the requirements of applica\255) 12 396 99 -339 j
(tions.) 27 99 -355 s
ltr 14 sf
(1.2) 16 99 -395 s
(Presentation) 69 126 -395 s
ltr 12 sf
(The graphical appearance of a document \(also called ) 8 265 113 -417 j
lti 12 sf
(presentation) 60 378 -417 s
ltr 12 sf
(\) is derived) 2 57 439 -417 j
(from its logical structure and is generically specified by a ) 10 283 99 -433 j
lti 12 sf
(presentation schema) 1 99 382 -433 j
ltr 12 sf
(. A) 1 14 481 -433 j
(presentation schema is associated with a structure schema and specifies the ap\255) 11 396 99 -449 j
(pearance of documents of  the type defined by the structure schema. For each type of) 15 396 99 -466 j
(element defined in the structure schema, the presentation schema contains a set of) 12 396 99 -482 j
(presentation rules that define the style and the format of the logical elements. Using) 13 396 99 -498 j
(these rules, the system can then produce the graphical representation of a document,) 12 396 99 -515 j
(on the basis of its logical structure.) 6 168 99 -531 j
(Presentation schemas are written in the language P and a compiler for that lan\255) 13 382 113 -550 j
(guage is available. New presentation schemas can then be developed. Notice that) 11 396 99 -566 j
(several presentation schemas can be associated with the same structure schema,) 10 396 99 -583 j
(thus defining alternative presentations for the same type of document.) 9 335 99 -599 j
(In addition, each presentation schema may define different ) 8 289 113 -618 j
lti 12 sf
(views) 29 402 -618 s
ltr 12 sf
(. A view is a) 4 64 431 -618 j
(subset of the document that can be formatted in a different way and displayed sep\255) 14 396 99 -635 j
(arately: each view is presented in a different window on the screen.) 11 323 99 -651 j
(For balancing this rigid principle of presentation with a certain degree of flexibility,) 12 382 113 -670 j
(it is possible to associate with some element instances a special type of attribute,) 13 396 99 -686 j
(called ) 1 32 99 -703 j
lti 12 sf
(specific presentation rule) 2 123 131 -703 j
ltr 12 sf
(. A specific presentation rule is a presentation rule) 8 242 253 -703 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
2 413 669 nwpage
%%Page: 3 3
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(3) 6 490 -77 s
(of the same kind as those of the presentation schema, but it applies only to the el\255) 16 396 99 -121 j
(ement instance with which it is associated, not to all elements of that type.) 13 359 99 -137 j
(With that approach to document representation, documents are first specified) 9 382 113 -156 j
(generically, by writing structure schemas and presentation schemas. Then) 8 396 99 -173 j
(end-users and application programs can manipulate document instances very sim\255) 9 396 99 -189 j
(ply, by referring to the schemas. Most of the work consists in handling a logical) 14 396 99 -205 j
(structure consistent with the chosen structure schema and in handling the contents) 11 396 99 -222 j
(\(the basic elements\) of that structure. All the rest, especially formatting and dis\255) 12 396 99 -238 j
(playing, is done by the tool kit. In addition, the logical structure is a very efficient help) 16 396 99 -254 j
(for moving across the document and for locating the parts to be modified.) 12 347 99 -271 j
ltr 16 sf
(2) 8 99 -319 s
(Tool kit structure) 2 104 117 -319 j
ltr 14 sf
(2.1) 16 99 -357 s
(Structure of this manual) 3 131 126 -357 j
ltr 12 sf
(The tool kit contains about 200 functions. For the sake of clarity, they are pre\255) 14 382 113 -379 j
(sented by groups, each group focusing on a different aspect of documents.) 11 351 99 -396 j
ggr 12 sf
(\267) 6 112 -415 s
ltr 12 sf
(Group ) 1 34 133 -415 j
lti 12 sf
(application) 54 167 -415 s
ltr 12 sf
( \(section ) 2 47 221 -415 j
(5) 6 268 -415 s
(\) concerns the administration of the tool kit by) 8 222 274 -415 j
(the application.) 1 73 133 -431 j
ggr 12 sf
(\267) 6 112 -450 s
ltr 12 sf
(Group ) 1 34 133 -450 j
lti 12 sf
(document) 46 167 -450 s
ltr 12 sf
( \(section ) 2 46 213 -450 j
(6) 6 259 -450 s
(\) allows the application to manage schemas and) 7 230 265 -450 j
(whole documents.) 1 86 133 -467 j
ggr 12 sf
(\267) 6 112 -486 s
ltr 12 sf
(Group ) 1 35 133 -486 j
lti 12 sf
(tree) 19 168 -486 s
ltr 12 sf
( \(section ) 2 49 187 -486 j
(7) 6 236 -486 s
(\) handles the hierarchical logical structure of docu\255) 7 253 242 -486 j
(ments.) 33 133 -502 s
ggr 12 sf
(\267) 6 112 -521 s
ltr 12 sf
(Group ) 1 33 133 -521 j
lti 12 sf
(contents) 40 166 -521 s
ltr 12 sf
( \(section ) 2 45 206 -521 j
(8) 6 252 -521 s
(\) allows the application to manipulate the contents) 7 238 257 -521 j
(of the leaves of the structure.) 5 140 133 -538 j
ggr 12 sf
(\267) 6 112 -557 s
ltr 12 sf
(Group ) 1 33 133 -557 j
lti 12 sf
(attribute) 42 166 -557 s
ltr 12 sf
( \(section ) 2 45 208 -557 j
(9) 6 253 -557 s
(\) concerns logical attributes.) 3 136 259 -557 j
ggr 12 sf
(\267) 6 112 -576 s
ltr 12 sf
(Group ) 1 34 133 -576 j
lti 12 sf
(reference) 45 167 -576 s
ltr 12 sf
( \(section ) 2 47 212 -576 j
(10) 12 259 -576 s
(\) contains functions for manipulating non hier\255) 6 225 271 -576 j
(archical relationships \(hypertext links\).) 3 189 133 -592 j
ggr 12 sf
(\267) 6 112 -612 s
ltr 12 sf
(Group ) 1 34 133 -612 j
lti 12 sf
(language) 41 167 -612 s
ltr 12 sf
( \(section ) 2 47 208 -612 j
(11) 12 255 -612 s
(\) concerns natural languages used in text con\255) 7 228 267 -612 j
(tents.) 28 133 -628 s
ggr 12 sf
(\267) 6 112 -647 s
ltr 12 sf
(Group ) 1 33 133 -647 j
lti 12 sf
(presentation) 60 166 -647 s
ltr 12 sf
( \(section ) 2 45 227 -647 j
(12) 12 272 -647 s
(\) handles specific presentation.) 3 150 283 -647 j
ggr 12 sf
(\267) 6 112 -666 s
ltr 12 sf
(Group ) 1 33 133 -666 j
lti 12 sf
(view) 24 166 -666 s
ltr 12 sf
( \(section ) 2 45 190 -666 j
(13) 12 235 -666 s
(\) handles views.) 2 80 247 -666 j
ggr 12 sf
(\267) 6 112 -685 s
ltr 12 sf
(Group ) 1 34 133 -685 j
lti 12 sf
(selection) 43 167 -685 s
ltr 12 sf
( \(section ) 2 47 210 -685 j
(14) 12 257 -685 s
(\) contains the functions that handle the selec\255) 7 227 269 -685 j
(tion.) 21 133 -702 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
3 413 669 nwpage
%%Page: 4 4
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(4) 6 99 -77 s
ggr 12 sf
(\267) 6 112 -126 s
ltr 12 sf
(Group ) 1 34 133 -126 j
lti 12 sf
(interface) 43 167 -126 s
ltr 12 sf
( \(section ) 2 47 210 -126 j
(15) 12 257 -126 s
(\) allows the application program to modify and) 7 227 269 -126 j
(extend the Thot editor.) 3 109 133 -142 j
ggr 12 sf
(\267) 6 112 -161 s
ltr 12 sf
(Group ) 1 33 133 -161 j
lti 12 sf
(message) 40 166 -161 s
ltr 12 sf
( \(section ) 2 45 206 -161 j
(16) 12 252 -161 s
(\) allows the application program to display mes\255) 7 232 263 -161 j
(sages intended to the user.) 4 131 133 -178 j
ggr 12 sf
(\267) 6 112 -197 s
ltr 12 sf
(Group ) 1 36 133 -197 j
lti 12 sf
(dialogue) 40 169 -197 s
ltr 12 sf
( \(section ) 2 51 209 -197 j
(17) 12 260 -197 s
(\) allows the application program to manage) 6 224 272 -197 j
(menus and forms intended to the user.) 6 183 133 -213 j
(Each section presenting a group of functions is divided into subsections which) 11 382 113 -232 j
(correspond to the following four broad categories:) 6 236 99 -249 j
ggr 12 sf
(\267) 6 112 -268 s
lti 12 sf
(constructors) 58 133 -268 s
ltr 12 sf
( are functions that create or generate new things. By extension,) 10 304 191 -268 j
(they also include reverse functions, which delete or destroy the same) 10 362 133 -284 j
(things.) 33 133 -300 s
ggr 12 sf
(\267) 6 112 -320 s
lti 12 sf
(modificators) 60 133 -320 s
ltr 12 sf
( are functions that modify existing things in different ways.) 9 280 194 -320 j
ggr 12 sf
(\267) 6 112 -339 s
lti 12 sf
(accessors) 45 133 -339 s
ltr 12 sf
( are the functions that allow the application program to access) 10 317 179 -339 j
(things.) 33 133 -355 s
ggr 12 sf
(\267) 6 112 -374 s
lti 12 sf
(locators) 37 133 -374 s
ltr 12 sf
( are the functions that search various kind of things in document,) 11 324 171 -374 j
(according to different criteria.) 3 139 133 -391 j
ltr 14 sf
(2.2) 16 99 -430 s
(Libraries) 50 126 -430 s
ltr 12 sf
(The Thot editing tool kit is accessed through an API that is defined in sections) 14 382 113 -452 j
(5) 6 99 -468 s
( to ) 2 15 105 -468 j
(17) 12 120 -468 s
(. The tool kit takes the form of two libraries for editing documents. Each library) 14 364 132 -468 j
(is suited to a different type of application and an application uses only one of the two) 16 396 99 -485 j
(editing libraries: the second library includes the  first one.) 9 275 99 -501 j
(2.2.1) 23 99 -533 s
(Thot Kernel library) 2 90 131 -533 j
(The first library allows an application to handle the logical structure and the) 12 382 113 -553 j
(contents of Thot documents in automatic mode. This subset of the tool kit, called Thot) 14 396 99 -569 j
(Kernel, does not produce the graphical aspect of documents. It does not provide ei\255) 13 396 99 -586 j
(ther any service for the user interface. It is typically designed for applications per\255) 13 396 99 -602 j
(forming automatic operations on the logical structure and contents of documents) 10 396 99 -618 j
(without direct manipulation by a user.) 5 180 99 -635 j
(The last five groups of functions \(those handling views, selections, and user in\255) 12 382 113 -654 j
(terface to the editor\) are not part of that library. Sections ) 11 276 99 -670 j
(13) 12 374 -670 s
( to ) 2 15 386 -670 j
(17) 12 401 -670 s
( of that document) 3 83 413 -670 j
(do not concern that library.) 4 128 99 -686 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
4 413 669 nwpage
%%Page: 5 5
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(5) 6 490 -77 s
(2.2.2) 23 99 -121 s
(Thot Editor library) 2 88 131 -121 j
(The second library, called Thot Editor, includes all facilities provided by the) 11 382 113 -141 j
(Kernel, with the same interface, and provides additional services for displaying the) 11 396 99 -157 j
(graphical aspect of documents. It also contains the whole Thot editor with its user) 13 396 99 -174 j
(interface. All editing functions of Thot can be accessed by the user and by application) 14 396 99 -190 j
(programs. The Thot Editor tool kit is typically intended to interactive applications) 11 396 99 -206 j
(that handle documents under the control of a user and that add new functions to the) 15 396 99 -223 j
(editor.) 31 99 -239 s
(All groups of functions presented in this document are part of that library. Func\255) 13 382 113 -258 j
(tions that are also part of the Thot Kernel have exactly the same interface when used) 15 396 99 -275 j
(in the context of Thot Editor. The only difference is that, in the case of Thot Kernel,) 16 396 99 -291 j
(they do not display anything, and that, in the case of Thot Editor, some of them) 15 396 99 -307 j
(\(namely constructors and modificators\) modify the picture displayed on the screen.) 10 396 99 -324 j
(As a consequence, application programs that have been developed for automatic) 10 396 99 -340 j
(processing can be reused in the context of an interactive application without any) 12 396 99 -356 j
(change: the Thot Editor automatically takes in charge all displaying problems that) 11 396 99 -372 j
(are not handled by the Thot Kernel.) 6 169 99 -389 j
ltr 16 sf
(3) 8 99 -437 s
(Using the Thot tool kit) 4 137 117 -437 j
ltr 14 sf
(3.1) 16 99 -475 s
(Errors) 36 126 -475 s
ltr 12 sf
(Almost all functions of the tool kit can detect errors. In that case the function is not) 16 382 113 -497 j
(performed and an error code is set. The tool kit provides the application program with) 14 396 99 -514 j
(the function ) 2 59 99 -533 j
(GtGetErrorCode) 81 157 -533 s
( for accessing the error code. That function returns the) 9 257 238 -533 j
(completion code of the last tool kit function called by the application. Only the com\255) 14 396 99 -549 j
(pletion code of the most recently called function is available. A 0 completion code) 13 396 99 -565 j
(means a successful operation; other values are defined in files ) 10 300 99 -582 j
lti 12 sf
(application.h) 62 398 -582 s
ltr 12 sf
(.) 3 461 -582 s
(In addition to the error code returned to the application program by the function) 13 382 113 -601 j
(GtGetErrorCode) 81 99 -620 s
(, the tool kit prints an error message on the standard error file stderr) 13 316 180 -620 j
(whenever an error is raised. Error messages are printed by default, but the appli\255) 13 396 99 -636 j
(cation program can ask the tool kit to stop printing these messages, by calling the) 14 396 99 -653 j
(function ) 1 40 99 -672 j
(GtSetErrorMessages) 105 139 -672 s
(.) 3 244 -672 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
5 413 669 nwpage
%%Page: 6 6
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(6) 6 99 -77 s
ltr 14 sf
(3.2) 16 99 -122 s
(Include files) 1 66 126 -122 j
ltr 12 sf
(Each group of functions has an associated include file. Available include files are:) 12 382 113 -144 j
(application.h, document.h, tree.h, content.h, attribute.h, reference.h, language.h,) 6 396 99 -160 j
(presentation.h, view.h, selection.h, interface.h. These files must be included in each) 10 396 99 -177 j
(module of the application program that calls at least one function of the corresponding) 13 396 99 -193 j
(group. They contain the interface definition of the functions and the types and con\255) 13 396 99 -209 j
(stants \(#define\) used by these functions.) 5 197 99 -226 j
ltr 14 sf
(3.3) 16 99 -265 s
(Buffers) 40 126 -265 s
ltr 12 sf
(Whenever a function may return a long character string \(20 characters or more\),) 12 382 113 -287 j
(the buffer must be provided by the application when calling the function. If the buffer is) 15 396 99 -303 j
(too small, the tool kit raises an error. But the size of the character string can gen\255) 16 396 99 -320 j
(erally be asked before calling such functions, by using another function.) 10 339 99 -336 j
ltr 16 sf
(4) 8 99 -384 s
(Types used by the Thot editing tool kit) 7 234 117 -384 j
ltr 12 sf
(The tool kit performs operations on various entities, such as schemas, docu\255) 11 382 113 -403 j
(ments, elements, attributes, views, etc. Each entity is identified by a unique iden\255) 12 396 99 -420 j
(tifier which is assigned by Thot. Therefore, an application program must get that) 12 396 99 -436 j
(identifier before manipulating any entity. An identifier can be obtained by construc\255) 11 396 99 -452 j
(tors, accessors and locators.) 3 137 99 -468 j
(The following types are used by the editing tool kit:) 9 246 113 -488 j
ltb 12 sf
(SSchema) 47 99 -507 s
ltr 12 sf
(a structure schema loaded by the tool kit.) 7 198 242 -507 j
ltb 12 sf
(Document) 52 99 -526 s
ltr 12 sf
(a document loaded or created by the tool kit.) 8 212 242 -526 j
ltb 12 sf
(Element) 42 99 -545 s
ltr 12 sf
(an element in the logical structure of a document.) 8 234 242 -545 j
ltb 12 sf
(Attribute) 46 99 -564 s
ltr 12 sf
(a logical attribute.) 2 86 242 -564 j
ltb 12 sf
(PRule) 32 99 -584 s
ltr 12 sf
(a specific presentation rule.) 3 132 242 -584 j
ltb 12 sf
(View) 27 99 -603 s
ltr 12 sf
(a view created by the editor \(Thot Editor only\).) 8 227 242 -603 j
ltb 12 sf
(ElementType) 69 99 -622 s
ltr 12 sf
(the type of an element.) 4 109 242 -622 j
ltb 12 sf
(AttributeType) 73 99 -641 s
ltr 12 sf
(the type of an attribute.) 4 112 242 -641 j
ltb 12 sf
(Language) 51 99 -660 s
ltr 12 sf
(the identifier of a natural language.) 5 166 242 -660 j
(SSchemas, Elements, Attributes, and PRules are pointers \(addresses\), whereas) 8 382 113 -680 j
(Documents and Views are integers. Language is an unsigned character. Both Ele\255) 11 396 99 -696 j
(mentType and AttributeType are structures containing a SSchema \(the schema that) 10 396 99 -712 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
6 413 669 nwpage
%%Page: 7 7
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(7) 6 490 -116 s
(defines the corresponding element type or attribute type\) and an integer which is the) 13 396 99 -160 j
(number of the element type or attribute type in that structure schema. Structure) 12 396 99 -177 j
(ElementType is defined in file ) 5 145 99 -193 j
lti 12 sf
(tree.h) 28 244 -193 s
ltr 12 sf
(:) 3 272 -193 s
lcr 12 sf
(typedef struct _ElementType) 2 181 141 -211 j
(    {) 4 34 141 -225 j
(    SSchema ElSSchema;) 5 148 141 -238 j
(    int ElTypeNum;) 5 121 141 -252 j
(    } ElementType;) 5 121 141 -265 j
ltr 12 sf
(Structure AttributeType is defined in file ) 6 196 99 -284 j
lti 12 sf
(attribute.h) 51 295 -284 s
ltr 12 sf
(:) 3 346 -284 s
lcr 12 sf
(typedef struct _AttributeType) 2 195 141 -302 j
(    {) 4 34 141 -316 j
(    SSchema AttrSSchema;) 5 161 141 -329 j
(    int AttrTypeNum;) 5 134 141 -343 j
(    } AttributeType;) 5 134 141 -356 j
ltr 12 sf
(In addition some integers are used for exchanging parameters between the ap\255) 11 382 113 -375 j
(plication program and the tool kit. Available parameters with their possible values) 11 396 99 -392 j
(are:) 18 99 -408 s
ltb 12 sf
(Search domain) 1 76 99 -427 j
ltr 12 sf
(SearchForward, SearchBackward, SearchInTree.) 2 233 242 -427 j
ltb 12 sf
(Access rights) 1 70 99 -446 j
ltr 12 sf
(ReadWrite, ReadOnly, Hidden, Inherited.) 3 199 242 -446 j
ltb 12 sf
(Construct) 50 99 -466 s
ltr 12 sf
(ConstructIdentity, ConstructList, ConstructChoice,) 2 245 242 -466 j
(ConstructOrderedAggregate,) 140 242 -482 s
(ConstructUnorderedAggregate, ConstructConstant,) 1 248 242 -498 j
(ConstructReference, ConstructBasicType,) 1 202 242 -515 j
(ConstructNature, ConstructPair.) 1 156 242 -531 j
ltb 12 sf
(Presentation rules) 1 96 99 -550 j
ltr 12 sf
(PRSize, PRStyle, PRFont, PRUnderline,) 3 193 242 -550 j
(PRThickness, PRIndent, PRLineSpacing, PRDepth,) 3 246 242 -566 j
(PRAdjust, PRJustify, PRLineStyle, PRLineWeight,) 3 244 242 -583 j
(PRFillPattern, PRBackground, PRForeground,) 2 222 242 -599 j
(PRHyphenate.) 70 242 -615 s
ltb 12 sf
(Display modes) 1 75 99 -635 j
ltr 12 sf
(DisplayImmediately, DeferredDisplay,) 1 185 242 -635 j
(NoComputedDisplay.) 104 242 -651 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
7 413 669 nwpage
%%Page: 8 8
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(8) 6 99 -77 s
ltr 16 sf
(5) 8 99 -125 s
(Application) 71 117 -125 s
ltr 12 sf
(Group application contains the functions for managing the tool kit. These functions) 11 382 113 -144 j
(require that file ) 3 76 99 -160 j
lti 12 sf
(application.h) 62 175 -160 s
ltr 12 sf
( be included in the module that calls them.) 8 201 237 -160 j
ltr 14 sf
(5.1) 16 99 -200 s
(Constructors) 72 126 -200 s
ltr 12 sf
(5.1.1) 23 99 -233 s
(GtInitialize) 55 131 -233 s
(Initializes the Thot editing tool kit for an application. This function must be called) 13 396 99 -248 j
(before any other function of the tool kit.) 7 187 99 -264 j
481 -288 113 -288 0 3 2 Seg
481 -291 113 -291 0 1 2 Seg
lhr 14 sf
(void   GtInitialize\(char *applicationName\)) 4 252 113 -313 j
481 -328 113 -328 0 3 2 Seg
481 -325 113 -325 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -357 s
lti 12 sf
(applicationName) 83 134 -376 s
ltr 12 sf
(: name of the application that requires services from the tool) 10 278 217 -376 j
(kit. This name is used for accessing the ressources defined in file .Xde\255) 12 342 154 -393 j
(faults.) 30 154 -409 s
(5.1.2) 23 99 -441 s
(GtQuit) 34 131 -441 s
(Quits the Thot tool kit. No other function of the tool kit can then be called by the) 17 396 99 -455 j
(application.) 55 99 -471 s
481 -495 113 -495 0 3 2 Seg
481 -498 113 -498 0 1 2 Seg
lhr 14 sf
(void GtQuit\(\)) 1 79 113 -520 j
481 -536 113 -536 0 3 2 Seg
481 -533 113 -533 0 1 2 Seg
ltr 12 sf
(5.1.3) 23 99 -572 s
(GtGetMemory) 71 131 -572 s
(Allocates dynamically a buffer of a specific size.) 7 228 99 -587 j
481 -611 113 -611 0 3 2 Seg
481 -613 113 -613 0 1 2 Seg
lhr 14 sf
(char *GtGetMemory\(int size\)) 2 178 113 -636 j
481 -651 113 -651 0 3 2 Seg
481 -648 113 -648 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -680 s
lti 12 sf
(size) 19 134 -699 s
ltr 12 sf
(: size in bytes \(like using malloc\) of the desired allocated buffer.) 11 306 154 -699 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
8 413 669 nwpage
%%Page: 9 9
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(9) 6 490 -77 s
ltb 12 sf
(Return value:) 1 70 99 -126 j
ltr 12 sf
(the address of the allocated buffer.) 5 165 134 -145 j
ltb 12 sf
(See also:) 1 49 99 -169 j
ltr 12 sf
(GtFreeMemory.) 79 134 -188 s
(5.1.4) 23 99 -220 s
(GtFreeMemory) 76 131 -220 s
(Frees the memory allocated to a buffer by ) 8 203 99 -239 j
(GtGetMemory) 71 301 -239 s
(.) 3 372 -239 s
481 -263 113 -263 0 3 2 Seg
481 -266 113 -266 0 1 2 Seg
lhr 14 sf
(void  GtFreeMemory\(char *buffer\)) 3 208 113 -288 j
481 -303 113 -303 0 3 2 Seg
481 -300 113 -300 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -332 s
lti 12 sf
(buffer) 29 134 -351 s
ltr 12 sf
(: the address of the buffer.) 5 125 163 -351 j
ltb 12 sf
(See also:) 1 49 99 -375 j
ltr 12 sf
(GtGetMemory.) 74 134 -395 s
ltr 14 sf
(5.2) 16 99 -434 s
(Modificators) 70 126 -434 s
ltr 12 sf
(5.2.1) 23 99 -468 s
(GtSetErrorMessages) 105 131 -468 s
(Indicates to the tool kit whether error messages must be printed or not.) 12 343 99 -482 j
481 -506 113 -506 0 3 2 Seg
481 -509 113 -509 0 1 2 Seg
lhr 14 sf
(void GtSetErrorMessages\(int on\)) 2 204 113 -531 j
481 -546 113 -546 0 3 2 Seg
481 -543 113 -543 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -575 s
lti 12 sf
(on) 12 134 -594 s
ltr 12 sf
(: 1 if error messages must be printed, 0 if not.) 10 217 146 -594 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
9 413 669 nwpage
%%Page: 10 10
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(10) 12 99 -77 s
ltr 14 sf
(5.3) 16 99 -122 s
(Accessors) 60 126 -122 s
ltr 12 sf
(5.3.1) 23 99 -156 s
(GtGetVersion) 69 131 -156 s
(Returns the identifier of the current version of the Thot editing tool kit.) 12 336 99 -170 j
481 -194 113 -194 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
lhr 14 sf
(char *GtGetVersion\(\)) 1 133 113 -219 j
481 -234 113 -234 0 3 2 Seg
481 -231 113 -231 0 1 2 Seg
ltb 12 sf
(Return value:) 1 70 99 -263 j
ltr 12 sf
(identifier of the current version.) 4 150 134 -282 j
(5.3.2) 23 99 -314 s
(GtGetErrorCode) 81 131 -314 s
(Returns the error code set by the last call to the Thot editing tool kit. See file ) 17 381 99 -328 j
lti 12 sf
(ap\255) 15 480 -328 s
(plication.h) 51 99 -345 s
ltr 12 sf
( for the possible values.) 4 114 150 -345 j
481 -369 113 -369 0 3 2 Seg
481 -372 113 -372 0 1 2 Seg
lhr 14 sf
(int GtGetErrorCode\(\)) 1 128 113 -394 j
481 -409 113 -409 0 3 2 Seg
481 -406 113 -406 0 1 2 Seg
ltb 12 sf
(Return value:) 1 70 99 -438 j
ltr 12 sf
(last error code, 0 if the last call was successful.) 9 227 134 -457 j
(5.3.3) 23 99 -489 s
(GtGetStrError) 70 131 -489 s
(Returns a pointer to the message text for a given error code.) 11 289 99 -503 j
481 -527 113 -527 0 3 2 Seg
481 -530 113 -530 0 1 2 Seg
lhr 14 sf
(char *GtGetStrError\(int errorCode\)) 2 213 113 -552 j
481 -567 113 -567 0 3 2 Seg
481 -564 113 -564 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -596 s
lti 12 sf
(errorCode) 47 134 -615 s
ltr 12 sf
(: an error code.) 3 71 181 -615 j
ltb 12 sf
(Return value:) 1 70 99 -639 j
ltr 12 sf
(pointer to the message text of the error.) 7 191 134 -659 j
ltb 12 sf
(See also:) 1 49 99 -683 j
ltr 12 sf
(GtGetErrorCode) 81 134 -702 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
10 413 669 nwpage
%%Page: 11 11
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(9) 6 490 -77 s
ltr 16 sf
(6) 8 99 -125 s
(Documents and schemas) 2 150 117 -125 j
ltr 12 sf
(The functions described in this section require that file ) 9 262 113 -144 j
lti 12 sf
(document.h) 55 375 -144 s
ltr 12 sf
( be included in) 3 65 430 -144 j
(the module that calls them.) 4 130 99 -160 j
ltb 12 sf
(Document identification) 1 121 99 -180 j
ltr 12 sf
(An application program using the Thot editing tool kit can handle several) 11 361 134 -199 j
(documents at the same time. These documents can be defined by the same) 12 361 134 -215 j
(structure schema or by different structure schemas as well. Before any other) 11 361 134 -231 j
(operation can be performed, a document must be either created \() 10 320 134 -251 j
(GtNew\255) 41 454 -251 s
(Document) 49 134 -267 s
(\), if it does not exist yet, or opened \(GtOpenDocument\), if it exists) 12 312 183 -267 j
(in a file. These two functions return a value of type Document that is then) 14 361 134 -283 j
(used for identifying the document to which subsequent operations apply. The) 10 361 134 -300 j
(only exception is the function ) 5 144 134 -319 j
(GtGiveSchemasOfDocument) 139 278 -319 s
( which accesses) 2 78 418 -319 j
(a document by its name.) 4 116 134 -335 j
(The name of a document is a character string \(maximum length is 19 char\255) 13 361 134 -354 j
(acters, not including the extension\) that is used for naming the file containing) 12 361 134 -371 j
(the document and that appears in the user dialogue \(Thot Editor only\).) 11 338 134 -387 j
ltb 12 sf
(Document files) 1 77 99 -411 j
ltr 12 sf
(Documents are stored in Unix files. Actually, a single document is repre\255) 11 361 134 -430 j
(sented by several files. All these files have the same name as the document,) 13 361 134 -446 j
(with different extensions:) 2 122 134 -463 j
ggr 12 sf
(\267) 6 148 -482 s
ltr 12 sf
(The .PIV file contains the last version of the document \(logical) 10 326 169 -482 j
(structure, contents, logical attributes and specific presentation rules\).) 7 326 169 -498 j
(A .PIV file is created each time the document is saved, either by the) 13 326 169 -515 j
(user or by the application program \(function ) 7 212 169 -534 j
(GtSaveDocument) 85 381 -534 s
(\). The) 1 29 467 -534 j
(.PIV file is the file read by the ) 8 146 169 -553 j
(GtOpenDocument) 87 315 -553 s
( function.) 1 43 402 -553 j
ggr 12 sf
(\267) 6 148 -572 s
ltr 12 sf
(The .OLD file contains the previous version of the document. It is a) 12 326 169 -572 j
(copy of the .PIV file before the last save operation.) 9 243 169 -588 j
ggr 12 sf
(\267) 6 148 -608 s
ltr 12 sf
(The .BAK file contains a version of the document that is written pe\255) 12 326 169 -608 j
(riodically for allowing recovery from crashes. It is removed each time) 10 326 169 -624 j
(the document is saved successfully, but if the system or the appli\255) 11 326 169 -640 j
(cation crashes, it must be renamed .PIV and can be used as an ordi\255) 13 326 169 -657 j
(nary document file. ) 3 93 169 -673 j
ggr 12 sf
(\267) 6 148 -692 s
ltr 12 sf
(The .SAV file is also a backup file. It is created by the tool kit when an) 16 326 169 -692 j
(internal error occurs and when it can save the document. This file) 11 326 169 -708 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
9 413 669 nwpage
%%Page: 12 12
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(10) 12 99 -77 s
(contains the state of the document at the very moment of the crash. It) 13 326 169 -121 j
(can be used in the same way as the .BAK file.) 10 221 169 -137 j
ggr 12 sf
(\267) 6 148 -156 s
ltr 12 sf
(The .EXT and .REF files contain the representation of the links that) 11 326 169 -156 j
(relate the document with other documents. These files do not exist if) 11 326 169 -173 j
(the document has no relations \(references\) with other documents. If) 9 326 169 -189 j
(they exist, they must be in the same directory as the .PIV file. They) 13 326 169 -205 j
(are read by the function ) 5 115 169 -225 j
(GtOpenDocument) 87 284 -225 s
(.) 3 372 -225 s
ltb 12 sf
(Directories) 60 99 -249 s
ltr 12 sf
(A list of directories, called the ) 6 147 134 -268 j
lti 12 sf
(document path) 1 70 281 -268 j
ltr 12 sf
(, is used for searching the files) 6 144 351 -268 j
(needed when opening a document \(.PIV, .REF and .EXT files\). This path is) 12 361 134 -284 j
(initially set by the environment variable THOTDOC and it can be changed at) 12 361 134 -300 j
(any time by the function ) 5 119 134 -320 j
(GtSetDocumentPath) 100 253 -320 s
(. When a document is created) 5 142 353 -320 j
(\(GtNewDocument\), all corresponding files are created in the first directory of) 10 361 134 -336 j
(the document path.) 2 91 134 -352 j
(Another list of directories is used when searching the schemas needed by a) 12 361 134 -372 j
(document that is created \() 4 137 134 -391 j
(GtNewDocument) 84 272 -391 s
(\) or opened \(GtOpenDocu\255) 3 139 356 -391 j
(ment\). The ) 2 65 134 -407 j
lti 12 sf
(schema path) 1 64 200 -407 j
ltr 12 sf
( is initially set by the environment variable) 7 231 264 -407 j
(THOTSCH and it can be changed at any time by the function ) 12 343 134 -426 j
(Gt\255) 18 477 -426 s
(SetSchemaPath) 76 134 -445 s
(. This path is also used by the function ) 9 187 210 -445 j
(GtNewNature) 69 397 -445 s
(.) 3 467 -445 s
ltb 12 sf
(Access mode) 1 69 99 -465 j
ltr 12 sf
(When using Thot Editor, the application program may ask the tool kit to) 12 361 134 -484 j
(prevent the user from modifying the document: an access mode \(allowed) 10 361 134 -500 j
(values are read/write and read only\) is associated with the whole document.) 11 361 134 -516 j
(The functions of the editing tool kit are not affected by the access mode; an) 14 361 134 -533 j
(application program can modify a document even if it is in read only mode. The) 14 361 134 -549 j
(access mode only applies to the operations performed by the user, who) 11 361 134 -565 j
(cannot modify a document that is in read only mode. When creating or opening) 13 361 134 -582 j
(a document, the access mode is set to read/write, but it can be changed at any) 15 361 134 -598 j
(time by the function ) 4 97 134 -617 j
(GtSetDocumentAccessMode) 141 231 -617 s
(.) 3 372 -617 s
(An application program can more precisely control the operations that the) 10 361 134 -636 j
(user is allowed to perform, by associating an access mode with each element) 12 361 134 -653 j
(in a document. This is explained in section ) 8 205 134 -669 j
(7) 6 340 -669 s
(.) 3 346 -669 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
10 413 669 nwpage
%%Page: 13 13
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(11) 12 484 -77 s
ltb 12 sf
(Natures) 42 99 -126 s
ltr 12 sf
(Many structured documents contain objects of different ) 7 266 134 -145 j
lti 12 sf
(natures) 36 400 -145 s
ltr 12 sf
(, such as ta\255) 3 60 436 -145 j
(bles, equations, drawings, bibliographic items, etc. which are themselves) 8 361 134 -161 j
(logically structured. For avoiding to define the structure of these objects in) 11 361 134 -178 j
(the structure schemas of all document types, these objects are defined in) 11 361 134 -194 j
(separate structure schemas, one for each nature of objects, and they can be) 12 361 134 -210 j
(dynamically linked to document structure schemas. This can be repeated) 9 361 134 -227 j
(recursively: if an object of a given nature includes objects of other natures, its) 13 361 134 -243 j
(structure schema must include the structure schemas of the included na\255) 10 361 134 -259 j
(tures.) 28 134 -276 s
(When the first object of a given nature is created in a document or in an object) 16 361 134 -295 j
(of another nature, the structure schema that defines the new nature must be) 12 361 134 -311 j
(linked to the structure schema that defines the document or object in which it) 13 361 134 -327 j
(is included. This is achieved by calling the function ) 9 244 134 -347 j
(GtNewNature) 69 378 -347 s
(.) 3 447 -347 s
ltb 12 sf
(Schema extensions) 1 99 99 -371 j
ltr 12 sf
(Documents produced by Thot may be processed by other applications, which) 10 361 134 -390 j
(are either independent from the editor or included in it. Examples of such) 12 361 134 -406 j
(applications are the comparison of two versions of a document \(independent) 10 361 134 -422 j
(from the editor\) or the electronic index \(included in the editor\). Many of these) 13 361 134 -439 j
(applications make use of their own structural elements or attributes, which) 10 361 134 -455 j
(are related to the application itself and which are necessary for the applica\255) 12 361 134 -471 j
(tion, whatever the document type. A ) 6 183 134 -488 j
lti 12 sf
(structure schema extension) 2 132 318 -488 j
ltr 12 sf
( is a spe\255) 3 46 449 -488 j
(cial type of structure schema that defines attributes and elements of that kind) 12 361 134 -504 j
(and that can be associated to the main structure schema of any document for) 13 361 134 -520 j
(allowing an application to create in the document its own attributes and el\255) 12 361 134 -537 j
(ements, which are not defined in the document structure schema. When) 10 361 134 -553 j
(several applications have to work on the same document, several schema) 10 361 134 -569 j
(extensions can be associated to the main structure schema of that docu\255) 11 361 134 -586 j
(ment.) 27 134 -602 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
11 413 669 nwpage
%%Page: 14 14
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(12) 12 99 -77 s
ltr 14 sf
(6.1) 16 99 -122 s
(Constructors) 72 126 -122 s
ltr 12 sf
(6.1.1) 23 99 -156 s
(GtNewDocument) 84 131 -156 s
(Creates the internal representation of a new document according to a given structure) 12 396 99 -170 j
(schema. No file is created immediately, but the backup files \(.BAK and .SAV\) and) 13 396 99 -186 j
(the document file \(.PIV, see GtNewDocument\) will be created in the first directory of) 13 396 99 -203 j
(the document path \(see GtSetDocumentPath\).) 4 224 99 -219 j
481 -243 113 -243 0 3 2 Seg
481 -246 113 -246 0 1 2 Seg
lhr 14 sf
(Document GtNewDocument\(char *structureSchema, char) 3 369 113 -268 j
(*documentName\)) 108 113 -287 s
481 -302 113 -302 0 3 2 Seg
481 -300 113 -300 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -331 s
lti 12 sf
(structureSchema) 79 134 -350 s
ltr 12 sf
(: name of the structure schema that defines the type of) 10 282 213 -350 j
(document to be created.) 3 114 154 -367 j
lti 12 sf
(documentName) 75 134 -386 s
ltr 12 sf
(: name of the document to be created \(maximum length 19) 10 286 209 -386 j
(characters\). The directory name is not part of this parameter \(see ) 11 324 154 -405 j
(Gt\255) 18 477 -405 s
(SetDocumentPath) 87 154 -421 s
(\).) 8 241 -421 s
ltb 12 sf
(Return value:) 1 70 99 -445 j
ltr 12 sf
(the document that has been created or 0 if the document has not been cre\255) 14 361 134 -465 j
(ated.) 24 134 -481 s
(6.1.2) 23 99 -513 s
(GtOpenDocument) 87 131 -513 s
(Opens an existing document for subsequent operations.) 6 267 99 -527 j
481 -551 113 -551 0 3 2 Seg
481 -554 113 -554 0 1 2 Seg
lhr 14 sf
(Document GtOpenDocument\(char *documentName, int) 3 369 113 -576 j
(accessMode\)) 86 113 -595 s
481 -611 113 -611 0 3 2 Seg
481 -608 113 -608 0 1 2 Seg
lcr 12 sf
(Document GtOpenDocument\(documentName, accessMode\)) 2 329 141 -634 j
(char *documentName;) 1 128 141 -647 j
(int accessMode;) 1 101 141 -660 j
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
12 413 669 nwpage
%%Page: 15 15
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(13) 12 484 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(documentName) 75 134 -145 s
ltr 12 sf
(: name of the file containing the document to be open. \(max\255) 11 286 209 -145 j
(imum length 19 characters\). The directory name is not part of this pa\255) 12 342 154 -161 j
(rameter \(see ) 2 65 154 -180 j
(GtSetDocumentPath) 100 219 -180 s
(\).) 8 319 -180 s
lti 12 sf
(accessMode) 59 134 -200 s
ltr 12 sf
(: 0 = read only, 1 = read-write.) 7 149 193 -200 j
ltb 12 sf
(Return value:) 1 70 99 -224 j
ltr 12 sf
(the opened document, or 0 if the document cannot be open.) 10 279 134 -243 j
(6.1.3) 23 99 -275 s
(GtSaveDocument) 85 131 -275 s
(Saves a document into a file in Thot format \(.PIV\). The document is not closed by the) 16 396 99 -289 j
(function and can still be accessed by the application program.) 9 292 99 -305 j
481 -329 113 -329 0 3 2 Seg
481 -332 113 -332 0 1 2 Seg
lhr 14 sf
(void GtSaveDocument\(Document document, char) 3 369 113 -354 j
(*documentName\)) 108 113 -373 s
481 -389 113 -389 0 3 2 Seg
481 -386 113 -386 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -418 s
lti 12 sf
(document) 46 134 -437 s
ltr 12 sf
(: the document to be saved.) 5 132 180 -437 j
lti 12 sf
(documentName) 75 134 -456 s
ltr 12 sf
(: name of the file in which the document must be saved.) 11 286 209 -456 j
(\(maximum length 19 characters\). The directory name is not part of this) 11 342 154 -472 j
(parameter \(see ) 2 79 154 -492 j
(GtSetDocumentPath) 100 232 -492 s
(\). If the documentName is not the) 6 163 332 -492 j
(same as the one used when opening \(see ) 8 204 154 -511 j
(GtOpenDocument) 87 358 -511 s
(\) or creat\255) 2 50 445 -511 j
(ing \(see ) 2 44 154 -530 j
(GtNewDocument) 84 198 -530 s
(\) the document, a new file is created and the) 9 213 282 -530 j
(file with the old name is unchanged, i. e. a new version is created. If) 14 342 154 -546 j
(necessary, the old file can be removed by the function ) 10 259 154 -565 j
(GtRemoveDocu\255) 83 413 -565 s
(ment) 24 154 -582 s
(.) 3 178 -582 s
(6.1.4) 23 99 -613 s
(GtExportDocument) 94 131 -613 s
(Saves a document into a file in a particular format. The output format is specified by a) 16 396 99 -628 j
(translation schema. The document is not closed by the function and it can still be) 14 396 99 -644 j
(accessed by the application program.) 4 177 99 -660 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
13 413 669 nwpage
%%Page: 16 16
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(14) 12 99 -77 s
481 -126 113 -126 0 3 2 Seg
481 -129 113 -129 0 1 2 Seg
lhr 14 sf
(void GtExportDocument\(Document document, char) 3 369 113 -151 j
(*fileName, char *TSchemaName\)) 2 203 113 -170 j
481 -185 113 -185 0 3 2 Seg
481 -182 113 -182 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -214 s
lti 12 sf
(document) 46 134 -233 s
ltr 12 sf
(: the document to be exported.) 5 145 180 -233 j
lti 12 sf
(fileName) 45 134 -252 s
ltr 12 sf
(: name of the file in which the document must be saved, including the) 13 316 180 -252 j
(directory name.) 1 74 154 -269 j
lti 12 sf
(TSchemaName) 72 134 -288 s
ltr 12 sf
(: name of the translation schema to be used. The directory) 10 289 206 -288 j
(name must not be specified in parameter TSchemaName. See function) 9 342 154 -304 j
(GtSetSchemaPath.) 91 154 -321 s
(6.1.5) 23 99 -352 s
(GtCloseDocument) 89 131 -352 s
(Closes a document that is no longer needed and releases all ressources allocated to) 13 396 99 -367 j
(the document. This function does not save the document.) 8 272 99 -383 j
481 -407 113 -407 0 3 2 Seg
481 -410 113 -410 0 1 2 Seg
lhr 14 sf
(void GtCloseDocument\(Document document\)) 2 278 113 -432 j
481 -447 113 -447 0 3 2 Seg
481 -444 113 -444 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -476 s
lti 12 sf
(document) 46 134 -495 s
ltr 12 sf
(: the document to be closed.) 5 133 180 -495 j
(6.1.6) 23 99 -527 s
(GtRemoveDocument) 101 131 -527 s
(Closes a document, releases all ressources allocated to that document, removes all) 11 396 99 -541 j
(files related to the document and updates all links connecting the removed document) 12 396 99 -558 j
(with other documents.) 2 107 99 -574 j
481 -598 113 -598 0 3 2 Seg
481 -601 113 -601 0 1 2 Seg
lhr 14 sf
(void GtRemoveDocument\(Document document\)) 2 293 113 -623 j
481 -638 113 -638 0 3 2 Seg
481 -636 113 -636 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -667 s
lti 12 sf
(document) 46 134 -686 s
ltr 12 sf
(: the document to be removed.) 5 144 180 -686 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
14 413 669 nwpage
%%Page: 17 17
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(15) 12 484 -77 s
(6.1.7) 23 99 -121 s
(GtSetDocumentPath) 100 131 -121 s
(Sets a new list of document directories. This list replaces the existing one. It is used) 15 396 99 -135 j
(for searching a document when it is open either by the user or by the application) 15 396 99 -152 j
(program \(see ) 2 67 99 -171 j
(GtOpenDocument) 87 166 -171 s
(\). The first directory in the list is used when a new) 11 242 253 -171 j
(document is created \(see GtNewDocument\).) 4 216 99 -187 j
481 -211 113 -211 0 3 2 Seg
481 -214 113 -214 0 1 2 Seg
lhr 14 sf
(void GtSetDocumentPath\(char *path\)) 2 229 113 -236 j
481 -252 113 -252 0 3 2 Seg
481 -249 113 -249 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -280 s
lti 12 sf
(path) 21 134 -300 s
ltr 12 sf
(: the directory list, where directory names are separated by the character) 11 340 156 -300 j
(':'.) 13 154 -316 s
(6.1.8) 23 99 -348 s
(GtAppendDocumentPath) 121 131 -348 s
(Appends a new directory in the list of document directories. The function controls) 12 396 99 -362 j
(that the parameter is the name of an existing directory and sets an error if it is not. If) 18 396 99 -378 j
(the new directory is within the list of document directories yet, the function has no) 14 396 99 -395 j
(effect.) 29 99 -411 s
481 -435 113 -435 0 3 2 Seg
481 -438 113 -438 0 1 2 Seg
lhr 14 sf
(void GtAppendDocumentPath\(aDirectory\)) 1 256 113 -460 j
481 -475 113 -475 0 3 2 Seg
481 -472 113 -472 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -504 s
lti 12 sf
(aDirectory) 52 134 -523 s
ltr 12 sf
(: the new directory name.) 4 121 186 -523 j
(6.1.9) 23 99 -555 s
(GtSetSchemaPath) 88 131 -555 s
(Sets a new list of schema directories. This list replaces the existing one. It is used for) 16 396 99 -569 j
(searching schemas.) 1 94 99 -586 j
481 -610 113 -610 0 3 2 Seg
481 -612 113 -612 0 1 2 Seg
lhr 14 sf
(void GtSetSchemaPath\(char *path\)) 2 217 113 -635 j
481 -650 113 -650 0 3 2 Seg
481 -647 113 -647 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -679 s
lti 12 sf
(path) 21 134 -698 s
ltr 12 sf
(: the directory list, where directory names are separated by the character) 11 340 156 -698 j
(':'.) 13 154 -714 s
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
15 413 669 nwpage
%%Page: 18 18
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(16) 12 99 -77 s
ltr 14 sf
(6.2) 16 99 -122 s
(Modificators) 70 126 -122 s
ltr 12 sf
(6.2.1) 23 99 -156 s
(GtNewNature) 69 131 -156 s
(Adds a new nature in a structure schema and returns the structure schema of the new) 15 396 99 -170 j
(nature. If the nature already exists in that structure schema, the function simply) 12 396 99 -186 j
(returns the structure schema of that nature.) 6 208 99 -203 j
481 -227 113 -227 0 3 2 Seg
481 -229 113 -229 0 1 2 Seg
lhr 14 sf
(SSchema GtNewNature\(SSchema schema, char) 3 369 113 -252 j
(*natureName, char *presentationName\)) 2 244 113 -271 j
481 -286 113 -286 0 3 2 Seg
481 -283 113 -283 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -315 s
lti 12 sf
(schema) 36 134 -334 s
ltr 12 sf
(: the structure schema to which the nature is added.) 9 248 170 -334 j
lti 12 sf
(natureName) 60 134 -353 s
ltr 12 sf
(: name of the nature to be added in the structure schema.) 11 272 194 -353 j
lti 12 sf
(presentationName) 89 134 -372 s
ltr 12 sf
(: name of the presentation schema to be associated with) 9 272 224 -372 j
(the extension schema. If presentationName is an empty string, the de\255) 10 342 154 -389 j
(fault presentation schema is associated. If the nature already exists,) 9 342 154 -405 j
(presentationName is ignored.) 2 142 154 -421 j
ltb 12 sf
(Return value:) 1 70 99 -445 j
ltr 12 sf
(the structure schema of the new nature; NULL if the structure schema has not) 13 361 134 -465 j
(been loaded.) 1 60 134 -481 j
(6.2.2) 23 99 -513 s
(GtNewSchemaExtension) 122 131 -513 s
(Loads a structure schema extension and associates it with a given document.) 11 372 99 -527 j
481 -551 113 -551 0 3 2 Seg
481 -554 113 -554 0 1 2 Seg
lhr 14 sf
(SSchema GtNewSchemaExtension\(Document document,) 2 369 113 -576 j
(char *extensionName, char *presentationName\)) 3 296 113 -595 j
481 -611 113 -611 0 3 2 Seg
481 -608 113 -608 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -639 s
lti 12 sf
(document) 46 134 -659 s
ltr 12 sf
(: the document whose structure schema must be extended.) 8 281 180 -659 j
lti 12 sf
(extensionName) 76 134 -678 s
ltr 12 sf
(: name of the extension schema.) 5 154 210 -678 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
16 413 669 nwpage
%%Page: 19 19
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(17) 12 484 -77 s
lti 12 sf
(presentationName) 89 134 -121 s
ltr 12 sf
(: name of the presentation schema to be associated with) 9 272 224 -121 j
(the extension schema. If presentationName is an empty string, the de\255) 10 342 154 -137 j
(fault presentation schema is associated.) 4 193 154 -154 j
ltb 12 sf
(Return value:) 1 70 99 -178 j
ltr 12 sf
(the extension schema, NULL if the extension schema has not been loaded.) 11 358 134 -197 j
(6.2.3) 23 99 -228 s
(GtRemoveSchemaExtension) 138 131 -228 s
(Removes a structure schema extension from a given document. Removes also from) 11 396 99 -243 j
(the document all attributes and elements defined in that structure schema exten\255) 11 396 99 -259 j
(sion.) 23 99 -276 s
481 -300 113 -300 0 3 2 Seg
481 -302 113 -302 0 1 2 Seg
lhr 14 sf
(void GtRemoveSchemaExtension\(Document document,) 2 369 113 -324 j
(SSchema extension, int *removedElements, int) 4 369 113 -344 j
(*removedAttributes\)) 126 113 -363 s
481 -378 113 -378 0 3 2 Seg
481 -375 113 -375 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -407 s
lti 12 sf
(document) 46 134 -426 s
ltr 12 sf
(: the document.) 2 73 180 -426 j
lti 12 sf
(extension) 47 134 -445 s
ltr 12 sf
(: the structure schema extension to be removed.) 7 230 181 -445 j
ltb 12 sf
(Return parameters:) 1 103 99 -469 j
lti 12 sf
(removedElements) 86 134 -489 s
ltr 12 sf
(: number of elements actually removed.) 5 187 221 -489 j
lti 12 sf
(removedAttributes) 90 134 -508 s
ltr 12 sf
(: number of attributes actually removed.) 5 190 225 -508 j
(6.2.4) 23 99 -540 s
(GtSetPSchema) 73 131 -540 s
(Sets or changes the main presentation schema of a document. The document must be) 13 396 99 -554 j
(open, but no view must be open for that document.) 9 241 99 -570 j
481 -594 113 -594 0 3 2 Seg
481 -597 113 -597 0 1 2 Seg
lhr 14 sf
(void GtSetPSchema\(Document document, char) 3 369 113 -619 j
(*presentationName\)) 124 113 -638 s
481 -654 113 -654 0 3 2 Seg
481 -651 113 -651 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
17 413 669 nwpage
%%Page: 20 20
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(18) 12 99 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(document) 46 134 -145 s
ltr 12 sf
(: the document.) 2 73 180 -145 j
lti 12 sf
(presentationName) 89 134 -164 s
ltr 12 sf
(: Name of the presentation schema to be associated with) 9 272 224 -164 j
(the document.) 1 67 154 -180 j
(6.2.5) 23 99 -212 s
(GtSetDocumentDirectory) 123 131 -212 s
(Sets the directory to which the document will be saved when calling GtSaveDocu\255) 12 396 99 -227 j
(ment.) 27 99 -243 s
481 -267 113 -267 0 3 2 Seg
481 -270 113 -270 0 1 2 Seg
lhr 14 sf
(void GtSetDocumentDirectory\(Document document, char) 3 369 113 -292 j
(*directory\)) 65 113 -311 s
481 -326 113 -326 0 3 2 Seg
481 -324 113 -324 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -355 s
lti 12 sf
(document) 46 134 -374 s
ltr 12 sf
(: the document whose directory is set.) 6 182 180 -374 j
lti 12 sf
(directory) 43 134 -394 s
ltr 12 sf
(: new document directory.) 3 123 178 -394 j
(6.2.6) 23 99 -425 s
(GtSetDocumentName) 107 131 -425 s
(Sets or changes the name of a document. The document must be loaded.) 12 345 99 -440 j
481 -464 113 -464 0 3 2 Seg
481 -467 113 -467 0 1 2 Seg
lhr 14 sf
(void GtSetDocumentName\(Document document, char) 3 369 113 -489 j
(*documentName\)) 108 113 -508 s
481 -523 113 -523 0 3 2 Seg
481 -520 113 -520 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -552 s
lti 12 sf
(document) 46 134 -571 s
ltr 12 sf
(: the document whose name is set.) 6 166 180 -571 j
lti 12 sf
(documentName) 75 134 -590 s
ltr 12 sf
(: new document name. This is only the name, without any) 10 286 209 -590 j
(suffix, without directory name. See function GtSetDocumentDirectory for) 7 342 154 -607 j
(changing the directory of a document.) 5 178 154 -623 j
(The name must not exceed 31 characters.) 6 199 154 -639 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
18 413 669 nwpage
%%Page: 21 21
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(19) 12 484 -77 s
(6.2.7) 23 99 -121 s
(GtSetDocumentAccessMode) 141 131 -121 s
(Sets the access mode for a document.) 6 180 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtSetDocumentAccessMode\(Document document, int) 3 369 113 -184 j
(accessMode\)) 86 113 -204 s
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(document) 46 134 -267 s
ltr 12 sf
(: the document whose access mode is changed.) 7 226 180 -267 j
lti 12 sf
(accessMode) 59 134 -286 s
ltr 12 sf
(: 0 = read only, 1 = read-write.) 7 149 193 -286 j
(6.2.8) 23 99 -318 s
(GtSetDocumentBackUpInterval) 153 131 -318 s
(Sets the backup interval for a document.) 6 192 99 -332 j
481 -356 113 -356 0 3 2 Seg
481 -359 113 -359 0 1 2 Seg
lhr 14 sf
(void GtSetDocumentBackUpInterval\(Document document,) 2 369 113 -381 j
(int interval\)) 1 68 113 -400 j
481 -416 113 -416 0 3 2 Seg
481 -413 113 -413 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -444 s
lti 12 sf
(document) 46 134 -464 s
ltr 12 sf
(: the document whose backup interval is changed.) 7 237 180 -464 j
lti 12 sf
(interval) 37 134 -483 s
ltr 12 sf
(: 0 : the backup mechanism must be disabled) 8 213 172 -483 j
(positive integer : number of characters typed which triggers automatic) 9 342 154 -499 j
(save of the document into a .BAK file.) 7 181 154 -516 j
(6.2.9) 23 99 -547 s
(GtSetNotificationMode) 112 131 -547 s
(Sets the ECF notification mode for a document.) 7 227 99 -562 j
481 -586 113 -586 0 3 2 Seg
481 -588 113 -588 0 1 2 Seg
lhr 14 sf
(void GtSetNotificationMode\(Document document, int) 3 369 113 -611 j
(notificationMode\)) 106 113 -630 s
481 -645 113 -645 0 3 2 Seg
481 -642 113 -642 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
19 413 669 nwpage
%%Page: 22 22
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(20) 12 99 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(document) 46 134 -145 s
ltr 12 sf
(: the document whose notification mode is changed.) 7 246 180 -145 j
lti 12 sf
(notificationMode) 84 134 -164 s
ltr 12 sf
(: 0 = only roots of created, copied and deleted subtrees) 10 276 219 -164 j
(must be notified, 1 = all elements of created, copied and deleted subtrees) 12 342 154 -180 j
(must be notified.) 2 80 154 -197 j
(6.2.10) 29 99 -228 s
(GtSetDocumentModified) 120 136 -228 s
(Notifies the tool kit that a document has been modified by the application. As a) 14 396 99 -243 j
(consequence, the user will be asked to save the document when closing it.) 12 356 99 -259 j
481 -283 113 -283 0 3 2 Seg
481 -286 113 -286 0 1 2 Seg
lhr 14 sf
(void GtSetDocumentModified\(Document document\)) 2 315 113 -308 j
481 -324 113 -324 0 3 2 Seg
481 -321 113 -321 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -352 s
lti 12 sf
(document) 46 134 -372 s
ltr 12 sf
(: the document.) 2 73 180 -372 j
(6.2.11) 29 99 -403 s
(GtSetDocumentUnmodified) 132 136 -403 s
(Notifies the tool kit that a document must be considered as not modified. As a) 14 396 99 -418 j
(consequence, if no further modification is made to that document, the user will not be) 14 396 99 -434 j
(asked to save the document when closing it.) 7 212 99 -450 j
481 -474 113 -474 0 3 2 Seg
481 -477 113 -477 0 1 2 Seg
lhr 14 sf
(void GtSetDocumentUnmodified\(Document document\)) 2 330 113 -499 j
481 -515 113 -515 0 3 2 Seg
481 -512 113 -512 0 1 2 Seg
ltb 12 sf
(Parameter :) 1 63 99 -543 j
lti 12 sf
(document) 46 134 -563 s
ltr 12 sf
( : the document.) 3 76 180 -563 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
20 413 669 nwpage
%%Page: 23 23
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(21) 12 484 -77 s
ltr 14 sf
(6.3) 16 99 -122 s
(Accessors) 60 126 -122 s
ltr 12 sf
(6.3.1) 23 99 -156 s
(GtGetSchemaExtension) 117 131 -156 s
(Returns the extension structure schema ) 5 195 113 -176 j
(associated with the given document) 4 172 308 -176 j
(.) 3 480 -176 s
481 -200 113 -200 0 3 2 Seg
481 -203 113 -203 0 1 2 Seg
lhr 14 sf
(SSchema GtGetSchemaExtension\(Document document,) 2 369 113 -225 j
(char *ExtensionName\)) 1 139 113 -244 j
481 -259 113 -259 0 3 2 Seg
481 -256 113 -256 0 1 2 Seg
ltb 12 sf
(Parameter :) 1 63 99 -288 j
lti 12 sf
(document) 46 134 -307 s
ltr 12 sf
( : the document) 3 81 180 -307 j
( for which the extension structure schema is) 7 234 261 -307 j
(asked) 29 154 -324 s
(.) 3 182 -324 s
lti 12 sf
(ExtensionName) 78 134 -343 s
ltr 12 sf
( : the extension name.) 4 106 212 -343 j
(6.3.2) 23 99 -374 s
(GtGetDocumentName) 108 131 -374 s
(Returns the name of a document.) 5 157 99 -389 j
481 -413 113 -413 0 3 2 Seg
481 -416 113 -416 0 1 2 Seg
lhr 14 sf
(char *GtGetDocumentName\(Document document\)) 2 309 113 -438 j
481 -453 113 -453 0 3 2 Seg
481 -450 113 -450 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -482 s
lti 12 sf
(document) 46 134 -501 s
ltr 12 sf
(: the document whose name is asked.) 6 180 180 -501 j
ltb 12 sf
(Return value:) 1 70 99 -525 j
ltr 12 sf
(name of that document.) 3 111 134 -544 j
(6.3.3) 23 99 -576 s
(GtGetDocumentFromName) 134 131 -576 s
(Returns the document having a given name.) 6 209 99 -590 j
481 -614 113 -614 0 3 2 Seg
481 -617 113 -617 0 1 2 Seg
lhr 14 sf
(Document GtGetDocumentFromName\(char) 1 369 113 -639 j
(*documentName\)) 108 113 -659 s
481 -674 113 -674 0 3 2 Seg
481 -671 113 -671 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
21 413 669 nwpage
%%Page: 24 24
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(22) 12 99 -77 s
ltb 12 sf
(Parameter:) 60 99 -126 s
lti 12 sf
(documentName) 75 134 -145 s
ltr 12 sf
(: the document name.) 3 102 209 -145 j
ltb 12 sf
(Return value:) 1 70 99 -169 j
ltr 12 sf
(the document having that name.) 4 153 134 -188 j
(6.3.4) 23 99 -220 s
(GtGetDocumentSSchema) 124 131 -220 s
(Returns the main structure schema of a document.) 7 240 99 -234 j
481 -258 113 -258 0 3 2 Seg
481 -261 113 -261 0 1 2 Seg
lhr 14 sf
(SSchema GtGetDocumentSSchema\(Document document\)) 2 356 113 -283 j
481 -299 113 -299 0 3 2 Seg
481 -296 113 -296 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -327 s
lti 12 sf
(document) 46 134 -347 s
ltr 12 sf
(: the document for which the structure schema is asked.) 9 266 180 -347 j
ltb 12 sf
(Return value:) 1 70 99 -371 j
ltr 12 sf
(the structure schema of that document.) 5 186 134 -390 j
(6.3.5) 23 99 -421 s
(GtGetSSchemaName) 104 131 -421 s
(Returns the name of a structure schema.) 6 194 99 -436 j
481 -460 113 -460 0 3 2 Seg
481 -463 113 -463 0 1 2 Seg
lhr 14 sf
(char *GtGetSSchemaName\(SSchema schema\)) 2 290 113 -485 j
481 -500 113 -500 0 3 2 Seg
481 -497 113 -497 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -529 s
lti 12 sf
(schema) 36 134 -548 s
ltr 12 sf
(: the structure schema of interest.) 5 161 170 -548 j
ltb 12 sf
(Return value:) 1 70 99 -572 j
ltr 12 sf
(name of that structure schema.) 4 148 134 -591 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
22 413 669 nwpage
%%Page: 25 25
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(23) 12 484 -77 s
(6.3.6) 23 99 -121 s
(GtGetPSchemaName) 104 131 -121 s
(Returns the name of the presentation schema currently associated with a given) 11 396 99 -135 j
(structure schema.) 1 85 99 -152 j
481 -176 113 -176 0 3 2 Seg
481 -179 113 -179 0 1 2 Seg
lhr 14 sf
(char *GtGetPSchemaName\(SSchema schema\)) 2 290 113 -201 j
481 -216 113 -216 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -245 s
lti 12 sf
(schema) 36 134 -264 s
ltr 12 sf
(: the structure schema of interest.) 5 161 170 -264 j
ltb 12 sf
(Return value:) 1 70 99 -288 j
ltr 12 sf
(name of the associated presentation schema.) 5 216 134 -307 j
(6.3.7) 23 99 -339 s
(GtGetDocumentDirectory) 125 131 -339 s
(Returns the directory to which the document is supposed to be saved.) 11 334 99 -353 j
481 -377 113 -377 0 3 2 Seg
481 -380 113 -380 0 1 2 Seg
lhr 14 sf
(void GtGetDocumentDirectory\(Document document, char) 3 369 113 -402 j
(*buffer, int bufferLength\)) 2 146 113 -421 j
481 -437 113 -437 0 3 2 Seg
481 -434 113 -434 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -466 s
lti 12 sf
(document) 46 134 -485 s
ltr 12 sf
(: the document whose directory is asked.) 6 196 180 -485 j
lti 12 sf
(buffer) 29 134 -504 s
ltr 12 sf
(: a buffer provided by the caller.) 6 150 163 -504 j
lti 12 sf
(bufferLength) 61 134 -523 s
ltr 12 sf
(: the length of that buffer.) 5 120 196 -523 j
ltb 12 sf
(Return parameter:) 1 97 99 -547 j
lti 12 sf
(buffer) 29 134 -566 s
ltr 12 sf
(: the document directory.) 3 118 163 -566 j
(6.3.8) 23 99 -598 s
(GtGetSSchema) 75 131 -598 s
(Returns a structure schema whose name is known and that is used in a given doc\255) 15 396 99 -612 j
(ument.) 33 99 -629 s
481 -653 113 -653 0 3 2 Seg
481 -656 113 -656 0 1 2 Seg
lhr 14 sf
(SSchema GtGetSSchema\(char *name, Document) 3 369 113 -678 j
(document\)) 65 113 -697 s
481 -712 113 -712 0 3 2 Seg
481 -709 113 -709 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
23 413 669 nwpage
%%Page: 26 26
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(24) 12 99 -77 s
ltb 12 sf
(Parameter:) 60 99 -126 s
lti 12 sf
(name) 26 134 -145 s
ltr 12 sf
(: the name of the structure schema of interest.) 8 220 160 -145 j
lti 12 sf
(document) 46 134 -164 s
ltr 12 sf
(: the document that uses this structure schema.) 7 228 180 -164 j
ltb 12 sf
(Return value:) 1 70 99 -188 j
ltr 12 sf
(the structure schema having this name, or NULL if this structure schema is) 12 361 134 -207 j
(not loaded or not used by the document.) 7 191 134 -224 j
(6.3.9) 23 99 -255 s
(GtSameSSchemas) 89 131 -255 s
(Compares two structure schemas.) 3 164 99 -270 j
481 -294 113 -294 0 3 2 Seg
481 -297 113 -297 0 1 2 Seg
lhr 14 sf
(int GtSameSSchemas\(SSchema schema1, SSchema) 3 369 113 -319 j
(schema2\)) 61 113 -338 s
481 -353 113 -353 0 3 2 Seg
481 -350 113 -350 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -382 s
lti 12 sf
(schema1) 41 134 -401 s
ltr 12 sf
(: first structure schema.) 3 113 176 -401 j
lti 12 sf
(schema2) 41 134 -420 s
ltr 12 sf
(: second structure schema.) 3 128 176 -420 j
ltb 12 sf
(Return value:) 1 70 99 -444 j
ltr 12 sf
(0 if both schemas are different, 1 if they are identical.) 10 252 134 -464 j
(6.3.10) 29 99 -495 s
(GtGiveSchemasOfDocument) 139 136 -495 s
(Returns the names of the main structure schema and presentation schema associ\255) 11 396 99 -510 j
(ated with a given document. The document does not need to be open and the schemas) 15 396 99 -526 j
(are not loaded by this function.) 5 147 99 -542 j
481 -566 113 -566 0 3 2 Seg
481 -569 113 -569 0 1 2 Seg
lhr 14 sf
(void GtGiveSchemasOfDocument\(char *documentName,) 2 369 113 -591 j
(char *structureName, char *presentationName\)) 3 292 113 -611 j
481 -626 113 -626 0 3 2 Seg
481 -623 113 -623 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -655 s
lti 12 sf
(documentName) 75 134 -674 s
ltr 12 sf
(: Name of the document to be checked \(maximum length 19) 10 286 209 -674 j
(characters\).) 58 154 -690 s
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
24 413 669 nwpage
%%Page: 27 27
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(25) 12 484 -77 s
lti 12 sf
(structureName) 71 134 -121 s
ltr 12 sf
(: buffer.) 1 36 205 -121 j
lti 12 sf
(presentationName) 89 134 -140 s
ltr 12 sf
(: buffer.) 1 36 224 -140 j
ltb 12 sf
(Return value:) 1 70 99 -164 j
lti 12 sf
(structureName) 71 134 -183 s
ltr 12 sf
(: Name of the document structure schema.) 6 202 205 -183 j
lti 12 sf
(presentationName) 89 134 -203 s
ltr 12 sf
(: Name of the document presentation schema.) 6 219 224 -203 j
(6.3.11) 29 99 -234 s
(GtNextSchemaExtension) 123 136 -234 s
(Returns a structure schema extension associated with a given document.) 9 350 99 -249 j
481 -273 113 -273 0 3 2 Seg
481 -276 113 -276 0 1 2 Seg
lhr 14 sf
(void GtNextSchemaExtension\(Document document,) 2 369 113 -298 j
(SSchema *extension\)) 1 133 113 -317 j
481 -332 113 -332 0 3 2 Seg
481 -329 113 -329 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -361 s
lti 12 sf
(document) 46 134 -380 s
ltr 12 sf
(: the document of interest.) 4 125 180 -380 j
lti 12 sf
(extension) 47 134 -399 s
ltr 12 sf
(: a schema extension of that document. NULL for accessing the first) 11 314 181 -399 j
(schema extension.) 1 89 154 -416 j
ltb 12 sf
(Return parameter:) 1 97 99 -440 j
lti 12 sf
(extension) 47 134 -459 s
ltr 12 sf
(: the schema extension that follows or the first schema extension of) 11 314 181 -459 j
(the document if parameter extension is NULL. NULL if there is no more) 12 342 154 -475 j
(schema extension.) 1 89 154 -492 j
(6.3.12) 29 99 -523 s
(GtNextNature) 70 136 -523 s
(Returns the structure schema of a nature used in a given document.) 11 323 99 -538 j
481 -562 113 -562 0 3 2 Seg
481 -564 113 -564 0 1 2 Seg
lhr 14 sf
(void GtNextNature\(Document document, SSchema *nature\)) 4 365 113 -587 j
481 -602 113 -602 0 3 2 Seg
481 -599 113 -599 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -631 s
lti 12 sf
(document) 46 134 -650 s
ltr 12 sf
(: the document of interest.) 4 125 180 -650 j
lti 12 sf
(nature) 31 134 -669 s
ltr 12 sf
(: the structure schema of a nature for that document. NULL for ac\255) 12 330 165 -669 j
(cessing the first nature.) 3 113 154 -685 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
25 413 669 nwpage
%%Page: 28 28
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(26) 12 99 -77 s
ltb 12 sf
(Return parameter:) 1 97 99 -126 j
lti 12 sf
(nature) 31 134 -145 s
ltr 12 sf
(: the structure schema of the next nature, or the structure schema of the) 13 330 165 -145 j
(first nature of the document if parameter nature was NULL when calling.) 11 342 154 -161 j
(NULL if there is no more nature for the document.) 9 238 154 -178 j
(6.3.13) 29 99 -209 s
(GtIsDocumentModified) 113 136 -209 s
(Indicates whether a document has been modified by the user or not. Modifications) 12 396 99 -224 j
(made by the application program are not considered, except when explicitly notified) 11 396 99 -240 j
(by ) 1 14 99 -259 j
(GtSetDocumentModified) 120 113 -259 s
(.) 3 233 -259 s
481 -283 113 -283 0 3 2 Seg
481 -286 113 -286 0 1 2 Seg
lhr 14 sf
(int GtIsDocumentModified\(Document document\)) 2 296 113 -308 j
481 -324 113 -324 0 3 2 Seg
481 -321 113 -321 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -352 s
lti 12 sf
(document) 46 134 -372 s
ltr 12 sf
(: the document.) 2 73 180 -372 j
ltb 12 sf
(Return value:) 1 70 99 -396 j
ltr 12 sf
(1 if the document has been modified by the user since it has been saved,) 14 361 134 -415 j
(loaded or created, 0 if it has not been modified.) 9 223 134 -431 j
(6.3.14) 29 99 -463 s
(GtGetDocumentBackUpInterval) 155 136 -463 s
(Returns the backup interval for a document.) 6 208 99 -477 j
481 -501 113 -501 0 3 2 Seg
481 -504 113 -504 0 1 2 Seg
lhr 14 sf
(int GtGetDocumentBackUpInterval\(Document document\)) 2 348 113 -526 j
481 -541 113 -541 0 3 2 Seg
481 -539 113 -539 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -570 s
lti 12 sf
(document) 46 134 -589 s
ltr 12 sf
(: the document whose backup interval is asked.) 7 227 180 -589 j
ltb 12 sf
(Return value:) 1 70 99 -613 j
ltr 12 sf
(0 : the backup mechanism is disabled) 6 178 134 -633 j
(positive integer : number of typed characters which trigger an autamatic save) 11 361 134 -649 j
(of the document into a .BAK file.) 6 156 134 -665 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
26 413 669 nwpage
%%Page: 29 29
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(27) 12 484 -77 s
(6.3.15) 29 99 -121 s
(GtGetDocumentAccessMode) 143 136 -121 s
(Returns the access mode for a document.) 6 197 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(int GtGetDocumentAccessMode\(Document document\)) 2 338 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -228 s
lti 12 sf
(document) 46 134 -248 s
ltr 12 sf
(: the document whose access mode is asked.) 7 215 180 -248 j
ltb 12 sf
(Return value:) 1 70 99 -272 j
ltr 12 sf
(0 if access mode is read only, 1 if access mode is read-write.) 12 293 134 -291 j
(6.3.16) 29 99 -323 s
(GtGetNotificationMode) 114 136 -323 s
(Returns the ECF notification mode for a document.) 7 243 99 -337 j
481 -361 113 -361 0 3 2 Seg
481 -364 113 -364 0 1 2 Seg
lhr 14 sf
(int GtGetNotificationMode\(Document document\)) 2 294 113 -386 j
481 -401 113 -401 0 3 2 Seg
481 -398 113 -398 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -430 s
lti 12 sf
(document) 46 134 -449 s
ltr 12 sf
(: the document whose notification mode is asked.) 7 235 180 -449 j
ltb 12 sf
(Return value:) 1 70 99 -473 j
ltr 12 sf
(0 = if only roots of created and deleted subtrees must be notified,) 12 311 134 -492 j
(1 = all elements of created and deleted subtrees must be notified.) 11 313 134 -512 j
(6.3.17) 29 99 -543 s
(GtGetDocumentPath) 102 136 -543 s
(Returns the current list of the directories used when a document is open \(see) 13 396 99 -558 j
(GtOpenDocument) 87 99 -577 s
(\).) 8 186 -577 s
481 -601 113 -601 0 3 2 Seg
481 -604 113 -604 0 1 2 Seg
lhr 14 sf
(void GtGetDocumentPath\(char *buffer, int bufferLength\)) 4 339 113 -626 j
481 -641 113 -641 0 3 2 Seg
481 -638 113 -638 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -670 s
lti 12 sf
(buffer) 29 134 -689 s
ltr 12 sf
(: a buffer provided by the caller.) 6 150 163 -689 j
lti 12 sf
(bufferLength) 61 134 -708 s
ltr 12 sf
(: the length of that buffer.) 5 120 196 -708 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
27 413 669 nwpage
%%Page: 30 30
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(28) 12 99 -116 s
ltb 12 sf
(Return parameter:) 1 97 99 -165 j
lti 12 sf
(buffer) 29 134 -184 s
ltr 12 sf
(: the list of directories. Directory names are separated by the character) 11 332 163 -184 j
(':'.) 13 154 -201 s
(6.3.18) 29 99 -232 s
(GtGetSchemaPath) 90 136 -232 s
(Returns the current list of directories used for accessing schemas.) 9 316 99 -247 j
481 -271 113 -271 0 3 2 Seg
481 -274 113 -274 0 1 2 Seg
lhr 14 sf
(void GtGetSchemaPath\(char *buffer, int bufferLength\)) 4 326 113 -296 j
481 -311 113 -311 0 3 2 Seg
481 -308 113 -308 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -340 s
lti 12 sf
(buffer) 29 134 -359 s
ltr 12 sf
(: a buffer provided by the caller.) 6 150 163 -359 j
lti 12 sf
(bufferLength) 61 134 -378 s
ltr 12 sf
(: the length of that buffer.) 5 120 196 -378 j
ltb 12 sf
(Return parameter:) 1 97 99 -402 j
lti 12 sf
(buffer) 29 134 -421 s
ltr 12 sf
(: the list of directories. Directory names are separated by the character) 11 332 163 -421 j
(':'.) 13 154 -438 s
(6.3.19) 29 99 -469 s
(GtGetDocumentOfSavedElements) 167 136 -469 s
(Returns the document for which the last Copy or Cut command has been issued.) 13 383 99 -484 j
481 -508 113 -508 0 3 2 Seg
481 -511 113 -511 0 1 2 Seg
lhr 14 sf
(Document GtGetDocumentOfSavedElements\(\)) 1 284 113 -533 j
481 -548 113 -548 0 3 2 Seg
481 -545 113 -545 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -577 s
ltr 12 sf
(no parameter) 1 63 134 -596 j
ltb 12 sf
(Return value:) 1 70 99 -620 j
ltr 12 sf
(the document for which the last Copy or Cut command has been issued. 0 if) 14 361 134 -639 j
(the clipboard is empty.) 3 108 154 -656 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
28 413 669 nwpage
%%Page: 31 31
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(29) 12 484 -77 s
ltr 16 sf
(7) 8 99 -125 s
(Tree structures) 1 89 117 -125 j
ltr 12 sf
(The largest group of functions in the editing tool kit handles the tree structures) 13 382 113 -144 j
(that represent the logical organization of a document.) 7 254 99 -160 j
(The functions described in this section require that file ) 9 268 113 -180 j
lti 12 sf
(tree.h) 28 381 -180 s
ltr 12 sf
( be included in the) 4 86 409 -180 j
(module that calls them.) 3 111 99 -196 j
ltb 12 sf
(Main tree and associated trees) 4 162 99 -220 j
ltr 12 sf
(A document is in fact represented by a ) 8 187 134 -239 j
lti 12 sf
(forest) 28 322 -239 s
ltr 12 sf
(, as several trees may be nec\255) 6 146 349 -239 j
(essary for representing its abstract structure. The ) 7 242 134 -255 j
lti 12 sf
(main tree) 1 46 376 -255 j
ltr 12 sf
( represents the) 2 73 422 -255 j
(main stream of information in a document. In addition to that tree, there may) 13 361 134 -272 j
(exist some ) 2 58 134 -288 j
lti 12 sf
(associated trees) 1 79 192 -288 j
ltr 12 sf
(, which represent other streams of information,) 6 225 271 -288 j
(such as notes, illustrations, comments, etc. These associated trees are) 9 361 134 -304 j
(specified in the structure schema of the document.) 7 239 134 -321 j
ltb 12 sf
(Structure of abstract trees) 3 138 99 -345 j
ltr 12 sf
(Several functions in this group allow to build or modify the structure of an) 13 361 134 -364 j
(abstract tree. As stated above, the structure of these trees is constrained by) 12 361 134 -380 j
(structure schemas. Therefore the programmer must be careful when handling) 9 361 134 -396 j
(abstract trees. All functions that change a tree structure check that the result) 12 361 134 -413 j
(will be consistent with the structure schema and they raise an error in case of) 14 361 134 -429 j
(inconsistency.) 68 134 -445 s
(Checking can be made in two modes, a strict mode and a relaxed mode. In) 14 361 134 -465 j
(strict mode, all mandatory elements must always be present. In relaxed) 10 361 134 -481 j
(mode, even elements that are not stated optional in their structure schema) 11 361 134 -497 j
(can be omitted. The checking mode apply to the operations made by the ap\255) 13 361 134 -514 j
(plication program, but also to the editing commands issued by the end-user,) 11 361 134 -530 j
(when using ThotEditor. The function ) 5 192 134 -549 j
(GtSetCheckingMode) 101 326 -549 s
( \(see section) 2 68 427 -549 j
(7.2.6) 23 134 -565 s
(\) changes checking mode.) 3 123 157 -565 j
(For building a correct tree, the programmer must follow the structure schema.) 11 361 134 -585 j
(He or she can also consider existing Thot documents as examples. For that) 12 361 134 -601 j
(purpose, the function ) 3 104 134 -620 j
(GtListAbstractTree) 96 238 -620 s
( \(see section ) 3 65 334 -620 j
(7.5.1) 23 399 -620 s
(\) can produce a) 3 73 422 -620 j
(human-readable form of an abstract tree.) 5 198 134 -636 j
ltb 12 sf
(Element types) 1 73 99 -660 j
ltr 12 sf
(When creating or searching elements in an abstract tree, the type of the) 12 361 134 -680 j
(concerned elements must be given. As presented in section ) 9 297 134 -696 j
(4) 6 431 -696 s
(, an element) 2 59 437 -696 j
(type contains a type number, but this number does not appear explicitly in a) 13 361 134 -712 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
29 413 669 nwpage
%%Page: 32 32
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(30) 12 99 -77 s
(structure schema: it is generated by the schema compiler. For obtaining all) 11 361 134 -121 j
(type numbers of a structure schema, use the command:) 8 263 134 -137 j
lti 12 sf
(       printsch -h SchemaName) 9 143 134 -154 j
ltr 12 sf
(which lists on the standard output a file that can be included into a C program.) 15 361 134 -170 j
(This file also contains all attribute numbers of the schema) 9 276 134 -186 j
ltb 12 sf
(Order of operations) 2 103 99 -210 j
ltr 12 sf
(As a general rule, as soon as an element or a tree has been created \(by) 15 361 134 -229 j
(functions ) 1 46 134 -249 j
(GtNewElement) 76 180 -249 s
(, ) 1 6 256 -249 j
(GtNewTree) 58 262 -249 s
(, or ) 2 18 320 -249 j
(GtCopyTree) 60 338 -249 s
(\), it must be included) 4 98 397 -249 j
(into the main tree or an associated tree of a document \(by functions ) 13 333 134 -268 j
(GtIn\255) 28 468 -268 s
(sertSibling) 52 134 -287 s
(, ) 1 11 186 -287 j
(GtInsertFirstChild) 90 197 -287 s
(, or ) 2 26 287 -287 j
(GtAttachNewTree) 90 313 -287 s
(\), prior any other) 3 92 403 -287 j
(function can be performed.) 3 125 134 -303 j
ltb 12 sf
(Labels) 36 99 -327 s
ltr 12 sf
(Each element in a document has a unique identifier called a ) 11 299 134 -347 j
lti 12 sf
(label) 23 433 -347 s
ltr 12 sf
(. Labels) 1 39 456 -347 j
(are automatically assigned to elements by all functions that create new el\255) 11 361 134 -363 j
(ements \() 1 44 134 -382 j
(GtNewElement) 76 179 -382 s
(, ) 1 7 254 -382 j
(GtNewTree) 58 261 -382 s
(, or ) 2 20 319 -382 j
(GtCopyTree) 60 339 -382 s
(\). Labels can be ac\255) 4 97 398 -382 j
(cessed by functions ) 3 97 134 -401 j
(GtSearchElementByLabel) 126 231 -401 s
( and ) 2 23 357 -401 j
(GtGetElementLabel) 98 380 -401 s
(.) 3 478 -401 s
ltb 12 sf
(Access rights) 1 70 99 -425 j
ltr 12 sf
(An access right can be associated with each element. Three access rights are) 12 361 134 -444 j
(defined:) 37 134 -461 s
ltb 12 sf
(Read/write) 59 134 -480 s
ltr 12 sf
(The element can be seen and modified by the) 8 218 277 -480 j
(user.) 24 277 -496 s
ltb 12 sf
(Read only) 1 52 134 -516 j
ltr 12 sf
(The element can be seen by the user, but no) 9 218 277 -516 j
(changes are allowed.) 2 101 277 -532 j
ltb 12 sf
(Hidden) 36 134 -551 s
ltr 12 sf
(The element is not displayed and cannot be) 7 218 277 -551 j
(changed by the user.) 3 99 277 -567 j
(These rights only apply to the end user who manipulates a document inter\255) 12 361 134 -587 j
(actively with the commands provided by the Thot editor. They do not apply to) 13 361 134 -603 j
(the application program that manipulate the document through the editing) 9 361 134 -619 j
(tool kit.) 1 36 134 -636 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
30 413 669 nwpage
%%Page: 33 33
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(31) 12 484 -77 s
ltr 14 sf
(7.1) 16 99 -122 s
(Constructors) 72 126 -122 s
ltr 12 sf
(7.1.1) 23 99 -156 s
(GtNewElement) 76 131 -156 s
(Creates a new element of a given type.) 7 187 99 -170 j
481 -194 113 -194 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
lhr 14 sf
(Element GtNewElement\(Document document, ElementType) 3 369 113 -219 j
(elementType\)) 84 113 -238 s
481 -253 113 -253 0 3 2 Seg
481 -251 113 -251 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -282 s
lti 12 sf
(document) 46 134 -301 s
ltr 12 sf
(: the document for which the element is created.) 8 228 180 -301 j
lti 12 sf
(elementType) 62 134 -321 s
ltr 12 sf
(: type of the element to be created.) 7 166 197 -321 j
ltb 12 sf
(Return value:) 1 70 99 -345 j
ltr 12 sf
(the created element.) 2 98 134 -364 j
(7.1.2) 23 99 -396 s
(GtNewTree) 58 131 -396 s
(Creates a new element of a given type and all its descendants, according to the) 14 396 99 -410 j
(structure schema.) 1 85 99 -426 j
481 -450 113 -450 0 3 2 Seg
481 -453 113 -453 0 1 2 Seg
lhr 14 sf
(Element GtNewTree\(Document document, ElementType) 3 369 113 -475 j
(elementType , char *label\)) 3 161 113 -494 j
481 -510 113 -510 0 3 2 Seg
481 -507 113 -507 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -539 s
lti 12 sf
(document) 46 134 -558 s
ltr 12 sf
(: the document for which the tree is created.) 8 209 180 -558 j
lti 12 sf
(elementType) 62 134 -577 s
ltr 12 sf
(: type of the root element of the tree to be created.) 11 240 197 -577 j
lti 12 sf
(label) 23 134 -596 s
ltr 12 sf
(: label of the root element to be created. Empty string if the value of the) 15 338 157 -596 j
(label is undefined.) 2 86 154 -612 j
ltb 12 sf
(Return value:) 1 70 99 -636 j
ltr 12 sf
(the root element of the created tree.) 6 172 134 -656 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
31 413 669 nwpage
%%Page: 34 34
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(32) 12 99 -77 s
(7.1.3) 23 99 -121 s
(GtCopyTree) 60 131 -121 s
(Creates a copy of a tree.) 5 117 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(Element GtCopyTree\(Element sourceElement, Document) 3 369 113 -184 j
(sourceDocument, Document destinationDocument, Element) 3 369 113 -204 j
(parent\)) 44 113 -223 s
481 -238 113 -238 0 3 2 Seg
481 -235 113 -235 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -267 s
lti 12 sf
(sourceElement) 71 134 -286 s
ltr 12 sf
(: element to be copied.) 4 108 205 -286 j
lti 12 sf
(sourceDocument) 80 134 -305 s
ltr 12 sf
(: the document containing the element to be copied.) 8 245 214 -305 j
lti 12 sf
(destinationDocument) 104 134 -324 s
ltr 12 sf
(: the document for which the copy must be created.) 9 242 238 -324 j
lti 12 sf
(parent) 31 134 -344 s
ltr 12 sf
(: element that will become the parent of the created tree.) 10 271 165 -344 j
ltb 12 sf
(Return value:) 1 70 99 -368 j
ltr 12 sf
(the root element of the created tree.) 6 172 134 -387 j
(7.1.4) 23 99 -419 s
(GtCreateDescent) 85 131 -419 s
(Creates a new element of a given type and inserts it in the tree as a descendant of a) 18 396 99 -433 j
(given element. All elements of the descent required by the structure schema are also) 13 396 99 -449 j
(created.) 38 99 -466 s
481 -490 113 -490 0 3 2 Seg
481 -492 113 -492 0 1 2 Seg
lhr 14 sf
(Element GtCreateDescent\(Document document, Element) 3 369 113 -515 j
(element, ElementType elementType\)) 2 222 113 -534 j
481 -549 113 -549 0 3 2 Seg
481 -546 113 -546 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -578 s
lti 12 sf
(document) 46 134 -597 s
ltr 12 sf
(: the document for which the tree is created.) 8 209 180 -597 j
lti 12 sf
(element) 38 134 -616 s
ltr 12 sf
(: the element for which a descent will be created.) 9 233 173 -616 j
lti 12 sf
(elementType) 62 134 -636 s
ltr 12 sf
(: type of the element to be created as the last descendant.) 11 277 197 -636 j
ltb 12 sf
(Return value:) 1 70 99 -660 j
ltr 12 sf
(the last descendant created or NULL if the element cannot be created. This) 12 361 134 -679 j
(element is empty.) 2 85 134 -695 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
32 413 669 nwpage
%%Page: 35 35
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(33) 12 484 -77 s
(7.1.5) 23 99 -121 s
(GtCreateDescentWithContent) 148 131 -121 s
(Creates a new element of a given type and inserts it in the tree as a descendant of a) 18 396 99 -135 j
(given element. All elements of the descent required by the structure schema are) 12 396 99 -152 j
(created, as well as the content of the requested element.) 9 272 99 -168 j
481 -192 113 -192 0 3 2 Seg
481 -195 113 -195 0 1 2 Seg
lhr 14 sf
(Element GtCreateDescentWithContent\(Document) 1 369 113 -217 j
(document, Element element, ElementType elementType\)) 4 342 113 -236 j
481 -252 113 -252 0 3 2 Seg
481 -249 113 -249 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -280 s
lti 12 sf
(document) 46 134 -300 s
ltr 12 sf
(: the document for which the tree is created.) 8 209 180 -300 j
lti 12 sf
(element) 38 134 -319 s
ltr 12 sf
(: the element for which a descent will be created.) 9 233 173 -319 j
lti 12 sf
(elementType) 62 134 -338 s
ltr 12 sf
(: type of the element to be created as the last descendant.) 11 277 197 -338 j
ltb 12 sf
(Return value:) 1 70 99 -362 j
ltr 12 sf
(the last descendant created or NULL if the element cannot be created. If not) 13 361 134 -381 j
(NULL, the minimum content of that element has been created.) 9 298 134 -397 j
(7.1.6) 23 99 -429 s
(GtDeleteTree) 67 131 -429 s
(Deletes a tree \(or a single element\) and frees it. All references that points at any) 15 396 99 -444 j
(element of that tree are cancelled. The deleted element must not be used later.) 13 376 99 -460 j
481 -484 113 -484 0 3 2 Seg
481 -487 113 -487 0 1 2 Seg
lhr 14 sf
(void GtDeleteTree\(Element element, Document document\)) 4 356 113 -509 j
481 -524 113 -524 0 3 2 Seg
481 -521 113 -521 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -553 s
lti 12 sf
(element) 38 134 -572 s
ltr 12 sf
(: the element \(or root of the tree\) to be deleted.) 10 227 173 -572 j
lti 12 sf
(document) 46 134 -591 s
ltr 12 sf
(: the document containing the element to be deleted.) 8 250 180 -591 j
(7.1.7) 23 99 -623 s
(GtAttachNewTree) 90 131 -623 s
(Attaches an entire tree \(main tree or associated tree\) to a document.) 11 331 99 -637 j
481 -661 113 -661 0 3 2 Seg
481 -664 113 -664 0 1 2 Seg
lhr 14 sf
(void GtAttachNewTree\(Element tree, Document document\)) 4 360 113 -686 j
481 -702 113 -702 0 3 2 Seg
481 -699 113 -699 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
33 413 669 nwpage
%%Page: 36 36
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(34) 12 99 -77 s
ltb 12 sf
(Parameter:) 60 99 -126 s
lti 12 sf
(tree) 19 134 -145 s
ltr 12 sf
(: root of the tree to be attached. This tree must be a valid main tree or) 16 342 154 -145 j
(associated tree according to the document structure schema.) 7 290 154 -161 j
lti 12 sf
(document) 46 134 -180 s
ltr 12 sf
(: the document to which the tree is to be attached.) 10 239 180 -180 j
ltr 14 sf
(7.2) 16 99 -220 s
(Modificators) 70 126 -220 s
ltr 12 sf
(7.2.1) 23 99 -253 s
(GtInsertSibling) 74 131 -253 s
(Inserts an element in a tree, as an immediate sibling of a given element. The element) 15 396 99 -268 j
(to be inserted must not yet be part of a document.) 10 238 99 -284 j
481 -308 113 -308 0 3 2 Seg
481 -311 113 -311 0 1 2 Seg
lhr 14 sf
(void GtInsertSibling\(Element newElement, Element sibling,) 4 369 113 -333 j
(boolean before, Document document\)) 3 229 113 -352 j
481 -368 113 -368 0 3 2 Seg
481 -365 113 -365 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -396 s
lti 12 sf
(newElement) 60 134 -416 s
ltr 12 sf
(: the element \(or root of the tree\) to be inserted.) 10 230 195 -416 j
lti 12 sf
(sibling) 32 134 -435 s
ltr 12 sf
(: an element belonging to a tree. This element must not be the root of a) 15 329 166 -435 j
(tree.) 22 154 -451 s
lti 12 sf
(before) 31 134 -470 s
ltr 12 sf
(: if True, inserts newElement as previous sibling of sibling, if False,) 11 330 165 -470 j
(inserts newElement as next sibling of sibling.) 6 219 154 -487 j
lti 12 sf
(document) 46 134 -506 s
ltr 12 sf
(: the document to which both elements belong.) 7 222 180 -506 j
(7.2.2) 23 99 -538 s
(GtInsertFirstChild) 90 131 -538 s
(Inserts an element in a tree, as the first child of a given element. The element to be) 17 396 99 -552 j
(inserted must not yet be part of a document. This function can also be used for at\255) 16 396 99 -568 j
(taching an option to a choice.) 5 138 99 -585 j
481 -609 113 -609 0 3 2 Seg
481 -612 113 -612 0 1 2 Seg
lhr 14 sf
(void GtInsertFirstChild\(Element *newElement, Element) 3 369 113 -634 j
(parent, Document document\)) 2 178 113 -653 j
481 -668 113 -668 0 3 2 Seg
481 -665 113 -665 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
34 413 669 nwpage
%%Page: 37 37
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(35) 12 484 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(newElement) 60 134 -145 s
ltr 12 sf
(: the element \(or root of the tree\) to be inserted.) 10 230 195 -145 j
lti 12 sf
(parent) 31 134 -164 s
ltr 12 sf
(: an element belonging to a tree.) 6 154 165 -164 j
lti 12 sf
(document) 46 134 -183 s
ltr 12 sf
(: the document to which both elements belong.) 7 222 180 -183 j
ltb 12 sf
(Return parameter:) 1 97 99 -207 j
ltr 12 sf
(If newElement is an option that replaces the choice, newElement takes) 10 341 134 -227 j
(the value of parent.) 3 92 134 -246 j
(7.2.3) 23 99 -277 s
(GtRemoveTree) 74 131 -277 s
(Removes a tree \(or a single element\) from its tree, without freeing it.) 12 331 99 -292 j
481 -316 113 -316 0 3 2 Seg
481 -319 113 -319 0 1 2 Seg
lhr 14 sf
(void GtRemoveTree\(Element element, Document document\)) 4 367 113 -341 j
481 -356 113 -356 0 3 2 Seg
481 -353 113 -353 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -385 s
lti 12 sf
(element) 38 134 -404 s
ltr 12 sf
(: the element \(or root of the tree\) to be removed.) 10 232 173 -404 j
lti 12 sf
(document) 46 134 -423 s
ltr 12 sf
(: the document containing the element to be removed.) 8 255 180 -423 j
(7.2.4) 23 99 -455 s
(GtSetAccessRight) 90 131 -455 s
(Sets the access rights for a given element. Access rights apply only during the) 13 396 99 -469 j
(current editing session; they are not saved with the document. They must be set each) 14 396 99 -486 j
(time the document is loaded.) 4 137 99 -502 j
481 -526 113 -526 0 3 2 Seg
481 -529 113 -529 0 1 2 Seg
lhr 14 sf
(void GtSetAccessRight\(Element element, AccessRight right,) 4 369 113 -551 j
(Document document\)) 1 132 113 -570 j
481 -586 113 -586 0 3 2 Seg
481 -583 113 -583 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -614 s
lti 12 sf
(element) 38 134 -634 s
ltr 12 sf
(: the element.) 2 65 173 -634 j
lti 12 sf
(right) 22 134 -653 s
ltr 12 sf
(: access right for that element \(ReadOnly, ReadWrite, Hidden, Inherit\255) 9 339 156 -653 j
(ed\).) 19 154 -669 s
lti 12 sf
(document) 46 134 -688 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -688 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
35 413 669 nwpage
%%Page: 38 38
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(36) 12 99 -77 s
(7.2.5) 23 99 -121 s
(GtHolophrastElement) 107 131 -121 s
(Changes the holophrasting status of a given element.) 7 255 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtHolophrastElement\(Element element, boolean) 3 369 113 -184 j
(holophrast, Document document\)) 2 204 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(element) 38 134 -267 s
ltr 12 sf
(: the element.) 2 65 173 -267 j
lti 12 sf
(holophrast) 50 134 -286 s
ltr 12 sf
(: True: the element gets holophrasted if it is not, False: if the el\255) 13 311 184 -286 j
(ement is holphrasted, it gets expanded.) 5 189 154 -302 j
lti 12 sf
(document) 46 134 -322 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -322 j
(7.2.6) 23 99 -353 s
(GtSetCheckingMode) 101 131 -353 s
(Changes checking mode.) 2 118 99 -368 j
481 -392 113 -392 0 3 2 Seg
481 -395 113 -395 0 1 2 Seg
lhr 14 sf
(void GtSetCheckingMode\(boolean strict\)) 2 251 113 -417 j
481 -432 113 -432 0 3 2 Seg
481 -429 113 -429 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -461 s
lti 12 sf
(strict) 25 134 -480 s
ltr 12 sf
(: if True, the presence of all mandatory elements is checked.) 10 286 159 -480 j
ltr 14 sf
(7.3) 16 99 -519 s
(Accessors) 60 126 -519 s
ltr 12 sf
(7.3.1) 23 99 -553 s
(GtGetMainRoot) 79 131 -553 s
(Returns the root element of the main abstract tree representing a document.) 11 364 99 -567 j
481 -591 113 -591 0 3 2 Seg
481 -594 113 -594 0 1 2 Seg
lhr 14 sf
(Element GtGetMainRoot\(Document document\)) 2 284 113 -616 j
481 -632 113 -632 0 3 2 Seg
481 -629 113 -629 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -660 s
lti 12 sf
(document) 46 134 -680 s
ltr 12 sf
(: the document.) 2 73 180 -680 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
36 413 669 nwpage
%%Page: 39 39
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(37) 12 484 -77 s
ltb 12 sf
(Return value:) 1 70 99 -126 j
ltr 12 sf
(the root element of the main abstract tree.) 7 202 134 -145 j
(7.3.2) 23 99 -177 s
(GtNextAssociatedRoot) 114 131 -177 s
(Returns the root element of the associated tree that follows the tree to which a given) 15 396 99 -191 j
(element belongs.) 1 82 99 -207 j
481 -231 113 -231 0 3 2 Seg
481 -234 113 -234 0 1 2 Seg
lhr 14 sf
(void GtNextAssociatedRoot\(Document document, Element) 3 369 113 -256 j
(root\)) 29 113 -276 s
481 -291 113 -291 0 3 2 Seg
481 -288 113 -288 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -320 s
lti 12 sf
(document) 46 134 -339 s
ltr 12 sf
(: the document.) 2 73 180 -339 j
lti 12 sf
(root) 19 134 -358 s
ltr 12 sf
(: the element for which the next associated tree is searched. That ele\255) 12 342 154 -358 j
(ment does not need to be the root of a tree. If root is NULL or if root is an) 19 342 154 -374 j
(element in the main tree, the root of the first associated tree is re\255) 13 342 154 -391 j
(turned.) 34 154 -407 s
ltb 12 sf
(Return parameter:) 1 97 99 -431 j
lti 12 sf
(root) 19 134 -450 s
ltr 12 sf
(: the root element of the next associated tree. NULL if there is no next) 14 342 154 -450 j
(associated tree for the document.) 4 159 154 -467 j
(7.3.3) 23 99 -498 s
(GtGetFirstChild) 80 131 -498 s
(Returns the first child element of a given element.) 8 238 99 -513 j
481 -537 113 -537 0 3 2 Seg
481 -540 113 -540 0 1 2 Seg
lhr 14 sf
(Element GtGetFirstChild\(Element parent\)) 2 250 113 -562 j
481 -577 113 -577 0 3 2 Seg
481 -574 113 -574 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -606 s
lti 12 sf
(parent) 31 134 -625 s
ltr 12 sf
(: the element for which the first child element is asked.) 10 261 165 -625 j
ltb 12 sf
(Return value:) 1 70 99 -649 j
ltr 12 sf
(the first child element of parent; NULL if parent has no child.) 11 289 134 -668 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
37 413 669 nwpage
%%Page: 40 40
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(38) 12 99 -77 s
(7.3.4) 23 99 -121 s
(GtGetLastChild) 78 131 -121 s
(Returns the last child element of a given element.) 8 237 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(Element GtGetLastChild\(Element parent\)) 2 249 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -228 s
lti 12 sf
(parent) 31 134 -248 s
ltr 12 sf
(: the element for which the last child element is asked.) 10 260 165 -248 j
ltb 12 sf
(Return value:) 1 70 99 -272 j
ltr 12 sf
(the last child element of parent; NULL if parent has no child.) 11 288 134 -291 j
(7.3.5) 23 99 -323 s
(GtPreviousSibling) 87 131 -323 s
(Returns the previous sibling element of a given element.) 8 270 99 -337 j
481 -361 113 -361 0 3 2 Seg
481 -364 113 -364 0 1 2 Seg
lhr 14 sf
(void GtPreviousSibling\(Element *element\)) 2 256 113 -386 j
481 -401 113 -401 0 3 2 Seg
481 -398 113 -398 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -430 s
lti 12 sf
(element) 38 134 -449 s
ltr 12 sf
(: the element whose previous sibling is asked.) 7 222 173 -449 j
ltb 12 sf
(Return parameter:) 1 97 99 -473 j
lti 12 sf
(element) 38 134 -492 s
ltr 12 sf
(: the previous sibling element, or NULL if there is no previous sib\255) 12 323 173 -492 j
(ling.) 20 154 -509 s
(7.3.6) 23 99 -540 s
(GtNextSibling) 69 131 -540 s
(Returns the next sibling element of a given element.) 8 250 99 -555 j
481 -579 113 -579 0 3 2 Seg
481 -582 113 -582 0 1 2 Seg
lhr 14 sf
(void GtNextSibling\(Element *element\)) 2 229 113 -604 j
481 -619 113 -619 0 3 2 Seg
481 -616 113 -616 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -648 s
lti 12 sf
(element) 38 134 -667 s
ltr 12 sf
(: the element whose next sibling is asked.) 7 202 173 -667 j
ltb 12 sf
(Return parameter:) 1 97 99 -691 j
lti 12 sf
(element) 38 134 -710 s
ltr 12 sf
(: the next sibling element, or NULL if there is no next sibling.) 12 293 173 -710 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
38 413 669 nwpage
%%Page: 41 41
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(39) 12 484 -77 s
(7.3.7) 23 99 -121 s
(GtGetSuccessor) 80 131 -121 s
(Returns the element that follows a given element at the same level or at ) 14 359 99 -135 j
(the first) 1 37 458 -135 j
(upper level where there is a following element) 7 221 99 -152 j
(.) 3 320 -152 s
481 -176 113 -176 0 3 2 Seg
481 -179 113 -179 0 1 2 Seg
lhr 14 sf
(Element GtGetSuccessor\(Element element\)) 2 267 113 -201 j
481 -216 113 -216 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -245 s
lti 12 sf
(element) 38 134 -264 s
ltr 12 sf
(: the element whose successor is asked.) 6 194 173 -264 j
ltb 12 sf
(Return value:) 1 70 99 -288 j
ltr 12 sf
(the successor, or NULL if there is no successor.) 8 230 134 -307 j
(7.3.8) 23 99 -339 s
(GtGetPredecessor) 90 131 -339 s
(Returns the element that precedes a given element at the same level or at the first) 15 396 99 -353 j
(upper level where there is a preceding element.) 7 227 99 -370 j
481 -394 113 -394 0 3 2 Seg
481 -396 113 -396 0 1 2 Seg
lhr 14 sf
(Element GtGetPredecessor\(Element element\)) 2 279 113 -419 j
481 -434 113 -434 0 3 2 Seg
481 -431 113 -431 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -463 s
lti 12 sf
(element) 38 134 -482 s
ltr 12 sf
(: the element whose predecessor is asked.) 6 204 173 -482 j
ltb 12 sf
(Return value:) 1 70 99 -506 j
ltr 12 sf
(the predecessor, or NULL if there is no predecessor.) 8 252 134 -525 j
(7.3.9) 23 99 -557 s
(GtGetParent) 62 131 -557 s
(Returns the parent element \(i.e. first ancestor\) of a given element.) 10 318 99 -571 j
481 -595 113 -595 0 3 2 Seg
481 -598 113 -598 0 1 2 Seg
lhr 14 sf
(Element GtGetParent\(Element element\)) 2 240 113 -620 j
481 -636 113 -636 0 3 2 Seg
481 -633 113 -633 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -664 s
lti 12 sf
(element) 38 134 -684 s
ltr 12 sf
(: the element whose the parent is asked.) 7 195 173 -684 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
39 413 669 nwpage
%%Page: 42 42
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(40) 12 99 -77 s
ltb 12 sf
(Return value:) 1 70 99 -126 j
ltr 12 sf
(the parent element, or NULL if there is no parent \(root\).) 10 269 134 -145 j
(7.3.10) 29 99 -177 s
(GtGetCommonAncestor) 117 136 -177 s
(Returns the common ancestor element of two given elements.) 8 296 99 -191 j
481 -215 113 -215 0 3 2 Seg
481 -218 113 -218 0 1 2 Seg
lhr 14 sf
(Element GtGetCommonAncestor\(Element element1, Element) 3 369 113 -240 j
(element2\)) 60 113 -259 s
481 -275 113 -275 0 3 2 Seg
481 -272 113 -272 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -303 s
lti 12 sf
(element1) 44 134 -323 s
ltr 12 sf
(: the first element whose ancestor is asked.) 7 209 179 -323 j
lti 12 sf
(element2) 44 134 -342 s
ltr 12 sf
(: the second element whose ancestor is asked.) 7 224 179 -342 j
ltb 12 sf
(Return value:) 1 70 99 -366 j
ltr 12 sf
(the common ancestor, or NULL if there is no common ancestor.) 10 301 134 -385 j
(7.3.11) 29 99 -417 s
(GtGetTypedAncestor) 105 136 -417 s
(Returns the first ancestor of a given type for a given element.) 11 293 99 -431 j
481 -455 113 -455 0 3 2 Seg
481 -458 113 -458 0 1 2 Seg
lhr 14 sf
(Element GtGetTypedAncestor\(Element element,) 2 369 113 -480 j
(ElementType ancestorType\)) 1 174 113 -499 j
481 -515 113 -515 0 3 2 Seg
481 -512 113 -512 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -543 s
lti 12 sf
(element) 38 134 -563 s
ltr 12 sf
(: the element whose ancestor is asked.) 6 187 173 -563 j
lti 12 sf
(ancestorType) 64 134 -582 s
ltr 12 sf
(: type of the asked ancestor.) 5 135 199 -582 j
ltb 12 sf
(Return value:) 1 70 99 -606 j
ltr 12 sf
(the ancestor, or NULL if there is no ancestor of that type.) 11 275 134 -625 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
40 413 669 nwpage
%%Page: 43 43
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(41) 12 484 -77 s
(7.3.12) 29 99 -121 s
(GtGetElementType) 95 136 -121 s
(Returns the type of a given element.) 6 174 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(ElementType GtGetElementType\(Element element\)) 2 310 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -228 s
lti 12 sf
(element) 38 134 -248 s
ltr 12 sf
(: the element.) 2 65 173 -248 j
ltb 12 sf
(Return value:) 1 70 99 -272 j
ltr 12 sf
(type of the element.) 3 95 134 -291 j
(7.3.13) 29 99 -323 s
(GtGetElementTypeName) 124 136 -323 s
(Returns the name of an element type.) 6 180 99 -337 j
481 -361 113 -361 0 3 2 Seg
481 -364 113 -364 0 1 2 Seg
lhr 14 sf
(char *GtGetElementTypeName\(ElementType elementType\)) 2 362 113 -386 j
481 -401 113 -401 0 3 2 Seg
481 -398 113 -398 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -430 s
lti 12 sf
(elementType) 62 134 -449 s
ltr 12 sf
(: element type.) 2 71 197 -449 j
ltb 12 sf
(Return value:) 1 70 99 -473 j
ltr 12 sf
(name of that type.) 3 86 134 -492 j
(7.3.14) 29 99 -524 s
(GtGiveTypeFromName) 114 136 -524 s
(Gives an element type whose name is known \(the structure schema that defines that) 13 396 99 -539 j
(type must be loaded\). That type is searched in a given structure schema \(element\255) 13 396 99 -555 j
(Type.ElSSchema\) and in all structure schemas that are extensions of that structure) 11 396 99 -571 j
(schema or natures used in that structure schema.) 7 236 99 -588 j
481 -612 113 -612 0 3 2 Seg
481 -614 113 -614 0 1 2 Seg
lhr 14 sf
(void GtGiveTypeFromName\(ElementType *elementType,) 2 369 113 -636 j
(char *name\)) 1 77 113 -656 j
481 -671 113 -671 0 3 2 Seg
481 -668 113 -668 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
41 413 669 nwpage
%%Page: 44 44
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(42) 12 99 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(elementType.ElSSchema) 118 134 -145 s
ltr 12 sf
(: the structure schema of interest.) 5 161 252 -145 j
lti 12 sf
(name) 26 134 -164 s
ltr 12 sf
(: the name of the type of interest.) 7 158 160 -164 j
ltb 12 sf
(Return parameter:) 1 97 99 -188 j
lti 12 sf
(elementType) 62 134 -207 s
ltr 12 sf
(: the type having this name, or elementType.ElTypeNum = 0 if) 10 299 197 -207 j
(the type is not found.) 4 101 154 -224 j
(7.3.15) 29 99 -255 s
(GtSameTypes) 69 136 -255 s
(Compares two element types.) 3 144 99 -270 j
481 -294 113 -294 0 3 2 Seg
481 -297 113 -297 0 1 2 Seg
lhr 14 sf
(int GtSameTypes\(ElementType type1, ElementType type2\)) 4 356 113 -319 j
481 -334 113 -334 0 3 2 Seg
481 -331 113 -331 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -363 s
lti 12 sf
(type1) 27 134 -382 s
ltr 12 sf
(: first element type.) 3 93 161 -382 j
lti 12 sf
(type2) 27 134 -401 s
ltr 12 sf
(: second element type.) 3 108 161 -401 j
ltb 12 sf
(Return value:) 1 70 99 -425 j
ltr 12 sf
(0 if both types are different, 1 if they are identical.) 10 237 134 -444 j
(7.3.16) 29 99 -476 s
(GtGetElementLabel) 98 136 -476 s
(Returns the label of a given element.) 6 176 99 -491 j
481 -515 113 -515 0 3 2 Seg
481 -517 113 -517 0 1 2 Seg
lhr 14 sf
(char *GtGetElementLabel\(Element element\)) 2 268 113 -540 j
481 -555 113 -555 0 3 2 Seg
481 -552 113 -552 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -584 s
lti 12 sf
(element) 38 134 -603 s
ltr 12 sf
(: the element.) 2 65 173 -603 j
ltb 12 sf
(Return value:) 1 70 99 -627 j
ltr 12 sf
(label of the element.) 3 97 134 -646 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
42 413 669 nwpage
%%Page: 45 45
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(43) 12 484 -77 s
(7.3.17) 29 99 -121 s
(GtIsConstant) 66 136 -121 s
(Indicates whether an element type is a constant.) 7 233 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(int GtIsConstant\(ElementType elementType\)) 2 273 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -228 s
lti 12 sf
(elementType) 62 134 -248 s
ltr 12 sf
(: type to be tested.) 4 90 197 -248 j
ltb 12 sf
(Return value:) 1 70 99 -272 j
ltr 12 sf
(1 = the type is a constant, 0 = the type is not a constant.) 14 271 134 -291 j
(7.3.18) 29 99 -323 s
(GtIsLeaf) 43 136 -323 s
(Indicates whether an element type is a leaf.) 7 209 99 -337 j
481 -361 113 -361 0 3 2 Seg
481 -364 113 -364 0 1 2 Seg
lhr 14 sf
(int GtIsLeaf\(ElementType elementType\)) 2 243 113 -386 j
481 -401 113 -401 0 3 2 Seg
481 -398 113 -398 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -430 s
lti 12 sf
(elementType) 62 134 -449 s
ltr 12 sf
(: type to be tested.) 4 90 197 -449 j
ltb 12 sf
(Return value:) 1 70 99 -473 j
ltr 12 sf
(1 if the type is a leaf, 0 if the type is not a leaf.) 14 221 134 -492 j
(7.3.19) 29 99 -524 s
(GtGetConstructOfType) 113 136 -524 s
(Returns the construct of an element type.) 6 198 99 -539 j
481 -563 113 -563 0 3 2 Seg
481 -565 113 -565 0 1 2 Seg
lhr 14 sf
(Construct GtGetConstructOfType\(ElementType) 1 369 113 -588 j
(elementType\)) 84 113 -607 s
481 -622 113 -622 0 3 2 Seg
481 -619 113 -619 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -651 s
lti 12 sf
(elementType) 62 134 -670 s
ltr 12 sf
(: the element type of interest.) 5 141 197 -670 j
ltb 12 sf
(Return value:) 1 70 99 -694 j
ltr 12 sf
(the construct that defines the structure of that element type.) 9 288 134 -713 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
43 413 669 nwpage
%%Page: 46 46
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(44) 12 99 -77 s
(7.3.20) 29 99 -121 s
(GtGetConstruct) 78 136 -121 s
(Returns the construct of an element.) 5 174 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(Construct GtGetConstruct\(Element element\)) 2 272 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -228 s
lti 12 sf
(element) 38 134 -248 s
ltr 12 sf
(: the element of interest.) 4 117 173 -248 j
ltb 12 sf
(Return value:) 1 70 99 -272 j
ltr 12 sf
(the construct that defines the structure of that element.) 8 264 134 -291 j
(7.3.21) 29 99 -323 s
(GtGetAccessRight) 92 136 -323 s
(Returns the access rights for a given element.) 7 220 99 -337 j
481 -361 113 -361 0 3 2 Seg
481 -364 113 -364 0 1 2 Seg
lhr 14 sf
(AccessRight GtGetAccessRight\(Element element\)) 2 310 113 -386 j
481 -401 113 -401 0 3 2 Seg
481 -398 113 -398 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -430 s
lti 12 sf
(element) 38 134 -449 s
ltr 12 sf
(: the element.) 2 65 173 -449 j
ltb 12 sf
(Return Value:) 1 73 99 -473 j
ltr 12 sf
(access right for that element \(ReadOnly, ReadWrite, Hidden, Inherited\).) 8 348 134 -492 j
(7.3.22) 29 99 -524 s
(GtIsHolophrasted) 87 136 -524 s
(Tests whether a given element is holphrasted or not.) 8 253 99 -539 j
481 -563 113 -563 0 3 2 Seg
481 -565 113 -565 0 1 2 Seg
lhr 14 sf
(int GtIsHolophrasted\(Element element\)) 2 238 113 -588 j
481 -603 113 -603 0 3 2 Seg
481 -600 113 -600 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -632 s
lti 12 sf
(element) 38 134 -651 s
ltr 12 sf
(: the element to be tested.) 5 126 173 -651 j
ltb 12 sf
(Return Value:) 1 73 99 -675 j
ltr 12 sf
(1 if the element is holphrasted, 0 if not.) 8 186 134 -694 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
44 413 669 nwpage
%%Page: 47 47
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(45) 12 484 -77 s
(7.3.23) 29 99 -121 s
(GtIsReadOnly) 70 136 -121 s
(Tests whether a given element is protected against user modifications \(ReadOn\255) 10 396 99 -135 j
(ly\).) 16 99 -152 s
481 -176 113 -176 0 3 2 Seg
481 -179 113 -179 0 1 2 Seg
lhr 14 sf
(int GtIsReadOnly\(Element element\)) 2 215 113 -201 j
481 -216 113 -216 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -245 s
lti 12 sf
(element) 38 134 -264 s
ltr 12 sf
(: the element to be tested.) 5 126 173 -264 j
ltb 12 sf
(Return Value:) 1 73 99 -288 j
ltr 12 sf
(1 if the element is protected, 0 if not.) 8 175 134 -307 j
(7.3.24) 29 99 -339 s
(GtIsHidden) 57 136 -339 s
(Tests whether a given element is hidden to the user \(Hidden\).) 10 300 99 -353 j
481 -377 113 -377 0 3 2 Seg
481 -380 113 -380 0 1 2 Seg
lhr 14 sf
(int GtIsHidden\(Element element\)) 2 199 113 -402 j
481 -418 113 -418 0 3 2 Seg
481 -415 113 -415 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -446 s
lti 12 sf
(element) 38 134 -466 s
ltr 12 sf
(: the element to be tested.) 5 126 173 -466 j
ltb 12 sf
(Return Value:) 1 73 99 -490 j
ltr 12 sf
(1 if the element is hidden, 0 if not.) 8 161 134 -509 j
(7.3.25) 29 99 -540 s
(GtIsInAnInclusion) 89 136 -540 s
(Tests whether a given element is \(in\) an included element. An included element is a) 14 396 99 -555 j
("live" copy of another element.) 4 147 99 -571 j
481 -595 113 -595 0 3 2 Seg
481 -598 113 -598 0 1 2 Seg
lhr 14 sf
(int GtIsInAnInclusion\(Element element\)) 2 243 113 -620 j
481 -636 113 -636 0 3 2 Seg
481 -633 113 -633 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -664 s
lti 12 sf
(element) 38 134 -684 s
ltr 12 sf
(: the element to be tested.) 5 126 173 -684 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
45 413 669 nwpage
%%Page: 48 48
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(46) 12 99 -77 s
ltb 12 sf
(Return Value:) 1 73 99 -126 j
ltr 12 sf
(1 if the element is included, 0 if not.) 8 169 134 -145 j
(7.3.26) 29 99 -177 s
(GtIsAncestor) 66 136 -177 s
(Tests if an element is an ancestor of another element.) 9 257 99 -191 j
481 -215 113 -215 0 3 2 Seg
481 -218 113 -218 0 1 2 Seg
lhr 14 sf
(int GtIsAncestor\(Element element, Element ancestor\)) 4 327 113 -240 j
481 -255 113 -255 0 3 2 Seg
481 -252 113 -252 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -284 s
lti 12 sf
(element) 38 134 -303 s
ltr 12 sf
(: an element.) 2 61 173 -303 j
lti 12 sf
(ancestor) 40 134 -323 s
ltr 12 sf
(: the supposed ancestor of element.) 5 170 175 -323 j
ltb 12 sf
(Return value:) 1 70 99 -347 j
ltr 12 sf
(1 if ancestor in an ancestor of element, 0 if not.) 10 223 134 -366 j
(7.3.27) 29 99 -397 s
(GtIsBefore) 54 136 -397 s
(Tests if an element precedes another element in the preorder traversal of the tree.) 13 393 99 -412 j
481 -436 113 -436 0 3 2 Seg
481 -439 113 -439 0 1 2 Seg
lhr 14 sf
(int GtIsBefore\(Element element1, Element element2\)) 4 318 113 -461 j
481 -476 113 -476 0 3 2 Seg
481 -473 113 -473 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -505 s
lti 12 sf
(element1) 44 134 -524 s
ltr 12 sf
(: the first element.) 3 87 179 -524 j
lti 12 sf
(element2) 44 134 -543 s
ltr 12 sf
(: the second element.) 3 102 179 -543 j
ltb 12 sf
(Return value:) 1 70 99 -567 j
ltr 12 sf
(1 if the first element precedes the second element, 0 if not.) 11 279 134 -587 j
(7.3.28) 29 99 -618 s
(GtIsFirstPairedElement) 117 136 -618 s
(Indicates if a given paired element is the first or the second of the pair.) 14 337 99 -633 j
481 -657 113 -657 0 3 2 Seg
481 -660 113 -660 0 1 2 Seg
lhr 14 sf
(int GtIsFirstPairedElement\(Element element\)) 2 272 113 -682 j
481 -697 113 -697 0 3 2 Seg
481 -694 113 -694 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
46 413 669 nwpage
%%Page: 49 49
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(47) 12 484 -77 s
ltb 12 sf
(Parameter:) 60 99 -126 s
lti 12 sf
(element) 38 134 -145 s
ltr 12 sf
(: the paired element.) 3 98 173 -145 j
ltb 12 sf
(Return value:) 1 70 99 -169 j
ltr 12 sf
(1 if it is the first element of the pair, 0 if it is the second.) 15 267 134 -188 j
(7.3.29) 29 99 -220 s
(GtGetDocument) 80 136 -220 s
(Returns the document containing a given element) 6 236 99 -234 j
481 -258 113 -258 0 3 2 Seg
481 -261 113 -261 0 1 2 Seg
lhr 14 sf
(Document GtGetDocument\(Element element\)) 2 276 113 -283 j
481 -299 113 -299 0 3 2 Seg
481 -296 113 -296 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -327 s
lti 12 sf
(element) 38 134 -347 s
ltr 12 sf
(: the element for which document is asked.) 7 204 173 -347 j
ltb 12 sf
(Return value:) 1 70 99 -371 j
ltr 12 sf
(the document containing that element or 0 if the element does not belong to) 13 361 134 -390 j
(any document.) 1 69 134 -406 j
(7.3.30) 29 99 -438 s
(GtNextCopiedElement) 110 136 -438 s
(Returns one of the elements that have been copied into the ``clipboard'' by the last) 14 396 99 -452 j
(Copy or Cut command. \(This function is available only in the ThotEditor library\).) 12 384 99 -468 j
481 -492 113 -492 0 3 2 Seg
481 -495 113 -495 0 1 2 Seg
lhr 14 sf
(void GtNextCopiedElement\(Element *element\)) 2 281 113 -517 j
481 -533 113 -533 0 3 2 Seg
481 -530 113 -530 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -562 s
lti 12 sf
(element) 38 134 -581 s
ltr 12 sf
(: NULL if the first element of the clipboard is asked; an element of the) 14 323 173 -581 j
(clipboard if the next one is asked.) 6 160 154 -597 j
ltb 12 sf
(Return parameter:) 1 97 99 -621 j
lti 12 sf
(element) 38 134 -640 s
ltr 12 sf
(: the asked element if it exists, or NULL if there is no next element in) 15 323 173 -640 j
(the clipboard or if the clipboard is empty.) 7 194 154 -657 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
47 413 669 nwpage
%%Page: 50 50
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(48) 12 99 -77 s
(7.3.31) 29 99 -121 s
(GtGetCopiedDocument) 113 136 -121 s
(Returns the document from which the current content of the clipboard has been copied) 13 396 99 -135 j
(or cut. \(This function is available only in the ThotEditor library\).) 10 305 99 -152 j
481 -176 113 -176 0 3 2 Seg
481 -179 113 -179 0 1 2 Seg
lhr 14 sf
(Document GtGetCopiedDocument\(\)) 1 218 113 -201 j
481 -216 113 -216 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -245 s
ltr 12 sf
(No parameter.) 1 69 134 -264 j
ltb 12 sf
(Return value:) 1 70 99 -288 j
ltr 12 sf
(the document from which the current content of the clipboard has been copied) 12 361 134 -307 j
(or cut; 0 if the clipboard is empty.) 7 158 134 -324 j
ltr 14 sf
(7.4) 16 99 -363 s
(Locators) 50 126 -363 s
ltr 12 sf
(7.4.1) 23 99 -396 s
(GtSearchTypedElement) 115 131 -396 s
(Returns the first element of a given type. Searching can be done in a tree or starting) 16 396 99 -411 j
(from a given element towards the beginning or the end of the abstract tree.) 13 357 99 -427 j
481 -451 113 -451 0 3 2 Seg
481 -454 113 -454 0 1 2 Seg
lhr 14 sf
(Element GtSearchTypedElement\(ElementType) 1 369 113 -476 j
(searchedType, SearchDomain scope, Element element\)) 4 341 113 -495 j
481 -511 113 -511 0 3 2 Seg
481 -508 113 -508 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -540 s
lti 12 sf
(searchedType) 66 134 -559 s
ltr 12 sf
(: type of element to be searched. If searchedType.ElSSchema) 8 295 201 -559 j
(is NULL, searchedType must be a basic type ; then the next basic ele\255) 13 342 154 -575 j
(ment of that type will be returned, whatever its structure schema.) 10 314 154 -591 j
lti 12 sf
(scope) 27 134 -611 s
ltr 12 sf
(: SearchForward, SearchBackward or SearchInTree.) 4 249 161 -611 j
lti 12 sf
(element) 38 134 -630 s
ltr 12 sf
(: the element that is the root of the tree \(if scope = SearchInTree\) or) 14 323 173 -630 j
(the starting element \(if scope = SearchForward or SearchBackward\).) 8 331 154 -646 j
ltb 12 sf
(Return value:) 1 70 99 -670 j
ltr 12 sf
(the element found, or NULL if no element has been found.) 10 276 134 -689 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
48 413 669 nwpage
%%Page: 51 51
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(49) 12 484 -77 s
(7.4.2) 23 99 -121 s
(GtSearchElementByLabel) 126 131 -121 s
(Searches the element that has a given label. The search is done in a given tree.) 15 379 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(Element GtSearchElementByLabel\(char *searchedLabel,) 2 369 113 -184 j
(Element element\)) 1 106 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(searchedLabel) 69 134 -267 s
ltr 12 sf
(: label of element to be searched.) 6 157 204 -267 j
lti 12 sf
(element) 38 134 -286 s
ltr 12 sf
(: the element that is the root of the tree in which the search is) 14 323 173 -286 j
(done.) 26 154 -302 s
ltb 12 sf
(Return value:) 1 70 99 -326 j
ltr 12 sf
(the element found, or NULL if no element has been found.) 10 276 134 -346 j
(7.4.3) 23 99 -377 s
(GtSearchEmptyElement) 117 131 -377 s
(Searches the next empty element. An empty element is either a compound element) 12 396 99 -392 j
(without child or a leaf without content. Searching can be done in a tree or starting from) 16 396 99 -408 j
(a given element towards the beginning or the end of the abstract tree.) 12 333 99 -424 j
481 -448 113 -448 0 3 2 Seg
481 -451 113 -451 0 1 2 Seg
lhr 14 sf
(Element GtSearchEmptyElement\(SearchDomain scope,) 2 369 113 -473 j
(Element element\)) 1 106 113 -492 j
481 -508 113 -508 0 3 2 Seg
481 -505 113 -505 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -537 s
lti 12 sf
(scope) 27 134 -556 s
ltr 12 sf
(: SearchForward, SearchBackward or SearchInTree.) 4 249 161 -556 j
lti 12 sf
(element) 38 134 -575 s
ltr 12 sf
(: the element that is the root of the tree \(if scope = SearchInTree\) or) 14 323 173 -575 j
(the starting element \(if scope = SearchForward or SearchBackward\).) 8 331 154 -591 j
ltb 12 sf
(Return values:) 1 76 99 -615 j
ltr 12 sf
(the element found, or NULL if not found.) 7 192 134 -635 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
49 413 669 nwpage
%%Page: 52 52
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(50) 12 99 -77 s
(7.4.4) 23 99 -121 s
(GtSearchOtherPairedElement) 144 131 -121 s
(Returns the element that is part of the same pair as a given element.) 13 329 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(Element GtSearchOtherPairedElement\(Element element\)) 2 345 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -228 s
lti 12 sf
(element) 38 134 -248 s
ltr 12 sf
(: the element whose paired element is searched.) 7 231 173 -248 j
ltb 12 sf
(Return value:) 1 70 99 -272 j
ltr 12 sf
(the paired element.) 2 92 134 -291 j
(7.4.5) 23 99 -323 s
(GtSearchNoPageBreak) 112 131 -323 s
(Returns the first sibling element that is not a page break.) 10 274 99 -337 j
481 -361 113 -361 0 3 2 Seg
481 -364 113 -364 0 1 2 Seg
lhr 14 sf
(Element GtSearchNoPageBreak\(Element element, boolean) 3 369 113 -386 j
(forward\)) 49 113 -405 s
481 -420 113 -420 0 3 2 Seg
481 -418 113 -418 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -449 s
lti 12 sf
(element) 38 134 -468 s
ltr 12 sf
(: the element.) 2 65 173 -468 j
lti 12 sf
(forward) 37 134 -488 s
ltr 12 sf
(: True for skipping the next page breaks, False for skipping the pre\255) 12 324 172 -488 j
(vious ones.) 1 55 154 -504 j
ltb 12 sf
(Return value:) 1 70 99 -528 j
ltr 12 sf
(the first sibling element, or NULL if there are only page breaks.) 11 303 134 -547 j
ltr 14 sf
(7.5) 16 99 -587 s
(Help) 26 126 -587 s
ltr 12 sf
(7.5.1) 23 99 -620 s
(GtListAbstractTree) 96 131 -620 s
(Produces in a file a human-readable form of an abstract tree.) 10 291 99 -635 j
481 -659 113 -659 0 3 2 Seg
481 -661 113 -661 0 1 2 Seg
lhr 14 sf
(void GtListAbstractTree\(Element root, FILE *fileDescriptor\)) 4 363 113 -684 j
481 -699 113 -699 0 3 2 Seg
481 -696 113 -696 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
50 413 669 nwpage
%%Page: 53 53
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(51) 12 484 -116 s
ltb 12 sf
(Parameters:) 66 99 -165 s
lti 12 sf
(root) 19 134 -184 s
ltr 12 sf
(: the root element of the tree to be listed.) 9 196 154 -184 j
lti 12 sf
(fileDescriptor) 67 134 -204 s
ltr 12 sf
(: file descriptor of the file that will contain the list. This file must) 13 294 202 -204 j
(be open when calling the function.) 5 161 154 -220 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
51 413 669 nwpage
%%Page: 54 54
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(52) 12 99 -77 s
ltr 16 sf
(8) 8 99 -125 s
(Contents) 54 117 -125 s
ltr 12 sf
(The functions described in this section require that file ) 9 270 113 -144 j
lti 12 sf
(content.h) 44 383 -144 s
ltr 12 sf
( be included in) 3 68 427 -144 j
(the module that calls them.) 4 130 99 -160 j
ltr 14 sf
(8.1) 16 99 -200 s
(Modificators) 70 126 -200 s
ltr 12 sf
(8.1.1) 23 99 -233 s
(GtSetTextContent) 89 131 -233 s
(Changes the content of a Text basic element. The full content \(if any\) is deleted and) 15 396 99 -248 j
(replaced by the new one. This function can also be used for changing the content \(the) 15 396 99 -264 j
(file name\) of a Picture basic element.) 6 177 99 -280 j
481 -304 113 -304 0 3 2 Seg
481 -307 113 -307 0 1 2 Seg
lhr 14 sf
(void GtSetTextContent\(Element element, char *content,) 4 369 113 -329 j
(Language language, Document document\)) 3 260 113 -348 j
481 -364 113 -364 0 3 2 Seg
481 -361 113 -361 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -393 s
lti 12 sf
(element) 38 134 -412 s
ltr 12 sf
(: the Text element to be modified.) 6 160 173 -412 j
lti 12 sf
(content) 36 134 -431 s
ltr 12 sf
(: new content for that element.) 5 146 170 -431 j
lti 12 sf
(language) 41 134 -450 s
ltr 12 sf
(: language of that Text element \(see section ) 8 214 176 -450 j
(11) 12 390 -450 s
(\).) 8 401 -450 s
lti 12 sf
(document) 46 134 -469 s
ltr 12 sf
(: the document containing that element.) 5 188 180 -469 j
(8.1.2) 23 99 -501 s
(GtAppendTextContent) 110 131 -501 s
(Appends a character string at the end of a Text basic element.) 11 298 99 -516 j
481 -540 113 -540 0 3 2 Seg
481 -542 113 -542 0 1 2 Seg
lhr 14 sf
(void GtAppendTextContent\(Element element, char *content,) 4 369 113 -564 j
(Document document\)) 1 132 113 -584 j
481 -599 113 -599 0 3 2 Seg
481 -596 113 -596 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -628 s
lti 12 sf
(element) 38 134 -647 s
ltr 12 sf
(: the Text element to be modified.) 6 160 173 -647 j
lti 12 sf
(content) 36 134 -666 s
ltr 12 sf
(: the character string to be appended.) 6 178 170 -666 j
lti 12 sf
(document) 46 134 -685 s
ltr 12 sf
(: the document containing that element.) 5 188 180 -685 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
52 413 669 nwpage
%%Page: 55 55
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(53) 12 484 -77 s
(8.1.3) 23 99 -121 s
(GtInsertTextContent) 102 131 -121 s
(Inserts a character string in a text basic element.) 8 235 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtInsertTextContent\(Element element, int position, char) 5 369 113 -184 j
(*content, Document document\)) 2 191 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(element) 38 134 -267 s
ltr 12 sf
(: the Text element to be modified.) 6 160 173 -267 j
lti 12 sf
(position) 39 134 -286 s
ltr 12 sf
(: rank of the character after which the new string must be inserted. 0) 13 322 174 -286 j
(for inserting before the first character.) 5 180 154 -302 j
lti 12 sf
(content) 36 134 -322 s
ltr 12 sf
(: the character string to be inserted.) 6 171 170 -322 j
lti 12 sf
(document) 46 134 -341 s
ltr 12 sf
(: the document containing the text element.) 6 206 180 -341 j
(8.1.4) 23 99 -372 s
(GtDeleteTextContent) 106 131 -372 s
(Deletes a character string in a text basic element.) 8 239 99 -387 j
481 -411 113 -411 0 3 2 Seg
481 -414 113 -414 0 1 2 Seg
lhr 14 sf
(void GtDeleteTextContent\(Element element, int position, int) 5 369 113 -436 j
(length, Document document\)) 2 176 113 -455 j
481 -470 113 -470 0 3 2 Seg
481 -468 113 -468 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -499 s
lti 12 sf
(element) 38 134 -518 s
ltr 12 sf
(: the Text element to be modified.) 6 160 173 -518 j
lti 12 sf
(position) 39 134 -538 s
ltr 12 sf
(: rank of the first character to be deleted.) 8 194 174 -538 j
lti 12 sf
(length) 29 134 -557 s
ltr 12 sf
(: length of the character string to be deleted.) 8 211 163 -557 j
lti 12 sf
(document) 46 134 -576 s
ltr 12 sf
(: the document containing the text element.) 6 206 180 -576 j
(8.1.5) 23 99 -608 s
(GtSplitText) 57 131 -608 s
(Divides a text element into two elements.) 6 202 99 -622 j
481 -646 113 -646 0 3 2 Seg
481 -649 113 -649 0 1 2 Seg
lhr 14 sf
(void GtSplitText\(Element element, int position, Document do\255) 6 369 113 -671 j
(cument\)) 50 113 -690 s
481 -706 113 -706 0 3 2 Seg
481 -703 113 -703 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
53 413 669 nwpage
%%Page: 56 56
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(54) 12 99 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(element) 38 134 -145 s
ltr 12 sf
(: the text element to be divided. A new text element containing the) 12 323 173 -145 j
(second part of the text is created as the next sibling.) 10 252 154 -161 j
lti 12 sf
(position) 39 134 -180 s
ltr 12 sf
(: rank of the character after which the element must be cut.) 11 280 174 -180 j
lti 12 sf
(document) 46 134 -200 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -200 j
(8.1.6) 23 99 -231 s
(GtMergeText) 66 131 -231 s
(Merges two text elements.) 3 131 99 -246 j
481 -270 113 -270 0 3 2 Seg
481 -273 113 -273 0 1 2 Seg
lhr 14 sf
(void GtMergeText\(Element element, Document document\)) 4 355 113 -295 j
481 -310 113 -310 0 3 2 Seg
481 -307 113 -307 0 1 2 Seg
lcr 12 sf
(void GtMergeText\(element, document\)) 2 235 141 -333 j
(Element element;) 1 108 141 -347 j
(Document document;) 1 121 141 -360 j
ltb 12 sf
(Parameters:) 66 99 -384 s
lti 12 sf
(element) 38 134 -403 s
ltr 12 sf
(: the first text element. Merging occurs only if) 8 218 173 -403 j
(the next sibling is a text element with the same attributes.) 10 281 134 -422 j
lti 12 sf
(document) 46 134 -442 s
ltr 12 sf
(: the document to which the text element belongs.) 8 238 180 -442 j
ltb 12 sf
(Return value:) 1 70 99 -466 j
ltr 12 sf
(True if successful..) 2 89 134 -485 j
(8.1.7) 23 99 -516 s
(GtSetGraphicsShape) 102 131 -516 s
(Changes the shape of a Graphics or Symbol basic element.) 9 281 99 -531 j
481 -555 113 -555 0 3 2 Seg
481 -558 113 -558 0 1 2 Seg
lhr 14 sf
(void GtSetGraphicsShape\(Element element, char shape,) 4 369 113 -580 j
(Document document\)) 1 132 113 -599 j
481 -614 113 -614 0 3 2 Seg
481 -612 113 -612 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -643 s
lti 12 sf
(element) 38 134 -662 s
ltr 12 sf
(: the element to be changed. This element must be a basic element of) 13 323 173 -662 j
(type Graphics or Symbol.) 3 121 154 -679 j
lti 12 sf
(shape) 28 134 -698 s
ltr 12 sf
(: new shape for that element.) 5 139 162 -698 j
lti 12 sf
(document) 46 134 -717 s
ltr 12 sf
(: the document containing that element.) 5 188 180 -717 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
54 413 669 nwpage
%%Page: 57 57
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(55) 12 484 -77 s
(8.1.8) 23 99 -121 s
(GtAddPointInPolyline) 106 131 -121 s
(Adds a new point in a Polyline basic element.) 8 218 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtAddPointInPolyline\(Element element, int rank, int x, int) 7 369 113 -184 j
(y, Document document\)) 2 145 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(element) 38 134 -267 s
ltr 12 sf
(: the element to be changed. This element must be a basic element of) 13 323 173 -267 j
(type Polyline.) 1 65 154 -283 j
lti 12 sf
(rank) 21 134 -302 s
ltr 12 sf
(: rank of the new point to be inserted. If rank is greater than the actual) 15 340 156 -302 j
(number of points, the new point is appended. rank must be strictly) 11 342 154 -319 j
(positive.) 41 154 -335 s
(x, y: coordinate of the new point, in millipoints, relatively to the upper left) 13 361 134 -354 j
(corner of the box. x and y must be positive or null.) 11 238 134 -371 j
lti 12 sf
(document) 46 134 -390 s
ltr 12 sf
(: the document containing the polyline element.) 6 225 180 -390 j
(8.1.9) 23 99 -421 s
(GtDeletePointInPolyline) 118 131 -421 s
(Deletes a point in a Polyline basic element.) 7 207 99 -436 j
481 -460 113 -460 0 3 2 Seg
481 -463 113 -463 0 1 2 Seg
lhr 14 sf
(void GtDeletePointInPolyline\(Element element, int rank,) 4 369 113 -485 j
(Document document\)) 1 132 113 -504 j
481 -519 113 -519 0 3 2 Seg
481 -516 113 -516 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -548 s
lti 12 sf
(element) 38 134 -567 s
ltr 12 sf
(: the element to be changed. This element must be a basic element of) 13 323 173 -567 j
(type Polyline.) 1 65 154 -584 j
lti 12 sf
(rank) 21 134 -603 s
ltr 12 sf
(: rank of the point to be deleted. If rank is greater than the actual number) 15 340 156 -603 j
(of points, the last point is deleted. rank must be strictly positive.) 11 309 154 -619 j
lti 12 sf
(document) 46 134 -638 s
ltr 12 sf
(: the document containing the polyline element.) 6 225 180 -638 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
55 413 669 nwpage
%%Page: 58 58
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(56) 12 99 -77 s
(8.1.10) 29 99 -121 s
(GtModifyPointInPolyline) 119 136 -121 s
(Changes the coordinates of a point in a Polyline basic element.) 10 300 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtModifyPointInPolyline\(Element element, int rank, int x,) 6 369 113 -184 j
(int y, Document document\)) 3 163 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(element) 38 134 -267 s
ltr 12 sf
(: the element to be changed. This element must be a basic element of) 13 323 173 -267 j
(type Polyline.) 1 65 154 -283 j
lti 12 sf
(rank) 21 134 -302 s
ltr 12 sf
(: rank of the point to be modified. If rank is greater than the actual number) 15 340 156 -302 j
(of points, the last point is changed. rank must be strictly positive.) 11 313 154 -319 j
(x, y: new coordinates of the point, in millipoints, relatively to the upper left) 13 361 134 -338 j
(corner of the enclosing rectangle. x and y must be positive or null.) 12 313 134 -354 j
lti 12 sf
(document) 46 134 -373 s
ltr 12 sf
(: the document containing the polyline element.) 6 225 180 -373 j
(8.1.11) 29 99 -405 s
(GtChangeLimitOfPolyline) 124 136 -405 s
(Changes the coordinates of the lower left corner of the box containing a Polyline basic) 14 396 99 -420 j
(element.) 41 99 -436 s
481 -460 113 -460 0 3 2 Seg
481 -463 113 -463 0 1 2 Seg
lhr 14 sf
(void GtChangeLimitOfPolyline\(Element element, int x, int y,) 6 369 113 -485 j
(Document document\)) 1 132 113 -504 j
481 -519 113 -519 0 3 2 Seg
481 -516 113 -516 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -548 s
lti 12 sf
(element) 38 134 -567 s
ltr 12 sf
(: the element to be changed. This element must be a basic element of) 13 323 173 -567 j
(type Polyline.) 1 65 154 -584 j
(x, y: new coordinates of the lower left corner, in millipoints, relatively to the) 13 361 134 -603 j
(upper left corner of the box. x and y must be positive or null and the box must) 17 361 134 -619 j
(contain all points of the polyline.) 5 155 134 -636 j
lti 12 sf
(document) 46 134 -655 s
ltr 12 sf
(: the document containing the polyline element.) 6 225 180 -655 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
56 413 669 nwpage
%%Page: 59 59
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(57) 12 484 -77 s
(8.1.12) 29 99 -121 s
(GtCopyPage) 61 136 -121 s
(Copies the page element source into the page element destination. Both page ele\255) 12 396 99 -135 j
(ments must be in an abstract tree.) 6 164 99 -152 j
481 -176 113 -176 0 3 2 Seg
481 -179 113 -179 0 1 2 Seg
lhr 14 sf
(void GtCopyPage\(Element destination, Element source\)) 4 340 113 -201 j
481 -216 113 -216 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -245 s
lti 12 sf
(destination) 55 134 -264 s
ltr 12 sf
(: identifier of the page element to be modified.) 8 218 189 -264 j
lti 12 sf
(source) 31 134 -283 s
ltr 12 sf
(: identifier of the source page element.) 6 182 165 -283 j
ltr 14 sf
(8.2) 16 99 -323 s
(Accessors) 60 126 -323 s
ltr 12 sf
(8.2.1) 23 99 -356 s
(GtGetTextLength) 86 131 -356 s
(Returns the length of a Text basic element.) 7 206 99 -371 j
481 -395 113 -395 0 3 2 Seg
481 -397 113 -397 0 1 2 Seg
lhr 14 sf
(int GtGetTextLength\(Element element\)) 2 234 113 -420 j
481 -435 113 -435 0 3 2 Seg
481 -432 113 -432 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -464 s
lti 12 sf
(element) 38 134 -483 s
ltr 12 sf
(: the element of interest. This element must be a basic element of) 12 323 173 -483 j
(type Text.) 1 49 154 -499 j
ltb 12 sf
(Return value:) 1 70 99 -523 j
ltr 12 sf
(length \(number of characters\) of the character string contained in the ele\255) 11 361 134 -542 j
(ment. The null character terminating a C string is not counted.) 10 296 134 -559 j
(8.2.2) 23 99 -590 s
(GtGiveTextContent) 96 131 -590 s
(Returns the content of a Text basic element.) 7 212 99 -605 j
481 -629 113 -629 0 3 2 Seg
481 -632 113 -632 0 1 2 Seg
lhr 14 sf
(void GtGiveTextContent\(Element element, char *buffer, int) 5 369 113 -654 j
(*length, Language *language\)) 2 184 113 -673 j
481 -688 113 -688 0 3 2 Seg
481 -685 113 -685 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
57 413 669 nwpage
%%Page: 60 60
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(58) 12 99 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(element) 38 134 -145 s
ltr 12 sf
(: the element of interest. This element must be a basic element of) 12 323 173 -145 j
(type Text.) 1 49 154 -161 j
lti 12 sf
(buffer) 29 134 -180 s
ltr 12 sf
(: the buffer that will contain the text.) 7 174 163 -180 j
lti 12 sf
(length) 29 134 -200 s
ltr 12 sf
(: maximum length of that buffer.) 5 151 163 -200 j
ltb 12 sf
(Return parameters:) 1 103 99 -224 j
lti 12 sf
(buffer) 29 134 -243 s
ltr 12 sf
(: \(the buffer contains the text, including the terminating null charac\255) 10 332 163 -243 j
(ter\).) 21 154 -259 s
lti 12 sf
(length) 29 134 -278 s
ltr 12 sf
(: actual length of the text in the buffer, excluding the null character) 12 332 163 -278 j
(terminating the string.) 2 107 154 -295 j
lti 12 sf
(language) 41 134 -314 s
ltr 12 sf
(: language of the text \(see section ) 7 166 176 -314 j
(11) 12 342 -314 s
(\).) 8 353 -314 s
(8.2.3) 23 99 -346 s
(GtGiveSubString) 83 131 -346 s
(Returns a substring from a Text basic element.) 7 225 99 -360 j
481 -384 113 -384 0 3 2 Seg
481 -387 113 -387 0 1 2 Seg
lhr 14 sf
(void GtGiveSubString\(Element element, char *buffer, int) 5 369 113 -409 j
(position, int length\)) 2 115 113 -428 j
481 -444 113 -444 0 3 2 Seg
481 -441 113 -441 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -472 s
lti 12 sf
(element) 38 134 -492 s
ltr 12 sf
(: the element of interest. This element must be a basic element of) 12 323 173 -492 j
(type Text.) 1 49 154 -508 j
lti 12 sf
(buffer) 29 134 -527 s
ltr 12 sf
(: the buffer that will contain the substring. This buffer must be at least of) 14 332 163 -527 j
(size length.) 1 56 154 -543 j
lti 12 sf
(position) 39 134 -563 s
ltr 12 sf
(: the rank of the first character of the substring. rank must be strictly) 13 322 174 -563 j
(positive.) 41 154 -579 s
lti 12 sf
(length) 29 134 -598 s
ltr 12 sf
(: the length of the substring. Must be strictly positive.) 9 258 163 -598 j
ltb 12 sf
(Return parameter:) 1 97 99 -622 j
lti 12 sf
(buffer) 29 134 -641 s
ltr 12 sf
(: \(the buffer contains the substring\).) 5 173 163 -641 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
58 413 669 nwpage
%%Page: 61 61
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(59) 12 484 -77 s
(8.2.4) 23 99 -121 s
(GtGetGraphicsShape) 104 131 -121 s
(Returns the content of a Graphics or Symbol basic element.) 9 284 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(char GtGetGraphicsShape\(Element element\)) 2 275 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -228 s
lti 12 sf
(element) 38 134 -248 s
ltr 12 sf
(: the element of interest. This element must be a basic element of) 12 323 173 -248 j
(type Graphics or Symbol.) 3 121 154 -264 j
ltb 12 sf
(Return value:) 1 70 99 -288 j
ltr 12 sf
(a single character representing the shape of the graphics element or symbol) 11 361 134 -307 j
(contained in the element.) 3 120 134 -324 j
(8.2.5) 23 99 -355 s
(GtGetPolylineLength) 103 131 -355 s
(Returns the number of points in a Polyline basic element.) 9 273 99 -370 j
481 -394 113 -394 0 3 2 Seg
481 -396 113 -396 0 1 2 Seg
lhr 14 sf
(int GtGetPolylineLength\(Element element\)) 2 254 113 -419 j
481 -434 113 -434 0 3 2 Seg
481 -431 113 -431 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -463 s
lti 12 sf
(element) 38 134 -482 s
ltr 12 sf
(: the Polyline element. This element must be a basic element of type) 12 323 173 -482 j
(Polyline.) 41 154 -498 s
(8.2.6) 23 99 -530 s
(GtGivePolylinePoint) 99 131 -530 s
(Returns the coordinates of a point in a Polyline basic element.) 10 296 99 -544 j
481 -568 113 -568 0 3 2 Seg
481 -571 113 -571 0 1 2 Seg
lhr 14 sf
(void GtGivePolylinePoint\(Element element, int rank, int *x, int) 7 369 113 -593 j
(*y\)) 18 113 -612 s
481 -628 113 -628 0 3 2 Seg
481 -625 113 -625 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -657 s
lti 12 sf
(element) 38 134 -676 s
ltr 12 sf
(: the Polyline element. This element must be a basic element of type) 12 323 173 -676 j
(Polyline.) 41 154 -692 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
59 413 669 nwpage
%%Page: 62 62
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(60) 12 99 -116 s
lti 12 sf
(rank) 21 134 -160 s
ltr 12 sf
(: rank of the point in the PolyLine. If rank is greater than the actual) 14 340 156 -160 j
(number of points, an error is raised. rank must be strictly positive.) 11 316 154 -177 j
ltb 12 sf
(Return values:) 1 76 99 -201 j
ltr 12 sf
(x, y: coordinates of the point, in millipoints, relatively to the upper left corner) 13 361 134 -220 j
(of the enclosing rectangle.) 3 125 134 -236 j
(8.2.7) 23 99 -268 s
(GtGetPageNumber) 93 131 -268 s
(Returns the page number of a Page basic element.) 8 240 99 -282 j
481 -306 113 -306 0 3 2 Seg
481 -309 113 -309 0 1 2 Seg
lhr 14 sf
(int GtGetPageNumber\(Element pageElement\)) 2 276 113 -331 j
481 -347 113 -347 0 3 2 Seg
481 -344 113 -344 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -375 s
lti 12 sf
(pageElement) 62 134 -395 s
ltr 12 sf
(: the page element.) 3 91 197 -395 j
ltb 12 sf
(Return value:) 1 70 99 -419 j
ltr 12 sf
(page number of that page element.) 5 165 134 -438 j
(8.2.8) 23 99 -469 s
(GtGetPageView) 81 131 -469 s
(Returns the view corresponding to a Page basic element.) 8 273 99 -484 j
481 -508 113 -508 0 3 2 Seg
481 -511 113 -511 0 1 2 Seg
lhr 14 sf
(int GtGetPageView\(Element pageElement\)) 2 258 113 -533 j
481 -548 113 -548 0 3 2 Seg
481 -545 113 -545 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -577 s
lti 12 sf
(pageElement) 62 134 -596 s
ltr 12 sf
(: the page element.) 3 91 197 -596 j
ltb 12 sf
(Return value:) 1 70 99 -620 j
ltr 12 sf
(view of that page.) 3 85 134 -639 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
60 413 669 nwpage
%%Page: 63 63
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(61) 12 484 -77 s
ltr 16 sf
(9) 8 99 -125 s
(Logical attributes) 1 105 117 -125 j
ltr 12 sf
(The functions described in this section require that file ) 9 263 113 -144 j
lti 12 sf
(attribute.h) 51 376 -144 s
ltr 12 sf
( be included in) 3 68 427 -144 j
(the module that calls them.) 4 130 99 -160 j
(When creating or searching attributes in an abstract tree, the type of the con\255) 13 382 113 -180 j
(cerned attributes must be given. As presented in section ) 9 280 99 -196 j
(4) 6 379 -196 s
(, an attribute type con\255) 4 110 385 -196 j
(tains an attribute number, but this number does not appear explicitly in a structure) 13 396 99 -212 j
(schema: it is generated by the schema compiler. For obtaining all attribute numbers) 12 396 99 -228 j
(of a structure schema, use the command:) 6 195 99 -245 j
lti 12 sf
(       printsch -h SchemaName) 9 143 99 -261 j
ltr 12 sf
(which lists on the standard output a file that can be included into a C program.) 15 372 99 -277 j
(When a new attribute is created \(function ) 7 203 113 -301 j
(GtNewAttribute) 80 316 -301 s
(\), it must be attached) 4 100 396 -301 j
(\(function ) 1 45 99 -321 j
(GtAttachAttribute) 89 144 -321 s
(\) to an element which is itself part of an abstract tree of a) 13 262 233 -321 j
(document, before any other action can be performed on that attribute.) 10 329 99 -337 j
ltr 14 sf
(9.1) 16 99 -376 s
(Constructors) 72 126 -376 s
ltr 12 sf
(9.1.1) 23 99 -410 s
(GtNewAttribute) 80 131 -410 s
(Creates an attribute that will be attached to an element.) 9 269 99 -424 j
481 -448 113 -448 0 3 2 Seg
481 -451 113 -451 0 1 2 Seg
lhr 14 sf
(Attribute GtNewAttribute\(AttributeType attributeType\)) 2 327 113 -473 j
481 -489 113 -489 0 3 2 Seg
481 -486 113 -486 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -517 s
lti 12 sf
(attributeType) 66 134 -537 s
ltr 12 sf
(: type of the attribute to be created.) 7 169 201 -537 j
ltb 12 sf
(Return value:) 1 70 99 -561 j
ltr 12 sf
(the attribute that has been created.) 5 169 134 -580 j
(9.1.2) 23 99 -612 s
(GtAttachAttribute) 89 131 -612 s
(Attaches an attribute to an element.) 5 174 99 -626 j
481 -650 113 -650 0 3 2 Seg
481 -653 113 -653 0 1 2 Seg
lhr 14 sf
(void GtAttachAttribute\(Element element, Attribute attribute,) 4 369 113 -675 j
(Document document\)) 1 132 113 -694 j
481 -709 113 -709 0 3 2 Seg
481 -707 113 -707 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
61 413 669 nwpage
%%Page: 64 64
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(62) 12 99 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(element) 38 134 -145 s
ltr 12 sf
(: the element to which the attribute has to be attached.) 10 262 173 -145 j
lti 12 sf
(attribute) 42 134 -164 s
ltr 12 sf
(: the attribute to be attached.) 5 139 177 -164 j
lti 12 sf
(document) 46 134 -183 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -183 j
(9.1.3) 23 99 -215 s
(GtRemoveAttribute) 96 131 -215 s
(Removes an attribute from an element and release that attribute.) 9 311 99 -229 j
481 -253 113 -253 0 3 2 Seg
481 -256 113 -256 0 1 2 Seg
lhr 14 sf
(void GtRemoveAttribute\(Element element, Attribute attribute,) 4 369 113 -278 j
(Document document\)) 1 132 113 -298 j
481 -313 113 -313 0 3 2 Seg
481 -310 113 -310 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -342 s
lti 12 sf
(element) 38 134 -361 s
ltr 12 sf
(: the element with which the attribute is associated.) 8 249 173 -361 j
lti 12 sf
(attribute) 42 134 -380 s
ltr 12 sf
(: the attribute to be removed.) 5 139 177 -380 j
lti 12 sf
(document) 46 134 -399 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -399 j
ltr 14 sf
(9.2) 16 99 -439 s
(Modificators) 70 126 -439 s
ltr 12 sf
(9.2.1) 23 99 -472 s
(GtSetAttributeValue) 102 131 -472 s
(Changes the value of an attribute of type integer or enumerate.) 10 300 99 -487 j
481 -511 113 -511 0 3 2 Seg
481 -514 113 -514 0 1 2 Seg
lhr 14 sf
(void GtSetAttributeValue\(Attribute attribute, int value,) 4 369 113 -536 j
(Element element, Document document\)) 3 239 113 -555 j
481 -570 113 -570 0 3 2 Seg
481 -567 113 -567 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -599 s
lti 12 sf
(attribute) 42 134 -618 s
ltr 12 sf
(: the attribute to be modified.) 5 138 177 -618 j
lti 12 sf
(value) 26 134 -637 s
ltr 12 sf
(: new value of the attribute.) 5 132 160 -637 j
lti 12 sf
(element) 38 134 -657 s
ltr 12 sf
(: the element with which the attribute is associated, NULL if the) 11 323 173 -657 j
(attribute is not yet associated with an element.) 7 227 154 -673 j
lti 12 sf
(document) 46 134 -692 s
ltr 12 sf
(: the document to which the element belongs. Must be 0 if element) 12 315 180 -692 j
(is NULL.) 1 44 154 -708 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
62 413 669 nwpage
%%Page: 65 65
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(63) 12 484 -77 s
(9.2.2) 23 99 -121 s
(GtSetAttributeText) 95 131 -121 s
(Changes the value of an attribute of type text.) 8 220 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtSetAttributeText\(Attribute attribute, char *buffer,) 4 369 113 -184 j
(Element element, Document document\)) 3 239 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(attribute) 42 134 -267 s
ltr 12 sf
(: the attribute to be modified.) 5 138 177 -267 j
lti 12 sf
(buffer) 29 134 -286 s
ltr 12 sf
(: character string representing the new value of the attribute.) 9 291 163 -286 j
lti 12 sf
(element) 38 134 -305 s
ltr 12 sf
(: the element with which the attribute is associated, NULL if the) 11 323 173 -305 j
(attribute is not yet associated with an element.) 7 227 154 -322 j
lti 12 sf
(document) 46 134 -341 s
ltr 12 sf
(: the document to which the element belongs. Must be 0 if element) 12 315 180 -341 j
(is NULL.) 1 44 154 -357 j
ltr 14 sf
(9.3) 16 99 -396 s
(Accessors) 60 126 -396 s
ltr 12 sf
(9.3.1) 23 99 -430 s
(GtNextAttribute) 81 131 -430 s
(Returns the first attribute associated with a given element \(if attribute is NULL\) or) 13 396 99 -444 j
(the attribute that follows a given attribute of a given element.) 10 294 99 -461 j
481 -485 113 -485 0 3 2 Seg
481 -488 113 -488 0 1 2 Seg
lhr 14 sf
(void GtNextAttribute\(Element element, Attribute *attribute\)) 4 355 113 -510 j
481 -525 113 -525 0 3 2 Seg
481 -522 113 -522 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -554 s
lti 12 sf
(element) 38 134 -573 s
ltr 12 sf
(: the element of interest.) 4 117 173 -573 j
lti 12 sf
(attribute) 42 134 -592 s
ltr 12 sf
(: an attribute of that element, or NULL if the first attribute is) 12 319 177 -592 j
(asked.) 32 154 -609 s
ltb 12 sf
(Return parameter:) 1 97 99 -633 j
lti 12 sf
(attribute) 42 134 -652 s
ltr 12 sf
(: the next attribute, or NULL if attribute is the last attribute of the) 13 319 177 -652 j
(element.) 41 154 -668 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
63 413 669 nwpage
%%Page: 66 66
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(64) 12 99 -77 s
(9.3.2) 23 99 -121 s
(GtGetAttribute) 75 131 -121 s
(Returns an attribute of a given type associated with a given element.) 11 330 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(Attribute GtGetAttribute\(Element element, AttributeType) 3 369 113 -184 j
(attributeType\)) 85 113 -204 s
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(element) 38 134 -267 s
ltr 12 sf
(: the element of interest.) 4 117 173 -267 j
lti 12 sf
(attributeType) 66 134 -286 s
ltr 12 sf
(: type of the desired attribute.. If the attribute "Language" is) 10 295 201 -286 j
(searched, attributeType.AttrTypeNum must be 1. If the attribute "Lan\255) 8 342 154 -302 j
(guage" is searched whatever its structure schema, attribute\255) 7 342 154 -319 j
(Type.AttrSSchema must be NULL. A NULL attributeType.AttrSSchema) 6 342 154 -335 j
(is accepted only when an attribute "Language" is searched.) 8 284 154 -351 j
ltb 12 sf
(Return value:) 1 70 99 -375 j
ltr 12 sf
(the attribute found, or NULL if the element does not have this type of at\255) 14 361 134 -395 j
(tribute.) 35 134 -411 s
(9.3.3) 23 99 -443 s
(GtGiveAttributeType) 104 131 -443 s
(Returns the type of a given attribute.) 6 177 99 -457 j
481 -481 113 -481 0 3 2 Seg
481 -484 113 -484 0 1 2 Seg
lhr 14 sf
(void GtGiveAttributeType\(Attribute attribute, AttributeType) 3 369 113 -506 j
(attributeType, int *attrKind\)) 2 165 113 -525 j
481 -540 113 -540 0 3 2 Seg
481 -538 113 -538 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -569 s
lti 12 sf
(attribute) 42 134 -588 s
ltr 12 sf
(: the attribute of interest.) 4 120 177 -588 j
ltb 12 sf
(Return parameters:) 1 103 99 -612 j
lti 12 sf
(attributeType) 66 134 -632 s
ltr 12 sf
(: type of the attribute.) 4 104 201 -632 j
lti 12 sf
(attrKind) 40 134 -651 s
ltr 12 sf
(: kind of the attribute: 0 = Enumerate, 1 = Integer, 2 = Text, 3 =) 15 321 175 -651 j
(Reference) 48 154 -667 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
64 413 669 nwpage
%%Page: 67 67
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(65) 12 484 -77 s
(9.3.4) 23 99 -121 s
(GtGiveAttributeTypeFromName) 158 131 -121 s
(Retrieves the type of an attribute from its name.) 8 230 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtGiveAttributeTypeFromName\(char *name, Element) 3 369 113 -184 j
(element, AttributeType  attributeType, int *attrKind\)) 5 311 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -248 s
lti 12 sf
(name) 26 134 -267 s
ltr 12 sf
(: name of the attribute.) 4 108 160 -267 j
lti 12 sf
(element) 38 134 -286 s
ltr 12 sf
(: the element with which the attribute is associated.) 8 249 173 -286 j
ltb 12 sf
(Return parameters:) 1 103 99 -310 j
lti 12 sf
(attributeType) 66 134 -329 s
ltr 12 sf
(: type of the attribute.) 4 104 201 -329 j
lti 12 sf
(attrKind) 40 134 -348 s
ltr 12 sf
(: kind of the attribute: 0 = Enumerate, 1 = Integer, 2 = Text, 3 =) 15 321 175 -348 j
(Reference) 48 154 -365 s
(9.3.5) 23 99 -396 s
(GtGetAttributeName) 104 131 -396 s
(Returns the name of an attribute type.) 6 182 99 -411 j
481 -435 113 -435 0 3 2 Seg
481 -438 113 -438 0 1 2 Seg
lhr 14 sf
(char *GtGetAttributeName\(AttributeType attributeType\)) 2 341 113 -460 j
481 -475 113 -475 0 3 2 Seg
481 -472 113 -472 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -504 s
lti 12 sf
(attributeType) 66 134 -523 s
ltr 12 sf
(: type of the attribute.) 4 104 201 -523 j
ltb 12 sf
(Return value:) 1 70 99 -547 j
ltr 12 sf
(name of that type.) 3 86 134 -566 j
(9.3.6) 23 99 -598 s
(GtSameAttributeTypes) 113 131 -598 s
(Compares two attribute types.) 3 147 99 -612 j
481 -636 113 -636 0 3 2 Seg
481 -639 113 -639 0 1 2 Seg
lhr 14 sf
(int GtSameAttributeTypes\(AttributeType type1,) 2 369 113 -661 j
(AttributeType type2\)) 1 126 113 -681 j
481 -696 113 -696 0 3 2 Seg
481 -693 113 -693 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
65 413 669 nwpage
%%Page: 68 68
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(66) 12 99 -77 s
ltb 12 sf
(Parameter:) 60 99 -126 s
lti 12 sf
(type1) 27 134 -145 s
ltr 12 sf
(: first attribute type.) 3 96 161 -145 j
lti 12 sf
(type2) 27 134 -164 s
ltr 12 sf
(: second attribute type.) 3 110 161 -164 j
ltb 12 sf
(Return value:) 1 70 99 -188 j
ltr 12 sf
(0 if both types are different, 1 if they are identical.) 10 237 134 -207 j
(9.3.7) 23 99 -239 s
(GtGetAttributeValue) 104 131 -239 s
(Returns the value of a given attribute of type integer or enumerate.) 11 320 99 -253 j
481 -277 113 -277 0 3 2 Seg
481 -280 113 -280 0 1 2 Seg
lhr 14 sf
(int GtGetAttributeValue\(Attribute attribute\)) 2 260 113 -302 j
481 -318 113 -318 0 3 2 Seg
481 -315 113 -315 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -347 s
lti 12 sf
(attribute) 42 134 -366 s
ltr 12 sf
(: the attribute of interest.) 4 120 177 -366 j
ltb 12 sf
(Return value:) 1 70 99 -390 j
ltr 12 sf
(Value of that attribute.) 3 109 134 -409 j
(9.3.8) 23 99 -441 s
(GtGetTextAttributeLength) 131 131 -441 s
(Returns the length of a given attribute of type text.) 9 243 99 -455 j
481 -479 113 -479 0 3 2 Seg
481 -482 113 -482 0 1 2 Seg
lhr 14 sf
(int GtGetTextAttributeLength\(Attribute attribute\)) 2 293 113 -504 j
481 -519 113 -519 0 3 2 Seg
481 -516 113 -516 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -548 s
lti 12 sf
(attribute) 42 134 -567 s
ltr 12 sf
(: the attribute of interest.) 4 120 177 -567 j
ltb 12 sf
(Return values:) 1 76 99 -591 j
ltr 12 sf
(length of the character string contained in the attribute.) 8 263 134 -611 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
66 413 669 nwpage
%%Page: 69 69
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(67) 12 484 -77 s
(9.3.9) 23 99 -121 s
(GtGiveTextAttributeValue) 131 131 -121 s
(Returns the value of a given attribute of type text.) 9 239 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtGiveTextAttributeValue\(Attribute attribute, char) 3 369 113 -184 j
(*buffer, int *length\)) 2 114 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(attribute) 42 134 -267 s
ltr 12 sf
(: the attribute of interest.) 4 120 177 -267 j
lti 12 sf
(buffer) 29 134 -286 s
ltr 12 sf
(: address of the buffer that will contain the value of the attribute.) 12 307 163 -286 j
lti 12 sf
(length) 29 134 -305 s
ltr 12 sf
(: size of the buffer \(in bytes\).) 6 139 163 -305 j
ltb 12 sf
(Return values:) 1 76 99 -329 j
lti 12 sf
(buffer) 29 134 -348 s
ltr 12 sf
(: character string representing the value of the attribute.) 8 268 163 -348 j
lti 12 sf
(length) 29 134 -368 s
ltr 12 sf
(: actual length of the character string.) 6 178 163 -368 j
ltr 14 sf
(9.4) 16 99 -407 s
(Locators) 50 126 -407 s
ltr 12 sf
(9.4.1) 23 99 -441 s
(GtSearchAttribute) 89 131 -441 s
(Searches the next element that has a given attribute. Searching can be done in a) 14 396 99 -455 j
(subtree or starting from a given element towards the beginning or the end of the) 14 396 99 -471 j
(abstract tree.) 1 64 99 -488 j
481 -512 113 -512 0 3 2 Seg
481 -515 113 -515 0 1 2 Seg
lhr 14 sf
(void GtSearchAttribute\(AttributeType searchedAttribute,) 2 369 113 -537 j
(SearchDomain scope, Element element, Element) 4 369 113 -556 j
(*elementFound, Attribute *attributeFound\)) 2 258 113 -575 j
481 -590 113 -590 0 3 2 Seg
481 -588 113 -588 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -619 s
lti 12 sf
(searchedAttribute) 86 134 -638 s
ltr 12 sf
(: attribute to be searched. If searchedAt\255) 6 275 221 -638 j
(tribute.AttrSSchema is NULL, the next element that has an attribute is) 10 342 154 -655 j
(seached, whatever the attribute.) 3 156 154 -671 j
lti 12 sf
(scope) 27 134 -690 s
ltr 12 sf
(: SearchForward, SearchBackward or SearchInTree.) 4 249 161 -690 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
67 413 669 nwpage
%%Page: 70 70
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(68) 12 99 -116 s
lti 12 sf
(element) 38 134 -160 s
ltr 12 sf
(: the element that is the root of the tree \(if scope = SearchInTree\) or) 14 323 173 -160 j
(the starting element \(if scope = SearchForward or SearchBackward\).) 8 331 154 -177 j
ltb 12 sf
(Return parameters:) 1 103 99 -201 j
lti 12 sf
(elementFound) 69 134 -220 s
ltr 12 sf
(: the element found, or NULL if not found.) 8 198 204 -220 j
lti 12 sf
(attributeFound) 73 134 -239 s
ltr 12 sf
(: the searched attribute, or NULL if not found.) 8 218 207 -239 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
68 413 669 nwpage
%%Page: 71 71
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(69) 12 484 -77 s
ltr 16 sf
(10) 15 99 -125 s
(References and links) 2 126 125 -125 j
ltr 12 sf
(The functions described in this section require that file ) 9 262 113 -144 j
lti 12 sf
(reference.h) 54 375 -144 s
ltr 12 sf
( be included in) 3 66 429 -144 j
(the module that calls them.) 4 130 99 -160 j
ltr 14 sf
(10.1) 23 99 -200 s
(Modificators) 70 132 -200 s
ltr 12 sf
(10.1.1) 29 99 -233 s
(GtSetReference) 77 136 -233 s
(Changes \(or sets\) the target of a reference element. The reference element must be) 13 396 99 -248 j
(part of an abstract tree.) 4 112 99 -264 j
481 -288 113 -288 0 3 2 Seg
481 -291 113 -291 0 1 2 Seg
lhr 14 sf
(void GtSetReference\(Element element, Document document,) 4 369 113 -313 j
(Element target, Document targetDocument\)) 3 264 113 -332 j
481 -348 113 -348 0 3 2 Seg
481 -345 113 -345 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -376 s
lti 12 sf
(element) 38 134 -396 s
ltr 12 sf
(: the reference element to be set.) 6 157 173 -396 j
lti 12 sf
(document) 46 134 -415 s
ltr 12 sf
(: the document containing the reference element.) 6 231 180 -415 j
lti 12 sf
(target) 28 134 -434 s
ltr 12 sf
(: the target element \(NULL for resetting the reference\).) 8 266 162 -434 j
lti 12 sf
(targetDocument) 77 134 -453 s
ltr 12 sf
(: the document containing the target element.) 6 216 211 -453 j
(10.1.2) 29 99 -485 s
(GtNewInclusion) 79 136 -485 s
(Creates an inclusion of a given element.) 6 191 99 -499 j
481 -523 113 -523 0 3 2 Seg
481 -526 113 -526 0 1 2 Seg
lhr 14 sf
(Element GtNewInclusion\(Document document, Element) 3 369 113 -548 j
(target, Document targetDocument\)) 2 211 113 -567 j
481 -583 113 -583 0 3 2 Seg
481 -580 113 -580 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -612 s
lti 12 sf
(document) 46 134 -631 s
ltr 12 sf
(: the document for which the inclusion is created.) 8 232 180 -631 j
lti 12 sf
(target) 28 134 -650 s
ltr 12 sf
(: the element to be included.) 5 134 162 -650 j
lti 12 sf
(targetDocument) 77 134 -669 s
ltr 12 sf
(: the document containing the element to be included.) 8 253 211 -669 j
ltb 12 sf
(Return value:) 1 70 99 -693 j
ltr 12 sf
(the created inclusion.) 2 102 134 -712 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
69 413 669 nwpage
%%Page: 72 72
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(70) 12 99 -77 s
(10.1.3) 29 99 -121 s
(GtCopyReference) 85 136 -121 s
(Copies a reference element into another reference element. Both reference elements) 10 396 99 -135 j
(must be in an abstract tree.) 5 132 99 -152 j
481 -176 113 -176 0 3 2 Seg
481 -179 113 -179 0 1 2 Seg
lhr 14 sf
(void GtCopyReference\(Element element, Element source\)) 4 351 113 -201 j
481 -216 113 -216 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -245 s
lti 12 sf
(element) 38 134 -264 s
ltr 12 sf
(: the reference element to be set.) 6 157 173 -264 j
lti 12 sf
(source) 31 134 -283 s
ltr 12 sf
(: the element to be copied.) 5 126 165 -283 j
(10.1.4) 29 99 -315 s
(GtSetAttributeReference) 121 136 -315 s
(Changes the value of an attribute of type reference) 8 242 99 -329 j
481 -353 113 -353 0 3 2 Seg
481 -356 113 -356 0 1 2 Seg
lhr 14 sf
(void GtSetAttributeReference\(Attribute attribute, Element) 3 369 113 -378 j
(element, Document document, Element target, Document) 5 369 113 -397 j
(targetDocument\)) 103 113 -417 s
481 -432 113 -432 0 3 2 Seg
481 -429 113 -429 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -461 s
lti 12 sf
(attribute) 42 134 -480 s
ltr 12 sf
(: the attribute to be changed.) 5 137 177 -480 j
lti 12 sf
(element) 38 134 -499 s
ltr 12 sf
(: the element with which the attribute is associated.) 8 249 173 -499 j
lti 12 sf
(document) 46 134 -518 s
ltr 12 sf
(: the document containing the attribute.) 5 187 180 -518 j
lti 12 sf
(target) 28 134 -538 s
ltr 12 sf
(: the target element \(NULL for resetting the reference\).) 8 266 162 -538 j
lti 12 sf
(targetDocument) 77 134 -557 s
ltr 12 sf
(: the document containing the target element.) 6 216 211 -557 j
(10.1.5) 29 99 -588 s
(GtCopyAttributeReference) 130 136 -588 s
(Copies the reference attribute source into the reference attribute attribute. Both) 10 396 99 -603 j
(attributes must be attached to an element in an abstract tree.) 10 294 99 -619 j
481 -643 113 -643 0 3 2 Seg
481 -646 113 -646 0 1 2 Seg
lhr 14 sf
(void GtCopyAttributeReference\(Attribute attribute, Element) 3 369 113 -668 j
(element, Attribute source\)) 2 159 113 -687 j
481 -703 113 -703 0 3 2 Seg
481 -700 113 -700 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
70 413 669 nwpage
%%Page: 73 73
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(71) 12 484 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(attribute) 42 134 -145 s
ltr 12 sf
(: the reference attribute to be set.) 6 160 177 -145 j
lti 12 sf
(element) 38 134 -164 s
ltr 12 sf
(: the element to which attribute is attached.) 7 208 173 -164 j
lti 12 sf
(source) 31 134 -183 s
ltr 12 sf
(: the source attribute.) 3 103 165 -183 j
ltr 14 sf
(10.2) 23 99 -223 s
(Accessors) 60 132 -223 s
ltr 12 sf
(10.2.1) 29 99 -256 s
(GtGiveReferredElement) 117 136 -256 s
(Returns the element referred by a given reference element.) 8 281 99 -271 j
481 -295 113 -295 0 3 2 Seg
481 -298 113 -298 0 1 2 Seg
lhr 14 sf
(void GtGiveReferredElement\(Element element, Element) 3 369 113 -320 j
(*target, char *targetDocumentName, Document) 3 369 113 -339 j
(*targetDocument\)) 109 113 -358 s
481 -373 113 -373 0 3 2 Seg
481 -371 113 -371 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -402 s
lti 12 sf
(element) 38 134 -421 s
ltr 12 sf
(: the reference element.) 3 112 173 -421 j
ltb 12 sf
(Return parameters:) 1 103 99 -445 j
lti 12 sf
(target) 28 134 -465 s
ltr 12 sf
(: the referred element, or NULL if that element is not accessible \(empty) 12 333 162 -465 j
(reference or referred document not open\).) 5 198 154 -481 j
lti 12 sf
(targetDocumentName) 106 134 -500 s
ltr 12 sf
(: name of the document containing the referred ele\255) 8 255 240 -500 j
(ment; empty string if the referred element is in the same document as the) 13 342 154 -516 j
(reference element.) 1 88 154 -533 j
lti 12 sf
(targetDocument) 77 134 -552 s
ltr 12 sf
(: the document containing the referred element; 0 if the doc\255) 10 284 211 -552 j
(ument containing the referred element is not loaded or if the referred el\255) 12 342 154 -568 j
(ement is in the same document as the reference element.) 9 273 154 -585 j
(10.2.2) 29 99 -616 s
(GtIsElementTypeReference) 134 136 -616 s
(Indicates whether an element type is a reference.) 7 236 99 -631 j
481 -655 113 -655 0 3 2 Seg
481 -658 113 -658 0 1 2 Seg
lhr 14 sf
(int GtIsElementTypeReference\(ElementType elementType\)) 2 359 113 -680 j
481 -695 113 -695 0 3 2 Seg
481 -692 113 -692 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
71 413 669 nwpage
%%Page: 74 74
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(72) 12 99 -77 s
ltb 12 sf
(Parameter:) 60 99 -126 s
lti 12 sf
(elementType) 62 134 -145 s
ltr 12 sf
(: type to be tested.) 4 90 197 -145 j
ltb 12 sf
(Return value:) 1 70 99 -169 j
ltr 12 sf
(1 = the type is a reference, 0 = the type is not a reference.) 14 276 134 -188 j
(10.2.3) 29 99 -220 s
(GtSameReferences) 93 136 -220 s
(Compares two reference elements.) 3 167 99 -234 j
481 -258 113 -258 0 3 2 Seg
481 -261 113 -261 0 1 2 Seg
lhr 14 sf
(int GtSameReferences\(Element element1, Element) 3 369 113 -283 j
(element2\)) 60 113 -302 s
481 -318 113 -318 0 3 2 Seg
481 -315 113 -315 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -347 s
lti 12 sf
(element1) 44 134 -366 s
ltr 12 sf
(: first reference element.) 3 116 179 -366 j
lti 12 sf
(element2) 44 134 -385 s
ltr 12 sf
(: second reference element.) 3 131 179 -385 j
ltb 12 sf
(Return value:) 1 70 99 -409 j
ltr 12 sf
(0 if both references are different, 1 if they are identical.) 10 260 134 -428 j
(10.2.4) 29 99 -460 s
(GtGiveReferenceAttributeValue) 156 136 -460 s
(Returns the value of a given attribute of type reference) 9 261 99 -474 j
481 -498 113 -498 0 3 2 Seg
481 -501 113 -501 0 1 2 Seg
lhr 14 sf
(void GtGiveReferenceAttributeValue\(Attributeattribute,) 1 369 113 -523 j
(Element *target, char *targetDocumentName, Document) 4 369 113 -542 j
(*targetDocument\)) 109 113 -562 s
481 -577 113 -577 0 3 2 Seg
481 -574 113 -574 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -606 s
lti 12 sf
(attribute) 42 134 -625 s
ltr 12 sf
(: the attribute of interest.) 4 120 177 -625 j
ltb 12 sf
(Return parameters:) 1 103 99 -649 j
lti 12 sf
(target) 28 134 -668 s
ltr 12 sf
(: the element referred by the attribute, or NULL if that element is not) 13 333 162 -668 j
(accessible \(empty reference or referred document not loaded\)) 7 294 154 -684 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
72 413 669 nwpage
%%Page: 75 75
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(73) 12 484 -77 s
lti 12 sf
(targetDocumentName) 106 134 -121 s
ltr 12 sf
(: name of the document containing the referred ele\255) 8 255 240 -121 j
(ment; empty string if the referred element is in the same document as the) 13 342 154 -137 j
(attribute.) 44 154 -154 s
lti 12 sf
(targetDocument) 77 134 -173 s
ltr 12 sf
(: the document containing the referred element; 0 if the doc\255) 10 284 211 -173 j
(ument containing the referred element is not loaded or if the referred el\255) 12 342 154 -189 j
(ement is in the same document as the attribute.) 8 228 154 -205 j
(10.2.5) 29 99 -237 s
(GtIsElementReferred) 104 136 -237 s
(Tells whether a given element is the target of a reference or not.) 12 307 99 -252 j
481 -276 113 -276 0 3 2 Seg
481 -278 113 -278 0 1 2 Seg
lhr 14 sf
(int GtIsElementReferred\(Element element\)) 2 256 113 -300 j
481 -316 113 -316 0 3 2 Seg
481 -313 113 -313 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -345 s
lti 12 sf
(element) 38 134 -364 s
ltr 12 sf
(: the element.) 2 65 173 -364 j
ltb 12 sf
(Return value:) 1 70 99 -388 j
ltr 12 sf
(1 if the element is referred by another element or an attribute, 0 if not.) 14 333 134 -407 j
(10.2.6) 29 99 -439 s
(GtSameReferenceAttributes) 137 136 -439 s
(Compares two reference attributes.) 3 170 99 -453 j
481 -477 113 -477 0 3 2 Seg
481 -480 113 -480 0 1 2 Seg
lhr 14 sf
(int GtSameReferenceAttributes\(Attribute attribute1, Attribute) 3 369 113 -502 j
(attribute2\)) 62 113 -521 s
481 -537 113 -537 0 3 2 Seg
481 -534 113 -534 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -565 s
lti 12 sf
(attribute1) 48 134 -585 s
ltr 12 sf
(: first reference attribute.) 3 119 182 -585 j
lti 12 sf
(attribute2) 48 134 -604 s
ltr 12 sf
(: second reference attribute.) 3 133 182 -604 j
ltb 12 sf
(Return value:) 1 70 99 -628 j
ltr 12 sf
(0 if both references are different, 1 if they are identical.) 10 260 134 -647 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
73 413 669 nwpage
%%Page: 76 76
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(74) 12 99 -77 s
ltr 14 sf
(10.3) 23 99 -122 s
(Locators) 50 132 -122 s
ltr 12 sf
(10.3.1) 29 99 -156 s
(GtNextLoadedReference) 120 136 -156 s
(Searches a reference that has a given element as a target and that belongs to a) 15 396 99 -170 j
(document currently loaded.) 2 129 99 -186 j
481 -210 113 -210 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
lhr 14 sf
(void GtNextLoadedReference\(Element target, Document) 3 369 113 -235 j
(targetDocument, Element *referenceElement, Attribute) 3 369 113 -254 j
(*referenceAttribute, Document *referenceDocument\)) 2 324 113 -274 j
481 -289 113 -289 0 3 2 Seg
481 -286 113 -286 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -318 s
lti 12 sf
(target) 28 134 -337 s
ltr 12 sf
(: the target element.) 3 97 162 -337 j
lti 12 sf
(targetDocument) 77 134 -356 s
ltr 12 sf
(: the document to which the target element belongs.) 8 248 211 -356 j
lti 12 sf
(referenceElement) 85 134 -375 s
ltr 12 sf
(: previous element found by the function; NULL if the first) 10 276 220 -375 j
(reference is searched. \(Both referenceElement and referenceAttribute) 6 342 154 -392 j
(must be NULL if the first reference is searched.\)) 8 232 154 -408 j
lti 12 sf
(referenceAttribute) 89 134 -427 s
ltr 12 sf
(: previous reference attribute found; NULL if the first ref\255) 9 272 224 -427 j
(erence is searched or if the previous reference found by the function was) 12 342 154 -444 j
(an element.) 1 56 154 -460 j
lti 12 sf
(referenceDocument) 94 134 -479 s
ltr 12 sf
(: document to which the previous reference found be\255) 8 267 228 -479 j
(longs; Zero if the first reference is searched.) 7 211 154 -495 j
ltb 12 sf
(Return parameters:) 1 103 99 -519 j
lti 12 sf
(referenceAttribute) 89 134 -539 s
ltr 12 sf
(: the reference attribute found. NULL if the reference found) 9 272 224 -539 j
(is an element or if no reference is found.) 8 190 154 -555 j
lti 12 sf
(referenceElement) 85 134 -574 s
ltr 12 sf
(: the element found. If referenceAttribute is NULL, this) 8 276 220 -574 j
(element is a reference element, else it is the element with which the) 12 342 154 -590 j
(reference attribute found is associated. If both referenceAttribute and) 8 342 154 -607 j
(referenceElement are NULL, then no reference has been found.) 8 301 154 -623 j
lti 12 sf
(referenceDocument) 94 134 -642 s
ltr 12 sf
(: the document to which the reference found belongs.) 8 267 228 -642 j
(Zero if no reference has been found.) 6 171 154 -659 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
74 413 669 nwpage
%%Page: 77 77
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(75) 12 484 -77 s
(10.3.2) 29 99 -121 s
(GtNextUnloadedReferringDocument) 175 136 -121 s
(Returns the name of a document that is not currently loaded and that contains ref\255) 14 396 99 -135 j
(erences to a given target element.) 5 163 99 -152 j
481 -176 113 -176 0 3 2 Seg
481 -179 113 -179 0 1 2 Seg
lhr 14 sf
(void GtNextUnloadedReferringDocument\(Element target,) 2 369 113 -201 j
(Document targetDocument, char *referringDocumentName\)) 3 363 113 -220 j
481 -235 113 -235 0 3 2 Seg
481 -232 113 -232 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -264 s
lti 12 sf
(target) 28 134 -283 s
ltr 12 sf
(: the target element.) 3 97 162 -283 j
lti 12 sf
(targetDocument) 77 134 -302 s
ltr 12 sf
(: the document to which the target element belongs.) 8 248 211 -302 j
lti 12 sf
(referringDocumentName) 119 134 -322 s
ltr 12 sf
(: name of the previous document found. Empty) 7 242 253 -322 j
(string if the first referring document is searched.) 7 229 154 -338 j
ltb 12 sf
(Return parameter:) 1 97 99 -362 j
lti 12 sf
(referringDocumentName) 119 134 -381 s
ltr 12 sf
(: name of the document found. Empty string if no) 9 242 253 -381 j
(referring document has been found.) 4 167 154 -397 j
(10.3.3) 29 99 -429 s
(GtSearchReferenceElement) 133 136 -429 s
(Searches the next reference element. Searching can be done in a subtree or starting) 13 396 99 -444 j
(from a given element towards the beginning or the end of the abstract tree.) 13 357 99 -460 j
481 -484 113 -484 0 3 2 Seg
481 -487 113 -487 0 1 2 Seg
lhr 14 sf
(Element GtSearchReferenceElement\(SearchDomain scope,) 2 369 113 -509 j
(Element element\)) 1 106 113 -528 j
481 -543 113 -543 0 3 2 Seg
481 -540 113 -540 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -572 s
lti 12 sf
(scope) 27 134 -591 s
ltr 12 sf
(: SearchForward, SearchBackward or SearchInTree.) 4 249 161 -591 j
lti 12 sf
(element) 38 134 -611 s
ltr 12 sf
(: the element that is the root of the subtree \(if scope = SearchInTree\)) 13 323 173 -611 j
(or the starting element \(if scope = SearchForward or SearchBack\255) 9 342 154 -627 j
(ward\).) 32 154 -643 s
ltb 12 sf
(Return value:) 1 70 99 -667 j
ltr 12 sf
(the element found, or NULL if not found.) 7 192 134 -686 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
75 413 669 nwpage
%%Page: 78 78
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(75) 12 484 -77 s
ltr 16 sf
(11) 15 99 -125 s
(Languages) 66 125 -125 s
ltr 12 sf
(Group language contains the functions for managing natural languages. These) 9 382 113 -144 j
(functions require that file ) 4 122 99 -160 j
lti 12 sf
(language.h) 50 221 -160 s
ltr 12 sf
( be included in the module that calls them.) 8 201 271 -160 j
(Thot needs to know in which language each basic text element is written, for) 13 382 113 -180 j
(instance for hyphenating words or for checking the spelling. Therefore, an attribute) 11 396 99 -196 j
(called Language is defined by default in each structure schema and it can be asso\255) 14 396 99 -212 j
(ciated with any element \(see section ) 6 193 99 -228 j
(9) 6 292 -228 s
(\). A text element inherits the language) 6 198 298 -228 j
(specified by it first ancestor having a Language attribute, unless it carries its own) 13 396 99 -245 j
(Language attribute.) 1 94 99 -261 j
(The tool kit maintains a table of all languages used in the documents that it) 14 382 113 -280 j
(handles. Each language has a name and an associated alphabet. Other information) 11 396 99 -297 j
(may be associated to a language, such as a dictionary \(for hyphenation or spelling) 13 396 99 -313 j
(checking\). A language is identified by an identifier of type ) 10 277 99 -329 j
lti 12 sf
(Language) 45 376 -329 s
ltr 12 sf
(.) 3 421 -329 s
(There are five predefined languages, whose names are : ISO_latin_1, Fran\347ais,) 10 382 113 -348 j
(English, Symbol and Greek. ``Languages'' ISO_latin_1 and Symbol are not natural) 10 396 99 -365 j
(languages in the same sense as Fran\347ais, English or Greek. They are used when a) 14 396 99 -381 j
(character string must be written in the corresponding alphabet, but is not candidate) 12 396 99 -397 j
(to such linguistic processing as word hyphenation or spelling checking. For instance,) 11 396 99 -414 j
(a piece of C program should be considered as written in the language ISO_latin_1; a) 14 396 99 -430 j
(mathematical symbol such as ) 4 144 99 -446 j
(\317) 4 243 -446 s
( or ) 2 15 247 -446 j
(\245) 6 262 -446 s
( should be considered as written in the language) 8 228 268 -446 j
(Symbol.) 38 99 -463 s
(Other predefined languages, called ) 4 173 113 -482 j
lti 12 sf
(typographic languages) 1 106 286 -482 j
ltr 12 sf
(, are used by a typo\255) 5 104 392 -482 j
(graphic checker \(acronym, short, expo\). The tool kit maintains a table of all typo\255) 13 396 99 -498 j
(graphic languages used in the documents that it handles. Each typographic language) 11 396 99 -515 j
(has a name and an associated alphabet. Other information may be associated to a) 13 396 99 -531 j
(language, such as a dictionary \(for typographic checking\). A typographic language is) 11 396 99 -547 j
(identified by an identifier of type ) 6 156 99 -564 j
lti 12 sf
(Language) 45 255 -564 s
ltr 12 sf
(.) 3 300 -564 s
ltr 14 sf
(11.1) 23 99 -603 s
(Constructors) 72 132 -603 s
ltr 12 sf
(11.1.1) 29 99 -636 s
(GtNewLanguage) 83 136 -636 s
(Declares a new language, its alphabet and optionally the names of the principal) 12 382 113 -651 j
(and secondary dictionaries. All languages used in a Thot document must be explicitly) 12 396 99 -667 j
(declared, except for predefined languages. Thot registers all declared languages and) 10 396 99 -684 j
(allocates a different identifier to each of them. ) 8 252 99 -700 j
(This function does not load) 4 144 351 -700 j
(dictionaries but loads their name. If ) 6 178 99 -716 j
lti 12 sf
(principalDictionary) 94 276 -716 s
ltr 12 sf
( and/or ) 2 37 371 -716 j
lti 12 sf
(secondDictionary) 84 408 -716 s
ltr 12 sf
( ) 1 3 492 -716 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
70 413 669 nwpage
%%Page: 79 79
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(71) 12 484 -77 s
(are not NULL values, dictionaries are loaded when necessary from files) 10 396 99 -121 j
($DICOPAR/principalDictionary and or $DICOPAR/secondDictionary. If an) 5 396 99 -137 j
(application redeclares an existing language, this new declaration has no effect.) 10 375 99 -154 j
481 -178 113 -178 0 3 2 Seg
481 -180 113 -180 0 1 2 Seg
lhr 14 sf
(Language GtNewLanguage\(char *languageName, char) 3 369 113 -203 j
(languageAlphabet, char *principalDictionary, char) 3 369 113 -222 j
(*secondDictionary\)) 119 113 -241 s
481 -256 113 -256 0 3 2 Seg
481 -253 113 -253 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -285 s
lti 12 sf
(languageName) 70 134 -304 s
ltr 12 sf
(: name of the language.) 4 110 204 -304 j
lti 12 sf
(languageAlphabet) 84 134 -324 s
ltr 12 sf
(: alphabet to be used for writing that language:) 8 223 219 -324 j
(`L' for ISO-Latin-1, `G' for Symbol \(Greek\).) 6 219 134 -343 j
lti 12 sf
(principalDictionary) 94 134 -362 s
ltr 12 sf
(: name of the principal dictionary or NULL.) 7 203 228 -362 j
lti 12 sf
(secondDictionary) 84 134 -381 s
ltr 12 sf
(: name of the secondary dictionary or NULL.) 7 211 219 -381 j
ltb 12 sf
(Return value:) 1 70 99 -405 j
ltr 12 sf
(identifier of the new language or 0 if the language cannot be added.) 12 319 134 -424 j
(11.1.2) 29 99 -456 s
(GtLoadLanguageDictionaries) 142 136 -456 s
(Loads the dictionary associated with a language, if it is not loaded yet and registers) 14 396 99 -470 j
(that a dictionary associated with this language has been loaded.) 9 307 99 -487 j
481 -511 113 -511 0 3 2 Seg
481 -514 113 -514 0 1 2 Seg
lhr 14 sf
(boolean GtLoadLanguageDictionaries\(Language) 1 369 113 -536 j
(languageId\)) 74 113 -555 s
481 -570 113 -570 0 3 2 Seg
481 -567 113 -567 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -599 s
lti 12 sf
(languageId) 52 134 -618 s
ltr 12 sf
(: name of the concerned language.) 5 161 186 -618 j
ltb 12 sf
(Return value:) 1 70 99 -642 j
ltr 12 sf
(-1 if the mandatory dictionary can not be loaded.) 8 233 134 -661 j
(0 if no dictionary has been loaded.) 6 162 134 -681 j
(1 if the mandatory dictionary is loaded.) 6 185 134 -700 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
71 413 669 nwpage
%%Page: 80 80
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(72) 12 99 -77 s
(11.1.3) 29 99 -121 s
(GtUnLoadLanguageDictionaries) 156 136 -121 s
(Unloads dictionaries associated with a given language.) 6 263 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtUnLoadLanguageDictionaries\(Language) 1 369 113 -184 j
(languageId\)) 74 113 -204 s
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(languageId) 52 134 -267 s
ltr 12 sf
(: identifier of the language.) 4 127 186 -267 j
(11.1.4) 29 99 -299 s
(GtLoadTypoDictionaries) 119 136 -299 s
(Loads the dictionary associated with a typographic language, if it is not loaded yet) 13 396 99 -313 j
(and registers that a dictionary associated with this typographic language has been) 11 396 99 -329 j
(loaded.) 35 99 -346 s
481 -370 113 -370 0 3 2 Seg
481 -372 113 -372 0 1 2 Seg
lhr 14 sf
(boolean GtLoadTypoDictionaries\(Language languageId\)) 2 346 113 -395 j
481 -410 113 -410 0 3 2 Seg
481 -407 113 -407 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -439 s
lti 12 sf
(languageId) 52 134 -458 s
ltr 12 sf
(: identifier of the concerned typographic language.) 6 236 186 -458 j
ltb 12 sf
(Return value:) 1 70 99 -482 j
ltr 12 sf
(-1 if the mandatory dictionary can not be loaded.) 8 233 134 -501 j
(0 if no dictionary has been loaded.) 6 162 134 -520 j
(1 if the mandatory dictionary is loaded.) 6 185 134 -540 j
(11.1.5) 29 99 -571 s
(GtUnLoadTypoDictionaries) 132 136 -571 s
(Unloads dictionaries associated with a given typographic language.) 7 322 99 -586 j
481 -610 113 -610 0 3 2 Seg
481 -612 113 -612 0 1 2 Seg
lhr 14 sf
(void GtUnLoadTypoDictionaries\(Language languageId\)) 2 340 113 -635 j
481 -650 113 -650 0 3 2 Seg
481 -647 113 -647 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -679 s
lti 12 sf
(languageId) 52 134 -698 s
ltr 12 sf
(: identifier of the concerned typographic language.) 6 236 186 -698 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
72 413 669 nwpage
%%Page: 81 81
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(73) 12 484 -77 s
ltr 14 sf
(11.2) 23 99 -122 s
(Accessors) 60 132 -122 s
ltr 12 sf
(11.2.1) 29 99 -156 s
(GtGetLanguageIdFromName) 142 136 -156 s
(Returns the identifier of a language that matches a language name. If this language) 13 396 99 -170 j
(name is unknown, returns the identifier of a typographic language that matches this) 12 396 99 -186 j
(language name..) 1 78 99 -203 j
481 -227 113 -227 0 3 2 Seg
481 -229 113 -229 0 1 2 Seg
lhr 14 sf
(Language GtGetLanguageIdFromName\(char) 1 369 113 -252 j
(*languageName\)) 104 113 -271 s
481 -286 113 -286 0 3 2 Seg
481 -283 113 -283 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -315 s
lti 12 sf
(languageName) 70 134 -334 s
ltr 12 sf
(: name of the language or of the typographic language.) 9 257 204 -334 j
ltb 12 sf
(Return value:) 1 70 99 -358 j
ltr 12 sf
(identifier of that language or of the typographic language or 0 if the language is) 14 361 134 -377 j
(unknown.) 46 134 -394 s
(11.2.2) 29 99 -425 s
(GtGetDefaultLanguage) 113 136 -425 s
(Returns the identifier of the default language.) 6 216 99 -440 j
481 -464 113 -464 0 3 2 Seg
481 -467 113 -467 0 1 2 Seg
lhr 14 sf
(Language GtGetDefaultLanguage\(\)) 1 215 113 -489 j
481 -504 113 -504 0 3 2 Seg
481 -501 113 -501 0 1 2 Seg
ltb 12 sf
(Return value:) 1 70 99 -533 j
ltr 12 sf
(identifier of the default language.) 4 156 134 -552 j
(11.2.3) 29 99 -584 s
(GtGetLanguageIdFromAlphabet) 157 136 -584 s
(Returns the identifier of the first language that uses a given alphabet.) 11 332 99 -598 j
481 -622 113 -622 0 3 2 Seg
481 -625 113 -625 0 1 2 Seg
lhr 14 sf
(Language GtGetLanguageIdFromAlphabet\(char) 1 369 113 -647 j
(*languageAlphabet\)) 124 113 -666 s
481 -682 113 -682 0 3 2 Seg
481 -679 113 -679 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
73 413 669 nwpage
%%Page: 82 82
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(74) 12 99 -77 s
ltb 12 sf
(Parameter:) 60 99 -126 s
lti 12 sf
(languageAlphabet) 84 134 -145 s
ltr 12 sf
(: the alphabet of interest \(`L' = latin, `G' = greek\).) 10 242 219 -145 j
ltb 12 sf
(Return value:) 1 70 99 -169 j
ltr 12 sf
(identifier of that language or 0 if the language is unknown.) 10 276 134 -188 j
(11.2.4) 29 99 -220 s
(GtGetAlphabet) 75 136 -220 s
(Returns the alphabet associated with a given language.) 7 266 99 -234 j
481 -258 113 -258 0 3 2 Seg
481 -261 113 -261 0 1 2 Seg
lhr 14 sf
(char GtGetAlphabet\(Language languageId\)) 2 268 113 -283 j
481 -299 113 -299 0 3 2 Seg
481 -296 113 -296 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -327 s
lti 12 sf
(languageId) 52 134 -347 s
ltr 12 sf
(: name of the language.) 4 110 186 -347 j
ltb 12 sf
(Return value:) 1 70 99 -371 j
ltr 12 sf
(a character that identifies the alphabet \(`L' = latin, `G' = greek\).) 11 309 134 -390 j
(11.2.5) 29 99 -421 s
(GtGetLanguageName) 107 136 -421 s
(Returns the name of a given language.) 6 183 99 -436 j
481 -460 113 -460 0 3 2 Seg
481 -463 113 -463 0 1 2 Seg
lhr 14 sf
(char *GtGetLanguageName\(Language languageId\)) 2 316 113 -485 j
481 -500 113 -500 0 3 2 Seg
481 -497 113 -497 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -529 s
lti 12 sf
(languageId) 52 134 -548 s
ltr 12 sf
(: identifier of the language.) 4 127 186 -548 j
ltb 12 sf
(Return value:) 1 70 99 -572 j
ltr 12 sf
(the name of the language.) 4 123 134 -591 j
(11.2.6) 29 99 -623 s
(GtGetPrincipalDictionary) 122 136 -623 s
(Returns a pointer to the principal dictionary associated to a language.) 10 332 99 -637 j
481 -661 113 -661 0 3 2 Seg
481 -664 113 -664 0 1 2 Seg
lhr 14 sf
(Dictionary GtGetPrincipalDictionary\(Language languageId\)) 2 360 113 -686 j
481 -702 113 -702 0 3 2 Seg
481 -699 113 -699 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
74 413 669 nwpage
%%Page: 83 83
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(75) 12 484 -77 s
ltb 12 sf
(Return value:) 1 70 99 -126 j
ltr 12 sf
(the pointer to that dictionary or NULL if there is no dictionary for this) 13 361 134 -145 j
(language.) 46 134 -161 s
(11.2.7) 29 99 -193 s
(GtGetSecondaryDictionary) 131 136 -193 s
(Returns a pointer to the secondary dictionary associated to a language.) 10 341 99 -207 j
481 -231 113 -231 0 3 2 Seg
481 -234 113 -234 0 1 2 Seg
lhr 14 sf
(Dictionary GtGetSecondaryDictionary\(Language) 1 369 113 -256 j
(languageId\)) 74 113 -276 s
481 -291 113 -291 0 3 2 Seg
481 -288 113 -288 0 1 2 Seg
ltb 12 sf
(Return value:) 1 70 99 -320 j
ltr 12 sf
(the pointer to that dictionary or NULL if there is no dictionary for this) 13 361 134 -339 j
(language.) 46 134 -355 s
(11.2.8) 29 99 -387 s
(GtGetPrincipalTypoDictionary) 146 136 -387 s
(Returns a pointer to the principal dictionary associated to a typographic language.) 11 391 99 -401 j
481 -425 113 -425 0 3 2 Seg
481 -428 113 -428 0 1 2 Seg
lhr 14 sf
(Dictionary GtGetPrincipalTypoDictionary\(Language) 1 369 113 -450 j
(languageId\)) 74 113 -469 s
481 -485 113 -485 0 3 2 Seg
481 -482 113 -482 0 1 2 Seg
ltb 12 sf
(Return value:) 1 70 99 -514 j
ltr 12 sf
(the pointer to that dictionary or NULL if there is no dictionary for this typo\255) 14 361 134 -533 j
(graphic language.) 1 84 134 -549 j
(11.2.9) 29 99 -581 s
(GtGetSecondaryTypoDictionary) 155 136 -581 s
(Returns a pointer to the secondary dictionary associated to a typographic lan\255) 11 396 99 -595 j
(guage.) 32 99 -612 s
481 -636 113 -636 0 3 2 Seg
481 -638 113 -638 0 1 2 Seg
lhr 14 sf
(Dictionary GtGetSecondaryTypoDictionary\(Language) 1 369 113 -660 j
(languageId\)) 74 113 -680 s
481 -695 113 -695 0 3 2 Seg
481 -692 113 -692 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
75 413 669 nwpage
%%Page: 84 84
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(76) 12 99 -116 s
ltb 12 sf
(Return value:) 1 70 99 -165 j
ltr 12 sf
(the pointer to that dictionary or NULL if there is no dictionary for this typo\255) 14 361 134 -184 j
(graphic language.) 1 84 134 -201 j
(11.2.10) 35 99 -232 s
(GtGetNumberOfLanguages) 133 142 -232 s
(Returns the current number of languages known by Thot.) 8 272 99 -247 j
481 -271 113 -271 0 3 2 Seg
481 -274 113 -274 0 1 2 Seg
lhr 14 sf
(int GtGetNumberOfLanguages\(\)) 1 195 113 -296 j
481 -311 113 -311 0 3 2 Seg
481 -308 113 -308 0 1 2 Seg
ltb 12 sf
(Return value:) 1 70 99 -340 j
ltr 12 sf
(the current number of languages.) 4 156 134 -359 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
76 413 669 nwpage
%%Page: 85 85
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(77) 12 484 -77 s
ltr 16 sf
(12) 15 99 -125 s
(Specific presentation) 1 126 125 -125 j
ltr 12 sf
(The functions described in this section require that file ) 9 262 113 -144 j
lti 12 sf
(presentation.h) 69 375 -144 s
ltr 12 sf
( be includ\255) 2 51 444 -144 j
(ed in the module that calls them.) 6 156 99 -160 j
(When a new specific presentation rule is created \(functions ) 9 294 113 -184 j
(GtNewPRule) 64 407 -184 s
(, Gt\255) 1 24 471 -184 j
(NewPRuleForNamedView and ) 2 162 99 -204 j
(GtCopyPRule\)) 71 261 -204 s
(, it must be attached \(function) 5 163 332 -204 j
(GtAttachPRule) 74 99 -223 s
(\) to an element which is itself part of an abstract tree of a document,) 14 323 173 -223 j
(before any other action can be performed on that specific presentation rule.) 11 356 99 -239 j
ltr 14 sf
(12.1) 23 99 -278 s
(Constructors) 72 132 -278 s
ltr 12 sf
(12.1.1) 29 99 -312 s
(GtNewPRule) 64 136 -312 s
(Creates a new presentation rule of a given type for a given view of a given docu\255) 16 396 99 -326 j
(ment.) 27 99 -343 s
481 -367 113 -367 0 3 2 Seg
481 -370 113 -370 0 1 2 Seg
lhr 14 sf
(PRule GtNewPRule\(int presentationType, View view,) 4 369 113 -392 j
(Document document\)) 1 132 113 -411 j
481 -426 113 -426 0 3 2 Seg
481 -423 113 -423 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -455 s
lti 12 sf
(presentationType) 84 134 -474 s
ltr 12 sf
(: type of the presentation rule to be created. Available) 9 276 219 -474 j
(values are PRSize, PRStyle, PRFont, PRUnderline, PRThickness,) 6 342 154 -491 j
(PRIndent, PRLineSpacing, PRDepth, PRAdjust, PRJustify, PRLineStyle,) 5 342 154 -507 j
(PRLineWeight, PRFillPattern, PRBackground, PRForeground, PRHy\255) 4 342 154 -523 j
(phenate.) 41 154 -540 s
lti 12 sf
(view) 24 134 -559 s
ltr 12 sf
(: the view \(this view must be open\).) 7 174 158 -559 j
lti 12 sf
(document) 46 134 -578 s
ltr 12 sf
(: the document.) 2 73 180 -578 j
ltb 12 sf
(Return value:) 1 70 99 -602 j
ltr 12 sf
(new presentation rule.) 2 108 134 -621 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
77 413 669 nwpage
%%Page: 86 86
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(78) 12 99 -77 s
(12.1.2) 29 99 -121 s
(GtNewPRuleForNamedView) 142 136 -121 s
(Creates a new presentation rule of a given type for a given view of a given document.) 16 396 99 -135 j
(The view is identified by its name.) 6 164 99 -152 j
481 -176 113 -176 0 3 2 Seg
481 -179 113 -179 0 1 2 Seg
lhr 14 sf
(PRule GtNewPRuleForNamedView\(int presentationType,) 2 369 113 -201 j
(char *viewName, Document document\)) 3 239 113 -220 j
481 -235 113 -235 0 3 2 Seg
481 -232 113 -232 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -264 s
lti 12 sf
(presentationType) 84 134 -283 s
ltr 12 sf
(: type of the presentation rule to be created. Available) 9 276 219 -283 j
(values are PRSize, PRStyle, PRFont, PRUnderline, PRThickness,) 6 342 154 -300 j
(PRIndent, PRLineSpacing, PRDepth, PRAdjust, PRJustify, PRLineStyle,) 5 342 154 -316 j
(PRLineWeight, PRFillPattern, PRBackground, PRForeground, PRHy\255) 4 342 154 -332 j
(phenate.) 41 154 -348 s
lti 12 sf
(viewName) 53 134 -368 s
ltr 12 sf
(: the name of the view \(this view does not need to be open\).) 13 288 187 -368 j
lti 12 sf
(document) 46 134 -387 s
ltr 12 sf
(: the document.) 2 73 180 -387 j
ltb 12 sf
(Return value:) 1 70 99 -411 j
ltr 12 sf
(new presentation rule.) 2 108 134 -430 j
(12.1.3) 29 99 -462 s
(GtCopyPRule) 66 136 -462 s
(Creates a new presentation rule and initializes it with a copy of an existing pre\255) 14 396 99 -476 j
(sentation rule.) 1 69 99 -492 j
481 -516 113 -516 0 3 2 Seg
481 -519 113 -519 0 1 2 Seg
lhr 14 sf
(PRule GtCopyPRule\(PRule pRule\)) 2 204 113 -541 j
481 -557 113 -557 0 3 2 Seg
481 -554 113 -554 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -586 s
lti 12 sf
(pRule) 28 134 -605 s
ltr 12 sf
(: presentation rule to be copied.) 5 151 162 -605 j
ltb 12 sf
(Return value:) 1 70 99 -629 j
ltr 12 sf
(new presentation rule.) 2 108 134 -648 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
78 413 669 nwpage
%%Page: 87 87
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(79) 12 484 -77 s
(12.1.4) 29 99 -121 s
(GtAttachPRule) 74 136 -121 s
(Attaches a presentation rule to an element.) 6 208 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtAttachPRule\(Element element, PRule pRule,) 4 369 113 -184 j
(Document document\)) 1 132 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
lcr 12 sf
(void GtAttachPRule\(element, pRule, document\)) 3 296 141 -242 j
(Element element;) 1 108 141 -255 j
(PRule pRule;) 1 81 141 -269 j
(Document document;) 1 121 141 -282 j
ltb 12 sf
(Parameters:) 66 99 -306 s
lti 12 sf
(element) 38 134 -325 s
ltr 12 sf
(: the element to which the presentation rule has to be attached.) 11 302 173 -325 j
lti 12 sf
(pRule) 28 134 -345 s
ltr 12 sf
(: the presentation rule to be attached.) 6 180 162 -345 j
lti 12 sf
(document) 46 134 -364 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -364 j
(12.1.5) 29 99 -396 s
(GtRemovePRule) 81 136 -396 s
(Removes a presentation rule from an element and release that rule.) 10 323 99 -410 j
481 -434 113 -434 0 3 2 Seg
481 -437 113 -437 0 1 2 Seg
lhr 14 sf
(void GtRemovePRule\(Element element, PRule pRule,) 4 369 113 -459 j
(Document document) 1 127 113 -478 j
481 -493 113 -493 0 3 2 Seg
481 -491 113 -491 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -522 s
lti 12 sf
(element) 38 134 -541 s
ltr 12 sf
(: the element with which the presentation rule is associated.) 9 289 173 -541 j
lti 12 sf
(pRule) 28 134 -561 s
ltr 12 sf
(: the presentation rule to be removed.) 6 180 162 -561 j
lti 12 sf
(document) 46 134 -580 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -580 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
79 413 669 nwpage
%%Page: 88 88
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(80) 12 99 -77 s
ltr 14 sf
(12.2) 23 99 -122 s
(Modificators) 70 132 -122 s
ltr 12 sf
(12.2.1) 29 99 -156 s
(GtSetPRuleValue) 86 136 -156 s
(Changes the value of a presentation rule. The presentation rule must be attached to) 13 396 99 -170 j
(an element that is part of a document.) 7 180 99 -186 j
481 -210 113 -210 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
lhr 14 sf
(void GtSetPRuleValue\(Element element, PRule pRule, int) 5 369 113 -235 j
(value, Document document\)) 2 172 113 -254 j
481 -270 113 -270 0 3 2 Seg
481 -267 113 -267 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -299 s
lti 12 sf
(element) 38 134 -318 s
ltr 12 sf
(: the element to which the presentation rule is attached.) 9 267 173 -318 j
lti 12 sf
(pRule) 28 134 -337 s
ltr 12 sf
(: the presentation rule to be changed.) 6 178 162 -337 j
lti 12 sf
(value) 26 134 -356 s
ltr 12 sf
(: the value to be set.) 5 98 160 -356 j
lti 12 sf
(document) 46 134 -375 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -375 j
ltb 12 sf
(Valid values according to rule type:) 5 181 99 -399 j
lti 12 sf
(RSize) 28 134 -419 s
ltr 12 sf
(: an integer between 6 and 72 \(body size in points\).) 10 247 162 -419 j
lti 12 sf
(RStyle) 32 134 -438 s
ltr 12 sf
(: StyleRoman, StyleBold, StyleItalics, StyleOblique, StyleBoldItalics,) 5 329 166 -438 j
(StyleBoldOblique.) 87 154 -454 s
lti 12 sf
(RFont) 31 134 -473 s
ltr 12 sf
(: FontTimes, FontHelvetica, FontCourier.) 3 201 165 -473 j
lti 12 sf
(RUnderline) 55 134 -492 s
ltr 12 sf
(: NoUnderline, Underline, Overline, CrossOut.) 4 221 189 -492 j
lti 12 sf
(RThickness) 56 134 -512 s
ltr 12 sf
(: ThinUnderline, ThickUnderline.) 2 154 190 -512 j
lti 12 sf
(RIndent) 39 134 -531 s
ltr 12 sf
(: a positive, null or negative integer \(indentation in points\).) 9 282 174 -531 j
lti 12 sf
(RLineSpacing) 66 134 -550 s
ltr 12 sf
(: a positive integer \(line spacing in points\).) 7 205 201 -550 j
lti 12 sf
(RDepth) 37 134 -569 s
ltr 12 sf
(: a positive integer \(depth of the element\).) 7 203 172 -569 j
lti 12 sf
(RAdjust) 39 134 -588 s
ltr 12 sf
(: AdjustLeft, AdjustRight, Centered, LeftWithDots.) 4 248 174 -588 j
lti 12 sf
(RJustify) 40 134 -608 s
ltr 12 sf
(: Justified, NotJustified.) 2 111 175 -608 j
lti 12 sf
(RHyphenate) 60 134 -627 s
ltr 12 sf
(: Hyphenation, NoHyphenation.) 2 152 195 -627 j
lti 12 sf
(RLineStyle) 54 134 -646 s
ltr 12 sf
(: SolidLine, DashedLine, DottedLine.) 3 179 188 -646 j
lti 12 sf
(RLineWeight) 63 134 -665 s
ltr 12 sf
(: a positive or null integer \(stroke width for graphics\).) 9 256 198 -665 j
lti 12 sf
(RFillPattern) 61 134 -684 s
ltr 12 sf
(: rank of the pattern in the file thot.pattern.) 8 204 196 -684 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
80 413 669 nwpage
%%Page: 89 89
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(81) 12 484 -77 s
lti 12 sf
(RBackground) 63 134 -121 s
ltr 12 sf
(: rank of the background color in the file thot.color.) 9 238 198 -121 j
lti 12 sf
(RForeground) 62 134 -140 s
ltr 12 sf
(: rank of the foreground color in the file thot.color.) 9 234 197 -140 j
(12.2.2) 29 99 -172 s
(GtChangeBoxSize) 89 136 -172 s
(Changes the height and width of the box corresponding to an element in a given) 14 396 99 -186 j
(view.) 26 99 -203 s
481 -227 113 -227 0 3 2 Seg
481 -229 113 -229 0 1 2 Seg
lhr 14 sf
(void GtChangeBoxSize\(Element element, View view, int) 5 369 113 -252 j
(deltaX, int deltaY, Document document\)) 4 241 113 -271 j
481 -286 113 -286 0 3 2 Seg
481 -283 113 -283 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -315 s
lti 12 sf
(element) 38 134 -334 s
ltr 12 sf
(: the element of interest.) 4 117 173 -334 j
lti 12 sf
(view) 24 134 -353 s
ltr 12 sf
(: the view.) 2 50 158 -353 j
lti 12 sf
(deltaX) 32 134 -372 s
ltr 12 sf
(: width increment in points \(positive, negative or zero\).) 8 264 166 -372 j
lti 12 sf
(deltaY) 31 134 -392 s
ltr 12 sf
(: height increment in points \(positive, negative or zero\).) 8 267 165 -392 j
lti 12 sf
(document) 46 134 -411 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -411 j
(12.2.3) 29 99 -443 s
(GtChangeBoxPosition) 108 136 -443 s
(Moves the box of an element in a given view.) 9 217 99 -457 j
481 -481 113 -481 0 3 2 Seg
481 -484 113 -484 0 1 2 Seg
lhr 14 sf
(void GtChangeBoxPosition\(Element element, View view, int) 5 369 113 -506 j
(deltaX, int deltaY, Document document\)) 4 241 113 -525 j
481 -540 113 -540 0 3 2 Seg
481 -538 113 -538 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -569 s
lti 12 sf
(element) 38 134 -588 s
ltr 12 sf
(: the element of interest.) 4 117 173 -588 j
lti 12 sf
(view) 24 134 -608 s
ltr 12 sf
(: the view.) 2 50 158 -608 j
lti 12 sf
(deltaX) 32 134 -627 s
ltr 12 sf
(: horizontal shift in points \(positive, negative or zero\).) 8 259 166 -627 j
lti 12 sf
(deltaY) 31 134 -646 s
ltr 12 sf
(: vertical shift in points \(positive, negative or zero\).) 8 247 165 -646 j
lti 12 sf
(document) 46 134 -665 s
ltr 12 sf
(: the document to which the element belongs.) 7 216 180 -665 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
81 413 669 nwpage
%%Page: 90 90
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(82) 12 99 -77 s
ltr 14 sf
(12.3) 23 99 -122 s
(Accessors) 60 132 -122 s
ltr 12 sf
(12.3.1) 29 99 -156 s
(GtGiveBoxSize) 76 136 -156 s
(Returns the height and width of the box corresponding to an element in a given) 14 396 99 -170 j
(view.) 26 99 -186 s
481 -210 113 -210 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
lhr 14 sf
(void GtGiveBoxSize\(Element element, View view, int *width,) 6 369 113 -235 j
(int *height\)) 1 67 113 -254 j
481 -270 113 -270 0 3 2 Seg
481 -267 113 -267 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -299 s
lti 12 sf
(element) 38 134 -318 s
ltr 12 sf
(: the element of interest.) 4 117 173 -318 j
lti 12 sf
(view) 24 134 -337 s
ltr 12 sf
(: the view.) 2 50 158 -337 j
ltb 12 sf
(Return parameters:) 1 103 99 -361 j
lti 12 sf
(width) 28 134 -380 s
ltr 12 sf
(: box width in points.) 4 100 162 -380 j
lti 12 sf
(height) 30 134 -399 s
ltr 12 sf
(: box height in points.) 4 103 164 -399 j
(12.3.2) 29 99 -431 s
(GtGiveBoxPosition) 94 136 -431 s
(Returns the x and y coordinates of the box corresponding to an element in a given) 15 396 99 -445 j
(view. The returned coordinates indicate the distance in points between the upper left) 12 396 99 -462 j
(corner of the box and the upper left corner of its parent box.) 12 282 99 -478 j
481 -502 113 -502 0 3 2 Seg
481 -505 113 -505 0 1 2 Seg
lhr 14 sf
(void GtGiveBoxPosition\(Element element, View view, int) 5 369 113 -527 j
(*xCoord, int *yCoord\)) 2 132 113 -546 j
481 -562 113 -562 0 3 2 Seg
481 -559 113 -559 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -590 s
lti 12 sf
(element) 38 134 -610 s
ltr 12 sf
(: the element of interest.) 4 117 173 -610 j
lti 12 sf
(view) 24 134 -629 s
ltr 12 sf
(: the view.) 2 50 158 -629 j
ltb 12 sf
(Return parameters:) 1 103 99 -653 j
lti 12 sf
(xCoord) 34 134 -672 s
ltr 12 sf
(: distance from the left edge of the parent box to the left edge of the) 15 327 168 -672 j
(box, in points.) 2 67 154 -688 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
82 413 669 nwpage
%%Page: 91 91
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(83) 12 484 -77 s
lti 12 sf
(yCoord) 34 134 -121 s
ltr 12 sf
(: distance from the upper edge of the parent box to the upper edge of) 14 327 168 -121 j
(the box, in points.) 3 85 154 -137 j
(12.3.3) 29 99 -169 s
(GtNextPRule) 65 136 -169 s
(Returns the first presentation rule associated with a given element \(if pRule is) 12 396 99 -183 j
(NULL\) or the presentation rule that follows a given rule of a given element.) 13 361 99 -200 j
481 -224 113 -224 0 3 2 Seg
481 -227 113 -227 0 1 2 Seg
lhr 14 sf
(void GtNextPRule\(Element element, PRule *pRule\)) 4 305 113 -249 j
481 -264 113 -264 0 3 2 Seg
481 -261 113 -261 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -293 s
lti 12 sf
(element) 38 134 -312 s
ltr 12 sf
(: the element of interest.) 4 117 173 -312 j
lti 12 sf
(pRule) 28 134 -331 s
ltr 12 sf
(: a presentation rule of that element, or NULL if the first rule is) 13 333 162 -331 j
(asked.) 32 154 -348 s
ltb 12 sf
(Return parameter:) 1 97 99 -372 j
lti 12 sf
(pRule) 28 134 -391 s
ltr 12 sf
(: the next presentation rule, or NULL if pRule is the last rule of the) 14 333 162 -391 j
(element.) 41 154 -407 s
(12.3.4) 29 99 -439 s
(GtGetPRule) 60 136 -439 s
(Returns a presentation rule of a given type associated with a given element.) 12 365 99 -453 j
481 -477 113 -477 0 3 2 Seg
481 -480 113 -480 0 1 2 Seg
lhr 14 sf
(PRule GtGetPRule\(Element element, int presentationType\)) 4 354 113 -502 j
481 -517 113 -517 0 3 2 Seg
481 -515 113 -515 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -546 s
lti 12 sf
(element) 38 134 -565 s
ltr 12 sf
(: the element of interest.) 4 117 173 -565 j
lti 12 sf
(presentationType) 84 134 -585 s
ltr 12 sf
(: type of the desired presentation rule. Available values are) 9 276 219 -585 j
(PRSize, PRStyle, PRFont, PRUnderline, PRThickness, PRIndent,) 5 342 154 -601 j
(PRLineSpacing, PRDepth, PRAdjust, PRJustify, PRLineStyle,) 4 342 154 -617 j
(PRLineWeight, PRFillPattern, PRBackground, PRForeground, PRHy\255) 4 342 154 -634 j
(phenate.) 41 154 -650 s
ltb 12 sf
(Return value:) 1 70 99 -674 j
ltr 12 sf
(the presentation rule found, or NULL if the element does not have this type of) 14 361 134 -693 j
(presentation rule.) 1 84 134 -709 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
83 413 669 nwpage
%%Page: 92 92
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(84) 12 99 -77 s
(12.3.5) 29 99 -121 s
(GtGetPRuleType) 84 136 -121 s
(Returns the type of a presentation rule.) 6 188 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(int GtGetPRuleType\(PRule pRule\)) 2 204 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -228 s
lti 12 sf
(pRule) 28 134 -248 s
ltr 12 sf
(: the presentation rule of interest.) 5 160 162 -248 j
ltb 12 sf
(Return value:) 1 70 99 -272 j
ltr 12 sf
(type of that presentation rule. Available values are PRSize, PRStyle, PR\255) 10 361 134 -291 j
(Font, PRUnderline, PRThickness, PRIndent, PRLineSpacing, PRDepth,) 5 361 134 -307 j
(PRAdjust, PRJustify, PRLineStyle, PRLineWeight, PRFillPattern,) 4 361 134 -324 j
(PRBackground, PRForeground, PRHyphenate.) 2 223 134 -340 j
(12.3.6) 29 99 -372 s
(GtGetPRuleValue) 88 136 -372 s
(Returns the value of a presentation rule.) 6 193 99 -386 j
481 -410 113 -410 0 3 2 Seg
481 -413 113 -413 0 1 2 Seg
lhr 14 sf
(int GtGetPRuleValue\(PRule pRule\)) 2 210 113 -435 j
481 -450 113 -450 0 3 2 Seg
481 -447 113 -447 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -479 s
lti 12 sf
(pRule) 28 134 -498 s
ltr 12 sf
(: the presentation rule of interest.) 5 160 162 -498 j
ltb 12 sf
(Return values according to rule type:) 5 190 99 -522 j
lti 12 sf
(RSize) 28 134 -541 s
ltr 12 sf
(: an integer between 6 and 72 \(body size in points\).) 10 247 162 -541 j
lti 12 sf
(RStyle) 32 134 -561 s
ltr 12 sf
(: StyleRoman, StyleBold, StyleItalics, StyleOblique, StyleBoldItalics,) 5 329 166 -561 j
(StyleBoldOblique.) 87 154 -577 s
lti 12 sf
(RFont) 31 134 -596 s
ltr 12 sf
(: FontTimes, FontHelvetica, FontCourier.) 3 201 165 -596 j
lti 12 sf
(RUnderline) 55 134 -615 s
ltr 12 sf
(: NoUnderline, Underline, Overline, CrossOut.) 4 221 189 -615 j
lti 12 sf
(RThickness) 56 134 -635 s
ltr 12 sf
(: ThinUnderline, ThickUnderline.) 2 154 190 -635 j
lti 12 sf
(RIndent) 39 134 -654 s
ltr 12 sf
(: a positive, null or negative integer \(indentation in points\).) 9 282 174 -654 j
lti 12 sf
(RLineSpacing) 66 134 -673 s
ltr 12 sf
(: a positive integer \(line spacing in points\).) 7 205 201 -673 j
lti 12 sf
(RDepth) 37 134 -692 s
ltr 12 sf
(: a positive integer \(depth of the element\).) 7 203 172 -692 j
lti 12 sf
(RAdjust) 39 134 -711 s
ltr 12 sf
(: AdjustLeft, AdjustRight, Centered, LeftWithDots.) 4 248 174 -711 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
84 413 669 nwpage
%%Page: 93 93
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(85) 12 484 -116 s
lti 12 sf
(RJustify) 40 134 -160 s
ltr 12 sf
(: Justified, NotJustified.) 2 111 175 -160 j
lti 12 sf
(RHyphenate) 60 134 -180 s
ltr 12 sf
(: Hyphenation, NoHyphenation.) 2 152 195 -180 j
lti 12 sf
(RLineStyle) 54 134 -199 s
ltr 12 sf
(: SolidLine, DashedLine, DottedLine.) 3 179 188 -199 j
lti 12 sf
(RLineWeight) 63 134 -218 s
ltr 12 sf
(: a positive or null integer \(stroke width for graphics\).) 9 256 198 -218 j
lti 12 sf
(RFillPattern) 61 134 -237 s
ltr 12 sf
(: rank of the pattern in the file thot.pattern.) 8 204 196 -237 j
lti 12 sf
(RBackground) 63 134 -256 s
ltr 12 sf
(: rank of the background color in the file thot.color.) 9 238 198 -256 j
lti 12 sf
(RForeground) 62 134 -276 s
ltr 12 sf
(: rank of the foreground color in the file thot.color.) 9 234 197 -276 j
(12.3.7) 29 99 -307 s
(GtSamePRules) 74 136 -307 s
(Compares two presentation rules associated with the same element or with different) 11 396 99 -322 j
(elements.) 47 99 -338 s
481 -362 113 -362 0 3 2 Seg
481 -365 113 -365 0 1 2 Seg
lhr 14 sf
(int GtSamePRules\(PRule pRule1, PRule pRule2\)) 4 290 113 -387 j
481 -402 113 -402 0 3 2 Seg
481 -399 113 -399 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -431 s
lti 12 sf
(pRule1) 34 134 -450 s
ltr 12 sf
(: first presentation rule to be compared.) 6 188 168 -450 j
lti 12 sf
(pRule2) 34 134 -469 s
ltr 12 sf
(: second presentation rule to be compared.) 6 203 168 -469 j
ltb 12 sf
(Return value:) 1 70 99 -493 j
ltr 12 sf
(0 if both rules are different, 1 if they are identical.) 10 234 134 -513 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
85 413 669 nwpage
%%Page: 94 94
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(86) 12 99 -77 s
ltr 16 sf
(13) 15 99 -125 s
(Views) 39 125 -125 s
ltr 12 sf
(The functions described in this section require that file ) 9 263 113 -144 j
lti 12 sf
(view.h) 33 376 -144 s
ltr 12 sf
( be included in the) 4 86 409 -144 j
(module that calls them. They are available only in the Thot Editor library.) 12 349 99 -160 j
ltr 14 sf
(13.1) 23 99 -200 s
(Constructors) 72 132 -200 s
ltr 12 sf
(13.1.1) 29 99 -233 s
(GtOpenMainView) 89 136 -233 s
(Opens the main view of a document. This document must have a PSchema \(see) 13 396 99 -248 j
(GtSetPSchema) 73 99 -267 s
(\).) 8 172 -267 s
481 -291 113 -291 0 3 2 Seg
481 -294 113 -294 0 1 2 Seg
lhr 14 sf
(View GtOpenMainView\(Document document, int x, int y, int w,) 8 369 113 -316 j
(int h\)) 1 31 113 -335 j
481 -350 113 -350 0 3 2 Seg
481 -348 113 -348 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -379 s
lti 12 sf
(document) 46 134 -398 s
ltr 12 sf
(: the document for which a window must be open.) 9 235 180 -398 j
lti 12 sf
(x, y) 1 17 134 -418 j
ltr 12 sf
(: coordinate \(in millimeters\) of the upper left corner of the window that will) 13 344 152 -418 j
(display the view.) 2 82 154 -434 j
lti 12 sf
(w, h) 1 20 134 -453 j
ltr 12 sf
(: width and height \(in millimeters\) of the upper left corner of the window) 13 341 155 -453 j
(that will display the view.) 4 124 154 -469 j
ltb 12 sf
(Return value:) 1 70 99 -493 j
ltr 12 sf
(the view opened or 0 if the view cannot be opened.) 10 242 134 -513 j
(13.1.2) 29 99 -544 s
(GtOpenView) 64 136 -544 s
(Opens a view for a document. This document must have a PSchema \(see ) 13 355 99 -564 j
(GtSetP\255) 41 454 -564 s
(Schema) 37 99 -580 s
(\).) 8 136 -580 s
481 -604 113 -604 0 3 2 Seg
481 -607 113 -607 0 1 2 Seg
lhr 14 sf
(View GtOpenView\(Document document, char *viewName, int) 5 369 113 -629 j
(x, int y, int w, int h\)) 6 109 113 -648 j
481 -663 113 -663 0 3 2 Seg
481 -660 113 -660 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
86 413 669 nwpage
%%Page: 95 95
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(87) 12 484 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(document) 46 134 -145 s
ltr 12 sf
(: the document.) 2 73 180 -145 j
lti 12 sf
(viewName) 53 134 -164 s
ltr 12 sf
(: name of the view to be opened.) 7 155 187 -164 j
lti 12 sf
(x, y) 1 17 134 -183 j
ltr 12 sf
(: coordinate \(in millimeters\) of the upper left corner of the window that will) 13 344 152 -183 j
(display the view.) 2 82 154 -200 j
lti 12 sf
(w, h) 1 20 134 -219 j
ltr 12 sf
(: width and height \(in millimeters\) of the upper left corner of the window) 13 341 155 -219 j
(that will display the view.) 4 124 154 -235 j
ltb 12 sf
(Return value:) 1 70 99 -259 j
ltr 12 sf
(the view opened or 0 if the view cannot be opened.) 10 242 134 -278 j
(13.1.3) 29 99 -310 s
(GtOpenSubView) 83 136 -310 s
(Opens a view that shows only a subtree. This document must have a PSchema \(see) 14 396 99 -324 j
(GtSetPSchema) 73 99 -344 s
(\).) 8 172 -344 s
481 -368 113 -368 0 3 2 Seg
481 -371 113 -371 0 1 2 Seg
lhr 14 sf
(View GtOpenSubView\(Document document, char) 3 369 113 -393 j
(*viewName, int x, int y, int w, int h, Element subtree\)) 10 310 113 -412 j
481 -427 113 -427 0 3 2 Seg
481 -424 113 -424 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -456 s
lti 12 sf
(document) 46 134 -475 s
ltr 12 sf
(: the document.) 2 73 180 -475 j
lti 12 sf
(viewName) 53 134 -494 s
ltr 12 sf
(: name of the view to be opened.) 7 155 187 -494 j
(x, y: coordinate \(in millimeters\) of the upper left corner of the) 11 291 134 -514 j
(window that will display the view.) 5 164 134 -533 j
(w, h: width and height \(in millimeters\) of the upper left corner of the) 13 324 134 -552 j
(window that will display the view.) 5 164 134 -571 j
lti 12 sf
(subtree) 36 134 -590 s
ltr 12 sf
(: root element of the subtree to be shown in the view.) 11 255 170 -590 j
ltb 12 sf
(Return value:) 1 70 99 -614 j
ltr 12 sf
(the view opened or 0 if the view cannot be opened.) 10 242 134 -634 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
87 413 669 nwpage
%%Page: 96 96
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(88) 12 99 -77 s
(13.1.4) 29 99 -121 s
(GtChangeViewTitle) 97 136 -121 s
(Changes the title of a view.) 5 132 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtChangeViewTitle\(Document document, View view,) 4 369 113 -184 j
(char *title\)) 1 64 113 -204 j
481 -219 113 -219 0 3 2 Seg
481 -216 113 -216 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -248 s
lti 12 sf
(document) 46 134 -267 s
ltr 12 sf
(: the document.) 2 73 180 -267 j
lti 12 sf
(view) 24 134 -286 s
ltr 12 sf
(: the view .) 3 53 158 -286 j
(title: the new title.) 3 88 134 -305 j
(13.1.5) 29 99 -337 s
(GtCloseView) 66 136 -337 s
(Closes a view.) 2 71 99 -351 j
481 -375 113 -375 0 3 2 Seg
481 -378 113 -378 0 1 2 Seg
lhr 14 sf
(void GtCloseView\(Document document, View view\)) 4 313 113 -400 j
481 -416 113 -416 0 3 2 Seg
481 -413 113 -413 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -444 s
lti 12 sf
(document) 46 134 -464 s
ltr 12 sf
(: the document for which a view must be closed.) 9 228 180 -464 j
lti 12 sf
(view) 24 134 -483 s
ltr 12 sf
(: the view to be closed.) 5 110 158 -483 j
ltr 14 sf
(13.2) 23 99 -522 s
(Modificators) 70 132 -522 s
ltr 12 sf
(13.2.1) 29 99 -556 s
(GtSetSensibility) 80 136 -556 s
(Changes the current sensibility used to display a given view of a given document.) 13 390 99 -570 j
481 -594 113 -594 0 3 2 Seg
481 -597 113 -597 0 1 2 Seg
lhr 14 sf
(void GtSetSensibility\(Document document, View view, int) 5 369 113 -619 j
(value\)) 38 113 -638 s
481 -654 113 -654 0 3 2 Seg
481 -651 113 -651 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
88 413 669 nwpage
%%Page: 97 97
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(89) 12 484 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(document) 46 134 -145 s
ltr 12 sf
(: the document. Cannot be 0.) 5 136 180 -145 j
lti 12 sf
(view) 24 134 -164 s
ltr 12 sf
(: the view.) 2 50 158 -164 j
lti 12 sf
(value) 26 134 -183 s
ltr 12 sf
(: new value of the sensibility.) 5 140 160 -183 j
(13.2.2) 29 99 -215 s
(GtSetZoom) 57 136 -215 s
(Changes the current zoom used to display a given view of a given document.) 13 366 99 -229 j
481 -253 113 -253 0 3 2 Seg
481 -256 113 -256 0 1 2 Seg
lhr 14 sf
(void GtSetZoom\(Document document, View view, int value\)) 6 361 113 -278 j
481 -294 113 -294 0 3 2 Seg
481 -291 113 -291 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -323 s
lti 12 sf
(document) 46 134 -342 s
ltr 12 sf
(: the document. Cannot be 0.) 5 136 180 -342 j
lti 12 sf
(view) 24 134 -361 s
ltr 12 sf
(: the view.) 2 50 158 -361 j
lti 12 sf
(value) 26 134 -380 s
ltr 12 sf
(: new value of the zoom.) 5 116 160 -380 j
(13.2.3) 29 99 -412 s
(GtShowElement) 80 136 -412 s
(Shows a given element in a given view of a given document.) 11 287 99 -426 j
481 -450 113 -450 0 3 2 Seg
481 -453 113 -453 0 1 2 Seg
lhr 14 sf
(void GtShowElement\(Document document, View view,) 4 369 113 -475 j
(Element element, int position\)) 3 179 113 -494 j
481 -510 113 -510 0 3 2 Seg
481 -507 113 -507 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -539 s
lti 12 sf
(document) 46 134 -558 s
ltr 12 sf
(: the document to which the element to be shown belongs. Cannot) 11 315 180 -558 j
(be 0.) 1 23 154 -574 j
lti 12 sf
(view) 24 134 -593 s
ltr 12 sf
(: the view where the element must be shown.) 8 218 158 -593 j
lti 12 sf
(element) 38 134 -612 s
ltr 12 sf
(: the element to be shown.) 5 127 173 -612 j
lti 12 sf
(position) 39 134 -632 s
ltr 12 sf
(: position of the top of the element in the window. Supposing that the) 13 322 174 -632 j
(y axis is oriented from the top of the window \(coordinate 0\) to the bottom) 14 342 154 -648 j
(\(coordinate 100, whatever the actual height of the window\), position is) 10 342 154 -664 j
(the desired y coordinate of the top of the element.) 9 237 154 -681 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
89 413 669 nwpage
%%Page: 98 98
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(90) 12 99 -77 s
(13.2.4) 29 99 -121 s
(GtRaiseView) 66 136 -121 s
(Maps and raises a given view of a given document.) 9 245 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtRaiseView\(Document document, View view\)) 4 312 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -228 s
lti 12 sf
(document) 46 134 -248 s
ltr 12 sf
(: the document to which the element to be shown belongs. Cannot) 11 315 180 -248 j
(be 0.) 1 23 154 -264 j
lti 12 sf
(view) 24 134 -283 s
ltr 12 sf
(: the view where the element must be shown.) 8 218 158 -283 j
(13.2.5) 29 99 -315 s
(GtSetDisplayMode) 94 136 -315 s
(Changes display mode for a document. Three display modes are available \(Dis\255) 11 396 99 -329 j
(playImmediately, DeferredDisplay and NoComputedDisplay\). In the immediate) 6 396 99 -346 j
(mode, each modification made in the abstract tree of a document is immediately re\255) 13 396 99 -362 j
(flected in all opened views where the modification can be seen. In the deferred mode,) 14 396 99 -378 j
(the programmer can decide when the modifications are made visible to the user; this) 13 396 99 -395 j
(avoids the image of the document to blink when several elementary changes are) 12 396 99 -411 j
(made successively. Modifications are displayed when mode is changed to Dis\255) 10 396 99 -427 j
(playImmediately. In the NoComputedDisplay mode, the modifications are not dis\255) 9 396 99 -444 j
(played and not computed by the editor; the execution is more rapid but the current) 14 396 99 -460 j
(image is lost. When mode is changed to DisplayImmediately or DeferredDisplay, the) 11 396 99 -476 j
(image is completely redrawn by the editor. An application that handles several) 11 396 99 -492 j
(documents at the same time can choose different modes for different documents.) 11 396 99 -509 j
(When a document is open or created, it is initially in the immediate mode.) 13 351 99 -525 j
481 -549 113 -549 0 3 2 Seg
481 -552 113 -552 0 1 2 Seg
lhr 14 sf
(void GtSetDisplayMode\(Document document, DisplayMode) 3 369 113 -574 j
(newDisplayMode\)) 109 113 -593 s
481 -609 113 -609 0 3 2 Seg
481 -606 113 -606 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -637 s
lti 12 sf
(document) 46 134 -657 s
ltr 12 sf
(: the document.) 2 73 180 -657 j
lti 12 sf
(NewDisplayMode) 88 134 -676 s
ltr 12 sf
(: new display mode for that document.) 6 181 223 -676 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
90 413 669 nwpage
%%Page: 99 99
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(91) 12 484 -77 s
ltr 14 sf
(13.3) 23 99 -122 s
(Accessors) 60 132 -122 s
ltr 12 sf
(13.3.1) 29 99 -156 s
(GtGetSensibility) 82 136 -156 s
(Reads the current sensibility used to display a given view of a given document.) 13 378 99 -170 j
481 -194 113 -194 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
lhr 14 sf
(int GtGetSensibility\(Document document, View view\)) 4 320 113 -219 j
481 -234 113 -234 0 3 2 Seg
481 -231 113 -231 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -263 s
lti 12 sf
(document) 46 134 -282 s
ltr 12 sf
(: the document. Cannot be 0.) 5 136 180 -282 j
lti 12 sf
(view) 24 134 -301 s
ltr 12 sf
(: the view.) 2 50 158 -301 j
ltb 12 sf
(Return value:) 1 70 99 -325 j
ltr 12 sf
(current value of the sensibility.) 4 148 134 -345 j
(13.3.2) 29 99 -376 s
(GtGetZoom) 59 136 -376 s
(Reads the current zoom used to display a given view of a given document.) 13 354 99 -391 j
481 -415 113 -415 0 3 2 Seg
481 -418 113 -418 0 1 2 Seg
lhr 14 sf
(int GtGetZoom\(Document document, View view\)) 4 293 113 -440 j
481 -455 113 -455 0 3 2 Seg
481 -452 113 -452 0 1 2 Seg
lcr 12 sf
(int GtGetZoom\(document, view\)) 2 195 141 -478 j
(Document document;) 1 121 141 -492 j
(View view;) 1 67 141 -505 j
ltb 12 sf
(Parameters:) 66 99 -529 s
lti 12 sf
(document) 46 134 -548 s
ltr 12 sf
(: the document. Cannot be 0.) 5 136 180 -548 j
lti 12 sf
(view) 24 134 -567 s
ltr 12 sf
(: the view.) 2 50 158 -567 j
ltb 12 sf
(Return value:) 1 70 99 -591 j
ltr 12 sf
(current value of the zoom.) 4 124 134 -611 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
91 413 669 nwpage
%%Page: 100 100
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(92) 12 99 -77 s
(13.3.3) 29 99 -121 s
(GtGetDisplayMode) 96 136 -121 s
(Returns the current display mode for a document.) 7 235 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(DisplayMode GtGetDisplayMode\(Document document\)) 2 338 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -228 s
lti 12 sf
(document) 46 134 -248 s
ltr 12 sf
(: the document.) 2 73 180 -248 j
ltb 12 sf
(Return value:) 1 70 99 -272 j
ltr 12 sf
(current display mode for that document.) 5 189 134 -291 j
(13.3.4) 29 99 -323 s
(GtIsPSchemaValid) 92 136 -323 s
(Checks if a presentation schema can be applied to a document of a given class. No) 15 396 99 -337 j
(document is needed and the schemas are not loaded by this function.) 11 328 99 -353 j
481 -377 113 -377 0 3 2 Seg
481 -380 113 -380 0 1 2 Seg
lhr 14 sf
(int GtIsPSchemaValid\(char *structureName, char) 3 369 113 -402 j
(*presentationName\)) 124 113 -421 s
481 -437 113 -437 0 3 2 Seg
481 -434 113 -434 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -466 s
lti 12 sf
(structureName) 71 134 -485 s
ltr 12 sf
(: Name of the document class.) 5 144 205 -485 j
lti 12 sf
(presentationName) 89 134 -504 s
ltr 12 sf
(: Name of the presentation schema to be checked.) 8 238 224 -504 j
ltb 12 sf
(Return value:) 1 70 99 -528 j
ltr 12 sf
(1 if the presentation schema can be applied, 0 if it can not.) 12 276 134 -547 j
(13.3.5) 29 99 -579 s
(GtGiveViewsToOpen) 106 136 -579 s
(Returns the names of the views that can be opened for a document.) 12 322 99 -593 j
481 -617 113 -617 0 3 2 Seg
481 -620 113 -620 0 1 2 Seg
lhr 14 sf
(void GtGiveViewsToOpen\(Document document, char) 3 369 113 -642 j
(*buffer, int nbViews\)) 2 123 113 -661 j
481 -677 113 -677 0 3 2 Seg
481 -674 113 -674 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
92 413 669 nwpage
%%Page: 101 101
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(93) 12 484 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(document) 46 134 -145 s
ltr 12 sf
(: the document.) 2 73 180 -145 j
lti 12 sf
(buffer) 29 134 -164 s
ltr 12 sf
(: a buffer that will contain the result.) 7 173 163 -164 j
ltb 12 sf
(Return parameters:) 1 103 99 -188 j
lti 12 sf
(buffer) 29 134 -207 s
ltr 12 sf
(: list of view names. Each name is a character string with a final '\\0'.) 14 332 163 -207 j
(Names of views that are already open have a '*' at the end.) 12 287 154 -224 j
lti 12 sf
(nbViews) 41 134 -243 s
ltr 12 sf
(: number of names in the list, 0 if not any view can be open.) 14 282 176 -243 j
(13.3.6) 29 99 -275 s
(GtGetViewName) 85 136 -275 s
(Returns the name of an open view.) 6 166 99 -289 j
481 -313 113 -313 0 3 2 Seg
481 -316 113 -316 0 1 2 Seg
lhr 14 sf
(char *GtGetViewName\(Document document, View view\)) 4 344 113 -338 j
481 -353 113 -353 0 3 2 Seg
481 -350 113 -350 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -382 s
lti 12 sf
(document) 46 134 -401 s
ltr 12 sf
(: the document to which the view belongs.) 7 201 180 -401 j
lti 12 sf
(view) 24 134 -420 s
ltr 12 sf
(: the view.) 2 50 158 -420 j
ltb 12 sf
(Return value:) 1 70 99 -444 j
ltr 12 sf
(Name of the view. The buffer must be provided by the caller.) 11 288 134 -464 j
(13.3.7) 29 99 -495 s
(GtGetViewFromName) 111 136 -495 s
(Returns the identifier of a view of a given document from its name.) 12 317 99 -510 j
481 -534 113 -534 0 3 2 Seg
481 -537 113 -537 0 1 2 Seg
lhr 14 sf
(View GtGetViewFromName\(Document document, char) 3 369 113 -559 j
(*viewName\)) 74 113 -578 s
481 -593 113 -593 0 3 2 Seg
481 -590 113 -590 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -622 s
lti 12 sf
(document) 46 134 -641 s
ltr 12 sf
(: the document to which the view belongs.) 7 201 180 -641 j
lti 12 sf
(viewName) 53 134 -660 s
ltr 12 sf
(: the name of the view.) 5 108 187 -660 j
ltb 12 sf
(Return value:) 1 70 99 -684 j
ltr 12 sf
(the view. 0 if no view of that name is currently open for the document.) 14 332 134 -704 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
93 413 669 nwpage
%%Page: 102 102
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(94) 12 99 -77 s
(13.3.8) 29 99 -121 s
(GtGiveActiveView) 93 136 -121 s
(Returns the active view and the document to which that view belongs. The active) 13 396 99 -135 j
(view is the one that receives the characters typed by the user.) 11 299 99 -152 j
481 -176 113 -176 0 3 2 Seg
481 -179 113 -179 0 1 2 Seg
lhr 14 sf
(void GtGiveActiveView\(Document *document, View *view\)) 4 360 113 -201 j
481 -216 113 -216 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -245 s
ltr 12 sf
(No parameter.) 1 69 134 -264 j
ltb 12 sf
(Return values:) 1 76 99 -288 j
lti 12 sf
(document) 46 134 -307 s
ltr 12 sf
(: the active document.) 3 105 180 -307 j
lti 12 sf
(view) 24 134 -326 s
ltr 12 sf
(: the active view.) 3 82 158 -326 j
(13.3.9) 29 99 -358 s
(GtIsViewOpened) 85 136 -358 s
(Indicates whether a view is opened.) 5 173 99 -372 j
481 -396 113 -396 0 3 2 Seg
481 -399 113 -399 0 1 2 Seg
lhr 14 sf
(boolean GtIsViewOpened\(Document document, View view\)) 4 362 113 -421 j
481 -437 113 -437 0 3 2 Seg
481 -434 113 -434 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -466 s
lti 12 sf
(document) 46 134 -485 s
ltr 12 sf
(: the document.) 2 73 180 -485 j
lti 12 sf
(view) 24 134 -504 s
ltr 12 sf
(: the view.) 2 50 158 -504 j
ltb 12 sf
(Return values:) 1 76 99 -528 j
ltr 12 sf
( True if the view is already opened.) 7 168 134 -547 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
94 413 669 nwpage
%%Page: 103 103
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(95) 12 484 -116 s
ltr 14 sf
(13.4) 23 99 -161 s
(Help) 26 132 -161 s
ltr 12 sf
(13.4.1) 29 99 -195 s
(GtListView) 58 136 -195 s
(Produces in a file a human-readable form of the current picture of the document) 13 396 99 -209 j
(view.) 26 99 -226 s
481 -250 113 -250 0 3 2 Seg
481 -252 113 -252 0 1 2 Seg
lhr 14 sf
(void GtListView\(Document document, View view, FILE) 5 331 113 -275 j
(*fileDescriptor\)) 92 113 -294 s
481 -309 113 -309 0 3 2 Seg
481 -306 113 -306 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -338 s
lti 12 sf
(document) 46 134 -357 s
ltr 12 sf
(: the document to be listed.) 5 130 180 -357 j
lti 12 sf
(view) 24 134 -376 s
ltr 12 sf
(: the view to be listed.) 5 107 158 -376 j
lti 12 sf
(fileDescriptor) 67 134 -396 s
ltr 12 sf
(: file descriptor of the file that will contain the list. This file must) 13 294 202 -396 j
(be open when calling the function.) 5 161 154 -412 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
95 413 669 nwpage
%%Page: 104 104
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(96) 12 99 -77 s
ltr 16 sf
(14) 15 99 -125 s
(Selection) 56 125 -125 s
ltr 12 sf
(The functions described in this section require that file ) 9 262 113 -144 j
lti 12 sf
(selection.h) 52 375 -144 s
ltr 12 sf
( be included in) 3 68 427 -144 j
(the module that calls them. They are available only in the Thot Editor library.) 13 368 99 -160 j
(These functions allow an application program to change the selection set by the) 12 382 113 -180 j
(user of the Thot Editor. The selection is the part of a document that will be concerned) 16 396 99 -196 j
(by the next editing command issued by the end user. Tool kit functions that modify a) 15 396 99 -212 j
(document are independent from the selection in the sense that they can change any) 13 396 99 -228 j
(part of a document independently of the current selection; but, when necessary, they) 12 396 99 -245 j
(can also have access to the current user selection, by using the following func\255) 13 396 99 -261 j
(tions.) 27 99 -277 s
ltr 14 sf
(14.1) 23 99 -317 s
(Constructors) 72 132 -317 s
ltr 12 sf
(14.1.1) 29 99 -350 s
(GtSelectElement) 83 136 -350 s
(Selects a single element. This element is highlighted in all views where it can be) 14 396 99 -365 j
(displayed. If it cannot be displayed in any existing view, a new view is eventually) 14 396 99 -381 j
(open for displaying it.) 3 103 99 -397 j
481 -421 113 -421 0 3 2 Seg
481 -424 113 -424 0 1 2 Seg
lhr 14 sf
(void GtSelectElement\(Document document, Element) 3 369 113 -446 j
(selectedElement\)) 107 113 -466 s
481 -481 113 -481 0 3 2 Seg
481 -478 113 -478 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -510 s
lti 12 sf
(document) 46 134 -529 s
ltr 12 sf
(: the document containing the element to be selected.) 8 254 180 -529 j
lti 12 sf
(selectedElement) 80 134 -548 s
ltr 12 sf
(: the element to be selected. NULL for cancelling the se\255) 10 281 214 -548 j
(lection in the document.) 3 113 154 -564 j
(14.1.2) 29 99 -596 s
(GtSelectString) 71 136 -596 s
(Selects a substring within a Text basic element. This substring is highlighted in all) 13 396 99 -611 j
(views where it can be displayed.) 5 156 99 -627 j
481 -651 113 -651 0 3 2 Seg
481 -654 113 -654 0 1 2 Seg
lhr 14 sf
(void GtSelectString\(Document document, Element) 3 369 113 -676 j
(textElement, int firstCharacter, int lastCharacter\)) 4 293 113 -695 j
481 -710 113 -710 0 3 2 Seg
481 -708 113 -708 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
96 413 669 nwpage
%%Page: 105 105
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(97) 12 484 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(document) 46 134 -145 s
ltr 12 sf
(: the document containing the string to be selected.) 8 244 180 -145 j
lti 12 sf
(textElement) 60 134 -164 s
ltr 12 sf
(: the Text element containing the string to be selected.) 9 261 194 -164 j
lti 12 sf
(firstCharacter) 66 134 -183 s
ltr 12 sf
(: position within the texte element of the first character to be) 11 295 201 -183 j
(selected.) 43 154 -200 s
lti 12 sf
(lastCharacter) 63 134 -219 s
ltr 12 sf
(: position within the texte element of the last character to be) 11 298 198 -219 j
(selected.) 43 154 -235 s
(14.1.3) 29 99 -267 s
(GtExtendSelection) 91 136 -267 s
(Extends the current selection to a given element.) 7 235 99 -281 j
481 -305 113 -305 0 3 2 Seg
481 -308 113 -308 0 1 2 Seg
lhr 14 sf
(void GtExtendSelection\(Document document, Element) 3 369 113 -330 j
(element, int lastCharacter\)) 2 161 113 -349 j
481 -365 113 -365 0 3 2 Seg
481 -362 113 -362 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -394 s
lti 12 sf
(document) 46 134 -413 s
ltr 12 sf
(: the document for which the selection must be extended.) 9 272 180 -413 j
lti 12 sf
(element) 38 134 -432 s
ltr 12 sf
(: the element to which the selection must be extended.) 9 261 173 -432 j
lti 12 sf
(lastCharacter) 63 134 -451 s
ltr 12 sf
(: position within this element of the last character to be se\255) 11 298 198 -451 j
(lected. 0 if the whole element must be selected.) 8 228 154 -468 j
(14.1.4) 29 99 -499 s
(GtSelectInterval) 80 136 -499 s
(If a pair of paired elements is selected, select also all elements between the two) 14 396 99 -514 j
(paired elements. Nothing is done if the current selection is not a pair.) 12 330 99 -530 j
481 -554 113 -554 0 3 2 Seg
481 -557 113 -557 0 1 2 Seg
lhr 14 sf
(void GtSelectInterval\(\)) 1 139 113 -579 j
481 -594 113 -594 0 3 2 Seg
481 -591 113 -591 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -623 s
ltr 12 sf
(No parameter) 1 66 134 -642 j
ltb 12 sf
(Return value:) 1 70 99 -666 j
ltr 12 sf
(No return value) 2 75 134 -685 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
97 413 669 nwpage
%%Page: 106 106
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(98) 12 99 -77 s
(14.1.5) 29 99 -121 s
(GtUnselect) 55 136 -121 s
(Turns the selection off for a document.) 6 182 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(void GtUnselect\(Document document\)) 2 235 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -228 s
lti 12 sf
(document) 46 134 -248 s
ltr 12 sf
(: the document for which the selection must be turned off) 10 270 180 -248 j
ltb 12 sf
(Return value:) 1 70 99 -272 j
ltr 12 sf
(No return value) 2 75 134 -291 j
(14.1.6) 29 99 -323 s
(GtSetSelectionMode) 101 136 -323 s
(Change selection mode. If withMenu = False functions GtSelectElement, GtSe\255) 9 396 99 -337 j
(lectString, GtExtendSelection and GtUnselect do not update the menus that depend) 10 396 99 -353 j
(on the selection and do not display the selection message. Default mode is with\255) 13 396 99 -370 j
(Menu = True.) 2 65 99 -386 j
481 -410 113 -410 0 3 2 Seg
481 -413 113 -413 0 1 2 Seg
lhr 14 sf
(void GtSetSelectionMode\(boolean withMenu\)) 2 277 113 -435 j
481 -450 113 -450 0 3 2 Seg
481 -447 113 -447 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -479 s
lti 12 sf
(withMenu) 50 134 -498 s
ltr 12 sf
(: the new selection mode.) 4 122 184 -498 j
ltb 12 sf
(Return value:) 1 70 99 -522 j
ltr 12 sf
(No return value) 2 75 134 -541 j
ltr 14 sf
(14.2) 23 99 -581 s
(Accessors) 60 132 -581 s
ltr 12 sf
(14.2.1) 29 99 -614 s
(GtGiveFirstSelectedElement) 141 136 -614 s
(Returns the first element in the current selection in a given document. If this element) 14 396 99 -629 j
(is a Text element and if only a substring is selected, return also the rank of the first) 17 396 99 -645 j
(and last characters in the selection.) 5 170 99 -661 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
98 413 669 nwpage
%%Page: 107 107
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(99) 12 484 -77 s
481 -126 113 -126 0 3 2 Seg
481 -129 113 -129 0 1 2 Seg
lhr 14 sf
(void GtGiveFirstSelectedElement\(Document document,) 2 369 113 -151 j
(Element *selectedElement, int *firstCharacter, int) 4 369 113 -170 j
(*lastCharacter\)) 95 113 -189 s
481 -204 113 -204 0 3 2 Seg
481 -202 113 -202 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -233 s
lti 12 sf
(document) 46 134 -252 s
ltr 12 sf
(: the document for which the selection is asked.) 8 227 180 -252 j
ltb 12 sf
(Return values:) 1 76 99 -276 j
lti 12 sf
(selectedElement) 80 134 -296 s
ltr 12 sf
(: the first selected element, NULL if no element is selected) 10 281 214 -296 j
(in the document.) 2 79 154 -312 j
lti 12 sf
(firstCharacter) 66 134 -331 s
ltr 12 sf
(: rank of the first character in the selection, or 0 if the whole) 13 295 201 -331 j
(element is in the selection.) 4 129 154 -348 j
lti 12 sf
(lastCharacter) 63 134 -367 s
ltr 12 sf
(: rank of the last character in the selection, or 0 if the) 12 252 198 -367 j
(whole element is in the selection.) 5 160 134 -386 j
(14.2.2) 29 99 -418 s
(GtGiveNextSelectedElement) 141 136 -418 s
(Returns the element that follows a given element in the current selection in a given) 14 396 99 -432 j
(document. If this element is a Text element and if only a substring is selected, return) 15 396 99 -448 j
(also the rank of the first and last characters in the selection.) 11 287 99 -465 j
481 -489 113 -489 0 3 2 Seg
481 -492 113 -492 0 1 2 Seg
lhr 14 sf
(void GtGiveNextSelectedElement\(Document document,) 2 369 113 -514 j
(Element *selectedElement, int *firstCharacter, int) 4 369 113 -533 j
(*lastCharacter\)) 95 113 -552 s
481 -567 113 -567 0 3 2 Seg
481 -564 113 -564 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -596 s
lti 12 sf
(document) 46 134 -615 s
ltr 12 sf
(: the document for which the selection is asked.) 8 227 180 -615 j
lti 12 sf
(selectedElement) 80 134 -635 s
ltr 12 sf
(: the current element.) 3 102 214 -635 j
ltb 12 sf
(Return parameters:) 1 103 99 -659 j
lti 12 sf
(selectedElement) 80 134 -678 s
ltr 12 sf
(: the next selected element, NULL if this was the last se\255) 11 281 214 -678 j
(lected element in the document.) 4 152 154 -694 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
99 413 669 nwpage
%%Page: 108 108
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(100) 17 99 -116 s
lti 12 sf
(firstCharacter) 66 134 -160 s
ltr 12 sf
(: rank of the first character in the selection, or 0 if the whole) 13 295 201 -160 j
(element is in the selection.) 4 129 154 -177 j
lti 12 sf
(lastCharacter) 63 134 -196 s
ltr 12 sf
(: rank of the last character in the selection, or 0 if the) 12 252 198 -196 j
(whole element is in the selection.) 5 160 134 -215 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
100 413 669 nwpage
%%Page: 109 109
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(101) 17 478 -77 s
ltr 16 sf
(15) 15 99 -125 s
(Interface) 53 125 -125 s
ltr 12 sf
(The functions described in this section require that file ) 9 262 113 -144 j
lti 12 sf
(interface.h) 52 375 -144 s
ltr 12 sf
( be included in) 3 68 427 -144 j
(the module that calls them. They are available only in the Thot Editor library.) 13 368 99 -160 j
ltr 14 sf
(15.1) 23 99 -200 s
(Constructors) 72 132 -200 s
ltr 12 sf
(15.1.1) 29 99 -233 s
(GtSetCallback) 70 136 -233 s
(Specifies the procedure that is called when the user activates forms and/or menus) 12 396 99 -248 j
(created by the application. This function must be called before processing any event,) 12 396 99 -264 j
(only if the application uses the Dialogue tool kit for generating specific forms or) 13 396 99 -280 j
(menus. This function replaces the DefineCallback function in the Dialogue tool kit.) 11 396 99 -297 j
(This procedure is called with three parameters: the menu or form reference, data) 12 396 99 -313 j
(type, and data value:) 3 100 99 -329 j
(  void callbakProcedure\(reference, datatype, data\)) 5 239 99 -346 j
(  int reference;) 3 68 99 -362 j
(  int datatype;) 3 66 99 -378 j
(  char *data; ) 4 61 99 -397 j
481 -421 113 -421 0 3 2 Seg
481 -424 113 -424 0 1 2 Seg
lhr 14 sf
(void GtSetCallback\(void \(*callbackProcedure\) \(\)\)) 3 301 113 -446 j
481 -462 113 -462 0 3 2 Seg
481 -459 113 -459 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -491 s
lti 12 sf
(callbakProcedure) 83 134 -510 s
ltr 12 sf
(: the application callback procedure.) 4 170 217 -510 j
(15.1.2) 29 99 -541 s
(GtMainLoop) 61 136 -541 s
(Starts the main loop for processing all events in an application. This function must be) 14 396 99 -556 j
(called after all initializations have been made) 6 216 99 -572 j
481 -596 113 -596 0 3 2 Seg
481 -599 113 -599 0 1 2 Seg
lhr 14 sf
(void GtMainLoop\(\)) 1 115 113 -621 j
481 -636 113 -636 0 3 2 Seg
481 -634 113 -634 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
101 413 669 nwpage
%%Page: 110 110
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(102) 17 99 -77 s
(15.1.3) 29 99 -121 s
(GtHandlePendingEvents) 120 136 -121 s
(This function manages all Thot and Motif pending events. The application have to) 12 382 113 -135 j
(call this function to allow user's interactions and display updates to be managed) 12 396 99 -152 j
(during long treatments.) 2 111 99 -168 j
481 -192 113 -192 0 3 2 Seg
481 -195 113 -195 0 1 2 Seg
lhr 14 sf
(void GtHandlePendingEvents\(\)) 1 190 113 -217 j
481 -232 113 -232 0 3 2 Seg
481 -229 113 -229 0 1 2 Seg
ltr 12 sf
(15.1.4) 29 99 -269 s
(GtHandleOneEvent) 96 136 -269 s
(This function processes one event within Thot and Motif. The application which) 11 382 113 -283 j
(controls a local loop of events have to call this function to allow managment of specific) 15 396 99 -300 j
(Thot and Motif events.) 3 109 99 -316 j
481 -340 113 -340 0 3 2 Seg
481 -343 113 -343 0 1 2 Seg
lhr 14 sf
(void GtHandlePendingEvents\(XEvent *event\)) 2 280 113 -365 j
481 -380 113 -380 0 3 2 Seg
481 -377 113 -377 0 1 2 Seg
ltb 12 sf
(Parameter:) 60 99 -409 s
lti 12 sf
(event) 27 134 -428 s
ltr 12 sf
(: the X event to be managed.) 6 137 161 -428 j
(15.1.5) 29 99 -460 s
(GtOpenMainWindow) 104 136 -460 s
(Opens the application main window.) 4 174 99 -474 j
481 -498 113 -498 0 3 2 Seg
481 -501 113 -501 0 1 2 Seg
lhr 14 sf
(Widget GtOpenMainWindow\(char *name, char *geometry,) 4 369 113 -523 j
(Pixmap logo, Pixmap icon, int number, char *textmenu\)) 7 331 113 -542 j
481 -558 113 -558 0 3 2 Seg
481 -555 113 -555 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -587 s
lti 12 sf
(name) 26 134 -606 s
ltr 12 sf
(: the name to be displayed as the title of the main window.) 12 279 160 -606 j
lti 12 sf
(geometry) 44 134 -625 s
ltr 12 sf
(: specifies the initial placement of the created window.) 8 259 179 -625 j
lti 12 sf
(logo) 19 134 -644 s
ltr 12 sf
(: the logo pixmap to be displayed in the window or NULL. An XPM im\255) 14 342 154 -644 j
(age.) 20 154 -660 s
lti 12 sf
(icon) 20 134 -680 s
ltr 12 sf
(: the icon pixmap to be displayed in the window or NULL A BITMAP) 13 341 155 -680 j
(image.) 32 154 -696 s
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
102 413 669 nwpage
%%Page: 111 111
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(103) 17 478 -77 s
lti 12 sf
(number) 36 134 -121 s
ltr 12 sf
(: number of entries to be created in the MenuBar of the window.) 12 305 170 -121 j
lti 12 sf
(textmenu) 45 134 -140 s
ltr 12 sf
(: a list of strings giving successive names of MenuBar's entries.) 10 308 180 -140 j
ltb 12 sf
(Return value:) 1 70 99 -164 j
ltr 12 sf
(The widget of the created window is returned.) 7 220 134 -183 j
(15.1.6) 29 99 -215 s
(GtCreatePixmapLogo) 105 136 -215 s
(Creates a logo pixmap from an XPM pixmap description: width, height, number of) 12 396 99 -229 j
(colors, colors and pixels. This logo can be displayed within the application window) 12 396 99 -246 j
(\(see function GtOpenMainWindow\).) 2 177 99 -262 j
481 -286 113 -286 0 3 2 Seg
481 -289 113 -289 0 1 2 Seg
lhr 14 sf
(Pixmap GtCreatePixmapLogo\(char 8data\)) 2 254 113 -311 j
481 -326 113 -326 0 3 2 Seg
481 -324 113 -324 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -355 s
lti 12 sf
(data) 21 134 -374 s
ltr 12 sf
(: data of the XPM file.) 5 105 156 -374 j
ltb 12 sf
(Return value:) 1 70 99 -398 j
ltr 12 sf
(The created pixmap for the logo.) 5 154 134 -418 j
(15.1.7) 29 99 -449 s
(GtCreateBitmapLogo) 104 136 -449 s
(Creates a logo pixmap from a bitmap description: width, height and bit array. This) 13 396 99 -464 j
(logo can be used as the icon of the application window \(see function GtOpenMain\255) 13 396 99 -480 j
(Window\).) 48 99 -496 s
481 -520 113 -520 0 3 2 Seg
481 -523 113 -523 0 1 2 Seg
lhr 14 sf
(Pixmap GtCreateBitmapLogo\(int width, int height, char *bits\)) 6 364 113 -545 j
481 -561 113 -561 0 3 2 Seg
481 -558 113 -558 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -589 s
lti 12 sf
(width) 28 134 -609 s
ltr 12 sf
(: the width value of the bitmap.) 6 148 162 -609 j
lti 12 sf
(height) 30 134 -628 s
ltr 12 sf
(: the height value of the bitmap.) 6 151 164 -628 j
lti 12 sf
(bits) 18 134 -647 s
ltr 12 sf
(: the bit array.) 3 67 153 -647 j
ltb 12 sf
(Return value:) 1 70 99 -671 j
ltr 12 sf
(The created pixmap for the logo.) 5 154 134 -690 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
103 413 669 nwpage
%%Page: 112 112
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(104) 17 99 -77 s
(15.1.8) 29 99 -121 s
(GtAddAction) 64 136 -121 s
(Adds a new entry in an Action \(or Tool\) menu of a document view. As long as there is) 18 396 99 -135 j
(no entry in an Action menu, there is no Action button in the corresponding menu bar.) 15 396 99 -152 j
(This function must specify a valid view of a valid document.) 10 283 99 -168 j
481 -192 113 -192 0 3 2 Seg
481 -195 113 -195 0 1 2 Seg
lhr 14 sf
(void GtAddAction\(Document document, View view, char) 5 369 113 -217 j
(*text, void \(*procedure\) \(\)\)) 3 163 113 -236 j
481 -252 113 -252 0 3 2 Seg
481 -249 113 -249 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -280 s
lti 12 sf
(document) 46 134 -300 s
ltr 12 sf
(: the concerned document.) 3 124 180 -300 j
lti 12 sf
(view) 24 134 -319 s
ltr 12 sf
(: the concerned view.) 3 101 158 -319 j
lti 12 sf
(text) 19 134 -338 s
ltr 12 sf
(: label of the new entry. It can be the result of GtGetMessage function.) 13 339 154 -338 j
lti 12 sf
(procedure) 47 134 -357 s
ltr 12 sf
(: procedure to be executed when the new entry is selected by the) 12 314 181 -357 j
(user. This procedure will receive two parametrers: the document and the) 10 342 154 -373 j
(view concerned.) 1 77 154 -390 j
(An example of callback procedure is.) 5 175 134 -409 j
lcr 12 sf
(void callback_procedure \(document, view\)) 3 269 177 -427 j
(Document document;) 1 121 177 -441 j
(View view;) 1 67 177 -454 j
({) 7 177 -468 s
(....) 27 177 -481 s
(}) 7 177 -494 s
ltr 12 sf
(15.1.9) 29 99 -526 s
(GtRemoveAction) 84 136 -526 s
(Removes an entry in an Action \(or Tool\) menu of a document view. As long as there) 16 396 99 -540 j
(is no entry in an Action menu, there is no Action button in the corresponding menu) 15 396 99 -557 j
(bar. This function must specify a valid view of a valid document. The removed entry) 14 396 99 -573 j
(must have been added to that menu by a previous call of the AddAction function.) 14 385 99 -589 j
481 -613 113 -613 0 3 2 Seg
481 -616 113 -616 0 1 2 Seg
lhr 14 sf
(void GtRemoveAction\(Document document, View view, void) 5 369 113 -638 j
(\(*procedure\) \(\)\)) 1 98 113 -658 j
481 -673 113 -673 0 3 2 Seg
481 -670 113 -670 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
104 413 669 nwpage
%%Page: 113 113
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(105) 17 478 -77 s
ltb 12 sf
(Parameters:) 66 99 -126 s
lti 12 sf
(document) 46 134 -145 s
ltr 12 sf
(: identifier of the document.) 4 130 180 -145 j
lti 12 sf
(view) 24 134 -164 s
ltr 12 sf
(: identifier of the view.) 4 107 158 -164 j
lti 12 sf
(procedure) 47 134 -183 s
ltr 12 sf
(: procedure associated to the entry to be removed.) 8 240 181 -183 j
(15.1.10) 35 99 -215 s
(GtMapKeyboard) 81 142 -215 s
(Displays a keyboard.) 2 102 99 -229 j
481 -253 113 -253 0 3 2 Seg
481 -256 113 -256 0 1 2 Seg
lhr 14 sf
(void GtMapKeyboard\(int keyboard\)) 2 216 113 -278 j
481 -294 113 -294 0 3 2 Seg
481 -291 113 -291 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -323 s
lti 12 sf
(keyboard) 44 134 -342 s
ltr 12 sf
(: the keyboard to be displayed.) 5 147 179 -342 j
ltr 14 sf
(15.2) 23 99 -381 s
(Accessors) 60 132 -381 s
ltr 12 sf
(15.2.1) 29 99 -415 s
(GtGetButton) 63 136 -415 s
(Returns the widget of the corresponding button attached to a view of a document. A) 14 396 99 -429 j
(button is an entry in the menu bar displayed in any document window or in the main) 16 396 99 -445 j
(window. Buttons are numbered from 1 to n. If the document and view parameters are) 14 396 99 -462 j
(NULL, this function returns the widget of the corresponding button in the main) 12 396 99 -478 j
(window of the application.) 3 125 99 -494 j
481 -518 113 -518 0 3 2 Seg
481 -521 113 -521 0 1 2 Seg
lhr 14 sf
(Widget GtGetButton \(Document document, View view, int) 6 369 113 -543 j
(buttonIndex\)) 78 113 -563 s
481 -578 113 -578 0 3 2 Seg
481 -575 113 -575 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -607 s
lti 12 sf
(document) 46 134 -626 s
ltr 12 sf
(: the document concerned or 0.) 5 145 180 -626 j
lti 12 sf
(view) 24 134 -645 s
ltr 12 sf
(: the view concerned or 0.) 5 122 158 -645 j
lti 12 sf
(buttonIndex) 59 134 -664 s
ltr 12 sf
(: the button index, numbered from 1 to n.) 8 193 193 -664 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
105 413 669 nwpage
%%Page: 114 114
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(106) 17 99 -77 s
(15.2.2) 29 99 -121 s
(GtGetMenuColor) 84 136 -121 s
(Returns the color used for the background of dialogue windows.) 9 303 99 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(Pixel GtGetMenuColor\(\)) 1 147 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltr 12 sf
(15.2.3) 29 99 -236 s
(GtGetButtonColor) 89 136 -236 s
(Returns the color used for displaying active buttons in forms.) 9 291 99 -251 j
481 -275 113 -275 0 3 2 Seg
481 -277 113 -277 0 1 2 Seg
lhr 14 sf
(Pixel GtGetButtonColor\(\)) 1 151 113 -300 j
481 -315 113 -315 0 3 2 Seg
481 -312 113 -312 0 1 2 Seg
ltr 12 sf
(15.2.4) 29 99 -351 s
(GtGetCurrentDisplay) 105 136 -351 s
(Returns the current display descriptor.) 4 184 99 -372 j
481 -396 113 -396 0 3 2 Seg
481 -398 113 -398 0 1 2 Seg
lhr 14 sf
(Display *GtGetCurrentDisplay\(\)) 1 193 113 -420 j
481 -436 113 -436 0 3 2 Seg
481 -433 113 -433 0 1 2 Seg
ltr 12 sf
(15.2.5) 29 99 -472 s
(GtGetScreenDepth) 93 136 -472 s
(Returns the screen depth of the display.) 6 191 99 -492 j
481 -516 113 -516 0 3 2 Seg
481 -519 113 -519 0 1 2 Seg
lhr 14 sf
(int GtGetScreenDepth\(\)) 1 145 113 -541 j
481 -557 113 -557 0 3 2 Seg
481 -554 113 -554 0 1 2 Seg
ltr 12 sf
(15.2.6) 29 99 -593 s
(GtClickAnElement) 91 136 -593 s
(Waits for a click from end-user and returns the element and document selected. If) 13 396 99 -608 j
(the user clicks out of any document view, the returned values are null.) 12 334 99 -624 j
481 -648 113 -648 0 3 2 Seg
481 -651 113 -651 0 1 2 Seg
lhr 14 sf
(void GtClickAnElement\(Document document, Element) 3 369 113 -673 j
(element\)) 53 113 -692 s
481 -708 113 -708 0 3 2 Seg
481 -705 113 -705 0 1 2 Seg
ltr 12 sf
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
106 413 669 nwpage
%%Page: 115 115
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(107) 17 478 -77 s
ltb 12 sf
(Parameters) 62 99 -126 s
lti 12 sf
(document) 46 134 -145 s
ltr 12 sf
(: the document selected by the user or 0.) 8 194 180 -145 j
lti 12 sf
(element) 38 134 -164 s
ltr 12 sf
(: the element selected by the user or 0.) 8 186 173 -164 j
ltr 14 sf
(15.3) 23 99 -204 s
(Modificators) 70 132 -204 s
ltr 12 sf
(15.3.1) 29 99 -237 s
(GtResetButton) 74 136 -237 s
(Resets active the button buttonIndex in the menu bar of the view of the document. If) 15 396 99 -252 j
(the document and view parameters are null, the button is located within the main) 13 396 99 -268 j
(window of the application. The initial state of buttons is active.) 10 300 99 -284 j
481 -308 113 -308 0 3 2 Seg
481 -311 113 -311 0 1 2 Seg
lhr 14 sf
(void GtResetButton\(Document document, View view, int) 5 369 113 -333 j
(buttonIndex\)) 78 113 -352 s
481 -368 113 -368 0 3 2 Seg
481 -365 113 -365 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -396 s
lti 12 sf
(document) 46 134 -416 s
ltr 12 sf
(: the document or 0.) 4 94 180 -416 j
lti 12 sf
(view) 24 134 -435 s
ltr 12 sf
(: the view or 0.) 4 71 158 -435 j
lti 12 sf
(buttonIndex) 59 134 -454 s
ltr 12 sf
(: the button index, numbered from 1 to n.) 8 193 193 -454 j
(15.3.2) 29 99 -486 s
(GtSuspendButton) 86 136 -486 s
(Sets inactive the button buttonIndex in the menu bar of the view of the document. The) 15 396 99 -500 j
(button is always presented within the bar menu, but no callback is attached to it. If) 15 396 99 -516 j
(the document and view parameters are null, the button is located within the main) 13 396 99 -533 j
(window of the application. The initial state of buttons is active.) 10 300 99 -549 j
481 -573 113 -573 0 3 2 Seg
481 -576 113 -576 0 1 2 Seg
lhr 14 sf
(void GtSuspendButton\(Document document, View view, int) 5 369 113 -598 j
(buttonIndex\)) 78 113 -617 s
481 -633 113 -633 0 3 2 Seg
481 -630 113 -630 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -661 s
lti 12 sf
(document) 46 134 -681 s
ltr 12 sf
(: the document concerned or 0.) 5 145 180 -681 j
lti 12 sf
(view) 24 134 -700 s
ltr 12 sf
(: the view concerned or 0.) 5 122 158 -700 j
lti 12 sf
(buttonIndex) 59 134 -719 s
ltr 12 sf
(: the button index, numbered from 1 to n.) 8 193 193 -719 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
107 413 669 nwpage
%%Page: 116 116
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(108) 17 99 -116 s
(15.3.3) 29 99 -160 s
(GtSetCursorWatch) 93 136 -160 s
(Displays the cursor watch within the view of the document. If the document and view) 14 396 99 -175 j
(parameters are NULL, displays the cursor watch within all views of documents.) 11 382 99 -191 j
481 -215 113 -215 0 3 2 Seg
481 -218 113 -218 0 1 2 Seg
lhr 14 sf
(void GtSetCursorWatch \(Document document, View view\)) 5 355 113 -240 j
481 -255 113 -255 0 3 2 Seg
481 -252 113 -252 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -284 s
lti 12 sf
(document) 46 134 -303 s
ltr 12 sf
(: the document concerned or 0.) 5 145 180 -303 j
lti 12 sf
(view) 24 134 -323 s
ltr 12 sf
(: the view concerned or 0.) 5 122 158 -323 j
(15.3.4) 29 99 -354 s
(GtResetCursor) 74 136 -354 s
(Resets the standard cursor within the view of the document. If the document and) 13 396 99 -369 j
(view parameters are NULL, resets the standard cursor within all views of docu\255) 12 396 99 -385 j
(ments.) 33 99 -401 s
481 -425 113 -425 0 3 2 Seg
481 -428 113 -428 0 1 2 Seg
lhr 14 sf
(void GtResetCursor\(Document document, View view\)) 4 325 113 -450 j
481 -466 113 -466 0 3 2 Seg
481 -463 113 -463 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -494 s
lti 12 sf
(dument) 36 134 -514 s
ltr 12 sf
(: the documen or 0.) 4 90 170 -514 j
lti 12 sf
(view) 24 134 -533 s
ltr 12 sf
(: the view or 0.) 4 71 158 -533 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
108 413 669 nwpage
%%Page: 117 117
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(109) 17 478 -77 s
ltr 16 sf
(16) 15 99 -125 s
(Messages) 59 125 -125 s
ltr 12 sf
(The functions described in this section require that file ) 9 265 113 -144 j
lti 12 sf
(message.h) 49 378 -144 s
ltr 12 sf
( be included in) 3 68 427 -144 j
(the modules that call them.) 4 130 99 -160 j
(The following functions are available in both the Thot Editor library and the) 12 382 113 -180 j
(ThotKernel library. They allow an application program to manage messages and) 10 396 99 -196 j
(dialogue text, as Thot tool kits do. Text of dialogue boxes and error messages is) 14 396 99 -212 j
(defined out of the application code and is dynamically loaded when the application is) 13 396 99 -228 j
(executed. This method allows application to adapt its interface to the current user) 12 396 99 -245 j
(\(English text for English user, French text for French user, etc.\). Each message is) 13 396 99 -261 j
(numbered, code referencing the message by its number and an external file associ\255) 12 396 99 -277 j
(ating this number with its corresponding text. An ) 8 246 99 -297 j
(environment variable) 1 101 345 -297 j
( is used to) 3 50 445 -297 j
(reach the correct file that contains text of messages at the execution time. If this file) 15 396 99 -313 j
(is not reachable, a warning message is sent to the standard output, but the execution) 14 396 99 -329 j
(is not automatically stopped. Nevertheless, the Thot Editor library stops execution) 10 396 99 -346 j
(when its text file is not reachable because it cannot work without.) 11 315 99 -362 j
(We give an example of an application that needs four messages: one for the di\255) 14 382 113 -381 j
(alogue box which starts the application, two error messages and one information) 11 396 99 -397 j
(message. The applicationMSG.h file is used to address correct message in source) 11 396 99 -414 j
(code and the E-applicationTXT gives the English version of messages text:) 10 365 99 -430 j
(#define APP_start 0) 2 97 113 -465 j
(#define APP_abort 1) 2 99 113 -484 j
(#define APP_no_file 2 ) 3 108 113 -503 j
(#define APP_complete 3) 2 117 113 -522 j
(#define APP_MSG_MAX 4) 2 132 113 -541 j
( ) 1 3 113 -561 j
(0 Application) 1 63 320 -465 j
(1 Application aborted) 2 103 320 -484 j
(2 Unreachable file %s) 3 103 320 -503 j
(3 End of application) 3 94 320 -522 j
lcr 12 sf
(applicationMSG.h) 108 113 -579 s
(E-applicationTXT) 108 320 -579 s
ltr 14 sf
(16.1) 23 99 -618 s
(Constructors) 72 132 -618 s
ltr 12 sf
(16.1.1) 29 99 -652 s
(GtGetOriginMessageTable) 132 136 -652 s
(Loads text of application messages in a dynamically allocated table and returns) 11 382 113 -666 j
(the identifcation of this messages table. The msgENV parameter is the name of the) 13 396 99 -683 j
(environment variable that holds the text file name to be loaded. The msgNumber) 12 396 99 -699 j
(parameter denotes the number of messages to be read in the text file.) 12 333 99 -715 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
109 413 669 nwpage
%%Page: 118 118
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(110) 17 99 -77 s
481 -126 113 -126 0 3 2 Seg
481 -129 113 -129 0 1 2 Seg
lhr 14 sf
(int GtGetOriginMessageTable\(char *msgENV, int) 3 369 113 -151 j
(msgNumber\)) 79 113 -170 s
481 -185 113 -185 0 3 2 Seg
481 -182 113 -182 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -214 s
lti 12 sf
(msgENV) 41 134 -233 s
ltr 12 sf
(: the name of the environment variable.) 6 186 176 -233 j
(msgNumber: the number of messages.) 4 184 134 -252 j
ltb 12 sf
(Return value:) 1 70 99 -276 j
ltr 12 sf
(The messages table identifier or -1 if the table is not allocated and loaded.) 13 358 134 -296 j
ltr 14 sf
(16.2) 23 99 -335 s
(Accessors) 60 132 -335 s
ltr 12 sf
(16.2.1) 29 99 -369 s
(GtGetMessage) 76 136 -369 s
(Returns the text of the corresponding message.) 6 228 99 -383 j
481 -407 113 -407 0 3 2 Seg
481 -410 113 -410 0 1 2 Seg
lhr 14 sf
(char *GtGetMessage\(int msgTableID, int msgIndex\)) 4 322 113 -432 j
481 -447 113 -447 0 3 2 Seg
481 -444 113 -444 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -476 s
lti 12 sf
(msgTableID) 59 134 -495 s
ltr 12 sf
(: identifier of the messages table.) 5 159 193 -495 j
lti 12 sf
(msgIndex) 46 134 -515 s
ltr 12 sf
(: index of the message.) 4 110 180 -515 j
ltb 12 sf
(Return value:) 1 70 99 -539 j
ltr 12 sf
(Text of the message \(an empty text if the table or the message is not) 14 361 134 -558 j
(found\).) 34 154 -574 s
(16.2.2) 29 99 -606 s
(GtDisplaySimpleMessage) 128 136 -606 s
(Displays the text of a simple message. This message is displayed in the message) 13 382 113 -620 j
(area of the main application window ) 6 180 99 -636 j
ggr 12 sf
(\276) 12 279 -636 s
ltr 12 sf
( the window created by the GtOpenMain\255) 6 204 292 -636 j
(Window function) 1 81 99 -654 j
( ) 1 3 180 -654 j
ggr 12 sf
(\276) 12 182 -654 s
ltr 12 sf
( or directed to the standard output if this message area does not) 12 300 195 -654 j
(exist.) 27 99 -671 s
(A DEBUG message is always directed to the standard output in debug mode \(the) 13 382 113 -690 j
(THOTCONFIG) 76 99 -709 s
( environment variable contains optional modes\). In normal mode) 8 321 175 -709 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
110 413 669 nwpage
%%Page: 119 119
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(111) 17 478 -77 s
(these messages are not displayed. A FATAL message stops the application with an) 12 396 99 -121 j
(error code. An OVERHEAD message replaces the previous message in the mes\255) 11 396 99 -137 j
(sage area of the main application window. A CONFIRM message pops a message) 12 396 99 -154 j
(box to display the message within and waits for until the end user confirms the) 14 396 99 -170 j
(message has been read.) 3 116 99 -186 j
481 -210 113 -210 0 3 2 Seg
481 -213 113 -213 0 1 2 Seg
lhr 14 sf
(void GtDisplaySimpleMessage\(int msgTableID, int level, int) 5 369 113 -235 j
(msgIndex\)) 65 113 -254 s
481 -270 113 -270 0 3 2 Seg
481 -267 113 -267 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -299 s
lti 12 sf
(msgTableID) 59 134 -318 s
ltr 12 sf
(: identifier of the messages table \(THOT for the standard Thot) 10 302 193 -318 j
(table\).) 32 154 -334 s
lti 12 sf
(level) 23 134 -353 s
ltr 12 sf
(: level of the error \(DEBUG, INFO, FATAL) 7 221 157 -353 j
(, CONFIRM) 1 61 378 -353 j
( or OVER\255) 2 56 440 -353 j
(HEAD\).) 41 154 -370 s
lti 12 sf
(msgIndex) 46 134 -389 s
ltr 12 sf
(: index of the message.) 4 110 180 -389 j
(16.2.3) 29 99 -420 s
(GtDisplayComplexMessage) 137 136 -420 s
(Displays a complex message mixing static text \(the text of the message\) with 1) 13 382 113 -435 j
(to 3 parameters. The static text plays the role of a format and may include necessary) 15 396 99 -451 j
(format commandes for each parameter: a %s for a string, a %d for an integer, etc. This) 16 396 99 -468 j
(message is displayed in the message area of the main application window ) 12 366 99 -484 j
ggr 12 sf
(\276) 12 465 -484 s
ltr 12 sf
( the) 1 18 477 -484 j
(window created by the GtOpenMainWindow function ) 6 258 99 -501 j
ggr 12 sf
(\276) 12 357 -501 s
ltr 12 sf
( or directed to the standard) 5 126 370 -501 j
(output if this message area does not exist.) 7 204 99 -518 j
(A DEBUG message is directed to the standard output in debug mode \(the) 12 382 113 -538 j
(THOTCONFIG) 76 99 -557 s
( environment variable contains optional modes\). In normal mode) 8 321 175 -557 j
(these messages are not displayed. A FATAL message stops the application with an) 12 396 99 -573 j
(error code. An OVERHEAD message replaces the previous message in the mes\255) 11 396 99 -589 j
(sage area of the main application window. A CONFIRM message pops a message) 12 396 99 -606 j
(box to display the message within and waits for until the end user confirms the) 14 396 99 -622 j
(message has been read.) 3 116 99 -638 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
111 413 669 nwpage
%%Page: 120 120
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 99 -67 j
ltr 8 sf
( ) 1 2 296 -89 j
ltr 12 sf
(112) 17 99 -116 s
481 -165 113 -165 0 3 2 Seg
481 -168 113 -168 0 1 2 Seg
lhr 14 sf
(void GtDisplayComplexMessage\(int msgTableID, int level, int) 5 369 113 -190 j
(msgIndex, int nbParams, char **params\)) 4 251 113 -209 j
481 -225 113 -225 0 3 2 Seg
481 -222 113 -222 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -253 s
lti 12 sf
(msgTableID) 59 134 -273 s
ltr 12 sf
(: identifier of the messages table \(THOT for the standard Thot) 10 302 193 -273 j
(table\).) 32 154 -289 s
lti 12 sf
(level) 23 134 -308 s
ltr 12 sf
(: level of the error \(DEBUG, INFO, FATAL) 7 221 157 -308 j
(, CONFIRM) 1 61 378 -308 j
( or OVER\255) 2 56 440 -308 j
(HEAD\).) 41 154 -324 s
lti 12 sf
(msgIndex) 46 134 -344 s
ltr 12 sf
(: index of the message.) 4 110 180 -344 j
lti 12 sf
(nbParams) 48 134 -363 s
ltr 12 sf
(: number of variable parameters \(1 to 3\).) 7 194 182 -363 j
lti 12 sf
(params) 35 134 -382 s
ltr 12 sf
(: pointer to the list of variable parameters.) 7 202 169 -382 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
112 413 669 nwpage
%%Page: 121 121
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(113) 17 478 -77 s
ltr 16 sf
(17) 15 99 -125 s
(Dialogue) 56 125 -125 s
ltr 12 sf
(The Thot editing tool kit provides dialogue functions. There are high level func\255) 12 382 113 -144 j
(tions that hide most of the complex aspects of OSF/Motif and thus allows an ap\255) 14 396 99 -160 j
(plication to use OSF/Motif very easily and dynamically \(all dialogue entities such as) 12 396 99 -177 j
(menus, buttons, forms, etc. can be created and modified at any time\). As these di\255) 14 396 99 -193 j
(alogue functions are already used internally by the editing tool kit, another reason for) 13 396 99 -209 j
(an application to use it, is to present the user with a homogeneous and consistent) 14 396 99 -226 j
(look and feel for the whole application.) 6 183 99 -242 j
(The functions described in this section require that file ) 9 262 113 -261 j
lti 12 sf
(interface.h) 52 375 -261 s
ltr 12 sf
( be included in) 3 68 427 -261 j
(the module that calls them. They are available only in the Thot Editor library.) 13 368 99 -277 j
ltr 14 sf
(17.1) 23 99 -317 s
(Constructors) 72 132 -317 s
ltr 12 sf
(17.1.1) 29 99 -350 s
(GtListDirectory) 77 136 -350 s
(Creates one or two selectors that allow end-user to select a directory and/or a file) 14 382 113 -365 j
(included within the current specified directory. This function supposes that the ap\255) 11 396 99 -381 j
(plication had first created a form where selectors have to be inserted. The application) 13 396 99 -397 j
(is able to create either only the directory selector or only the file selector. A suffix can) 16 396 99 -414 j
(be specified if the application wants to filter a specific class of files. It is the re\255) 16 396 99 -430 j
(sponsibility of the application to receive and handle the selectors callback.) 10 354 99 -446 j
481 -470 113 -470 0 3 2 Seg
481 -473 113 -473 0 1 2 Seg
lhr 14 sf
(void GtListDirectory\(char *aDirectory, int formRef, char) 5 369 113 -495 j
(*dirTitle, int dirRef, char *suffix, char *fileTitle, int fileRef\)) 8 336 113 -515 j
481 -530 113 -530 0 3 2 Seg
481 -527 113 -527 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -559 s
lti 12 sf
(aDirectory) 52 134 -578 s
ltr 12 sf
(: the current designated directory.) 4 161 186 -578 j
lti 12 sf
(formRef) 39 134 -597 s
ltr 12 sf
(: the form identification.) 3 112 174 -597 j
lti 12 sf
(dirTitle) 36 134 -616 s
ltr 12 sf
(: the title of the directory selector.) 6 162 171 -616 j
lti 12 sf
(dirRef) 31 134 -636 s
ltr 12 sf
(: the directory selector identification or -1 if this selector is not de\255) 12 330 165 -636 j
(sired.) 27 154 -652 s
lti 12 sf
(suffix) 28 134 -671 s
ltr 12 sf
(: the suffix used for filtering files \(for example ".PIV"\)) 9 256 162 -671 j
lti 12 sf
(fileTitle) 39 134 -690 s
ltr 12 sf
(: the title of the file selector.) 6 134 174 -690 j
lti 12 sf
(fileRef) 34 134 -709 s
ltr 12 sf
(: the file selector identification or -1 if this selector is not desired.) 12 315 168 -709 j
( ) 1 1 99 -737 j
ltr 8 sf
( ) 1 2 296 -759 j
113 413 669 nwpage
%%Page: 122 122
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
(114) 17 99 -77 s
(17.1.2) 29 99 -121 s
(GtIsSuffixFileIn) 78 136 -121 s
(Returns True if the specified directory contains files with the specified suffix.) 11 366 113 -135 j
481 -159 113 -159 0 3 2 Seg
481 -162 113 -162 0 1 2 Seg
lhr 14 sf
(boolean GtIsSuffixFileIn\(char *aDirectory, char *suffix\)) 4 333 113 -184 j
481 -200 113 -200 0 3 2 Seg
481 -197 113 -197 0 1 2 Seg
ltb 12 sf
(Parameters:) 66 99 -228 s
lti 12 sf
(aDirectory) 52 134 -248 s
ltr 12 sf
(: the current designated directory.) 4 161 186 -248 j
lti 12 sf
(suffix) 28 134 -267 s
ltr 12 sf
(: the suffix used for filtering files \(for example ".PIV"\)) 9 256 162 -267 j
ltb 12 sf
(Return value:) 1 70 99 -291 j
ltr 12 sf
(True or False.) 2 68 134 -310 j
( ) 1 1 99 -736 j
ltr 8 sf
( ) 1 2 296 -758 j
frstpage
%%Page: cover 1
114 413 669 nwpage
%%Page: 2 2
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 495 -68 j
ltr 14 sf
(The Thot Editing Tool Kit) 4 139 228 -157 j
ltb 12 sf
(1) 6 99 -201 s
(Introduction to the document model) 4 180 113 -201 j
ltr 8 sf
294 -201 174 Pes
ltr 12 sf
(1) 6 490 -201 s
(1.1) 14 118 -218 s
(Logical structure) 1 81 141 -218 j
ltr 8 sf
222 -218 246 Pes
ltr 12 sf
(1) 6 490 -218 s
(1.2) 14 118 -232 s
(Presentation) 61 141 -232 s
ltr 8 sf
203 -232 265 Pes
ltr 12 sf
(2) 6 490 -232 s
ltb 12 sf
(2) 6 99 -252 s
(Tool kit structure) 2 91 113 -252 j
ltr 8 sf
204 -252 263 Pes
ltr 12 sf
(3) 6 490 -252 s
(2.1) 14 118 -269 s
(Structure of this manual) 3 114 141 -269 j
ltr 8 sf
255 -269 212 Pes
ltr 12 sf
(3) 6 490 -269 s
(2.2) 14 118 -283 s
(Libraries) 43 141 -283 s
ltr 8 sf
184 -283 283 Pes
ltr 12 sf
(4) 6 490 -283 s
(2.2.1) 23 137 -300 s
(Thot Kernel library) 2 90 169 -300 j
ltr 8 sf
259 -300 208 Pes
ltr 12 sf
(4) 6 490 -300 s
(2.2.2) 23 137 -315 s
(Thot Editor library) 2 88 169 -315 j
ltr 8 sf
257 -315 210 Pes
ltr 12 sf
(5) 6 490 -315 s
ltb 12 sf
(3) 6 99 -334 s
(Using the Thot tool kit) 4 115 113 -334 j
ltr 8 sf
228 -334 239 Pes
ltr 12 sf
(5) 6 490 -334 s
(3.1) 14 118 -351 s
(Errors) 31 141 -351 s
ltr 8 sf
172 -351 296 Pes
ltr 12 sf
(5) 6 490 -351 s
(3.2) 14 118 -366 s
(Include files) 1 58 141 -366 j
ltr 8 sf
199 -366 269 Pes
ltr 12 sf
(6) 6 490 -366 s
(3.3) 14 118 -380 s
(Buffers) 35 141 -380 s
ltr 8 sf
176 -380 292 Pes
ltr 12 sf
(6) 6 490 -380 s
ltb 12 sf
(4) 6 99 -399 s
(Types used by the Thot editing tool kit) 7 197 113 -399 j
ltr 8 sf
310 -399 157 Pes
ltr 12 sf
(6) 6 490 -399 s
ltb 12 sf
(5) 6 99 -419 s
(Application) 58 113 -419 s
ltr 8 sf
171 -419 297 Pes
ltr 12 sf
(8) 6 490 -419 s
(5.1) 14 118 -436 s
(Constructors) 62 141 -436 s
ltr 8 sf
204 -436 264 Pes
ltr 12 sf
(8) 6 490 -436 s
(5.1.1) 23 137 -453 s
(GtInitialize) 55 169 -453 s
ltr 8 sf
224 -453 244 Pes
ltr 12 sf
(8) 6 490 -453 s
(5.1.2) 23 137 -468 s
(GtQuit) 34 169 -468 s
ltr 8 sf
203 -468 265 Pes
ltr 12 sf
(8) 6 490 -468 s
(5.1.3) 23 137 -482 s
(GtGetMemory) 71 169 -482 s
ltr 8 sf
240 -482 228 Pes
ltr 12 sf
(8) 6 490 -482 s
(5.1.4) 23 137 -496 s
(GtFreeMemory) 76 169 -496 s
ltr 8 sf
245 -496 223 Pes
ltr 12 sf
(9) 6 490 -496 s
(5.2) 14 118 -511 s
(Modificators) 60 141 -511 s
ltr 8 sf
202 -511 266 Pes
ltr 12 sf
(9) 6 490 -511 s
(5.2.1) 23 137 -528 s
(GtSetErrorMessages) 105 169 -528 s
ltr 8 sf
274 -528 194 Pes
ltr 12 sf
(9) 6 490 -528 s
(5.3) 14 118 -542 s
(Accessors) 51 141 -542 s
ltr 8 sf
192 -542 276 Pes
ltr 12 sf
(10) 12 484 -542 s
(5.3.1) 23 137 -560 s
(GtGetVersion) 69 169 -560 s
ltr 8 sf
238 -560 229 Pes
ltr 12 sf
(10) 12 484 -560 s
(5.3.2) 23 137 -574 s
(GtGetErrorCode) 81 169 -574 s
ltr 8 sf
250 -574 218 Pes
ltr 12 sf
(10) 12 484 -574 s
(5.3.3) 23 137 -588 s
(GtGetStrError) 70 169 -588 s
ltr 8 sf
239 -588 228 Pes
ltr 12 sf
(10) 12 484 -588 s
ltb 12 sf
(6) 6 99 -608 s
(Documents and schemas) 2 127 113 -608 j
ltr 8 sf
240 -608 228 Pes
ltr 12 sf
(9) 6 490 -608 s
(6.1) 14 118 -622 s
(Constructors) 62 141 -622 s
ltr 8 sf
204 -622 264 Pes
ltr 12 sf
(12) 12 484 -622 s
(6.1.1) 23 137 -639 s
(GtNewDocument) 84 169 -639 s
ltr 8 sf
253 -639 214 Pes
ltr 12 sf
(12) 12 484 -639 s
(6.1.2) 23 137 -654 s
(GtOpenDocument) 87 169 -654 s
ltr 8 sf
256 -654 211 Pes
ltr 12 sf
(12) 12 484 -654 s
(6.1.3) 23 137 -668 s
(GtSaveDocument) 85 169 -668 s
ltr 8 sf
254 -668 213 Pes
ltr 12 sf
(13) 12 484 -668 s
(6.1.4) 23 137 -683 s
(GtExportDocument) 94 169 -683 s
ltr 8 sf
263 -683 204 Pes
ltr 12 sf
(13) 12 484 -683 s
(6.1.5) 23 137 -697 s
(GtCloseDocument) 89 169 -697 s
ltr 8 sf
258 -697 209 Pes
ltr 12 sf
(14) 12 484 -697 s
(6.1.6) 23 137 -711 s
(GtRemoveDocument) 101 169 -711 s
ltr 8 sf
270 -711 198 Pes
ltr 12 sf
(14) 12 484 -711 s
(i) 3 296 -760 s
( ) 1 1 99 -737 j
1 414 669 nwpage
%%Page: 3 3
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 495 -68 j
(6.1.7) 23 137 -96 s
(GtSetDocumentPath) 100 169 -96 s
ltr 8 sf
269 -96 199 Pes
ltr 12 sf
(15) 12 484 -96 s
(6.1.8) 23 137 -110 s
(GtAppendDocumentPath) 121 169 -110 s
ltr 8 sf
290 -110 178 Pes
ltr 12 sf
(15) 12 484 -110 s
(6.1.9) 23 137 -125 s
(GtSetSchemaPath) 88 169 -125 s
ltr 8 sf
257 -125 210 Pes
ltr 12 sf
(15) 12 484 -125 s
(6.2) 14 118 -139 s
(Modificators) 60 141 -139 s
ltr 8 sf
202 -139 266 Pes
ltr 12 sf
(16) 12 484 -139 s
(6.2.1) 23 137 -156 s
(GtNewNature) 69 169 -156 s
ltr 8 sf
238 -156 229 Pes
ltr 12 sf
(16) 12 484 -156 s
(6.2.2) 23 137 -171 s
(GtNewSchemaExtension) 122 169 -171 s
ltr 8 sf
291 -171 177 Pes
ltr 12 sf
(16) 12 484 -171 s
(6.2.3) 23 137 -185 s
(GtRemoveSchemaExtension) 138 169 -185 s
ltr 8 sf
307 -185 160 Pes
ltr 12 sf
(17) 12 484 -185 s
(6.2.4) 23 137 -200 s
(GtSetPSchema) 73 169 -200 s
ltr 8 sf
242 -200 226 Pes
ltr 12 sf
(17) 12 484 -200 s
(6.2.5) 23 137 -214 s
(GtSetDocumentDirectory) 123 169 -214 s
ltr 8 sf
292 -214 176 Pes
ltr 12 sf
(18) 12 484 -214 s
(6.2.6) 23 137 -228 s
(GtSetDocumentName) 107 169 -228 s
ltr 8 sf
276 -228 192 Pes
ltr 12 sf
(18) 12 484 -228 s
(6.2.7) 23 137 -243 s
(GtSetDocumentAccessMode) 141 169 -243 s
ltr 8 sf
310 -243 157 Pes
ltr 12 sf
(19) 12 484 -243 s
(6.2.8) 23 137 -257 s
(GtSetDocumentBackUpInterval) 153 169 -257 s
ltr 8 sf
322 -257 146 Pes
ltr 12 sf
(19) 12 484 -257 s
(6.2.9) 23 137 -272 s
(GtSetNotificationMode) 112 169 -272 s
ltr 8 sf
281 -272 186 Pes
ltr 12 sf
(19) 12 484 -272 s
(6.2.10) 29 137 -286 s
(GtSetDocumentModified) 120 175 -286 s
ltr 8 sf
295 -286 173 Pes
ltr 12 sf
(20) 12 484 -286 s
(6.2.11) 29 137 -300 s
(GtSetDocumentUnmodified) 132 175 -300 s
ltr 8 sf
306 -300 161 Pes
ltr 12 sf
(20) 12 484 -300 s
(6.3) 14 118 -315 s
(Accessors) 51 141 -315 s
ltr 8 sf
192 -315 276 Pes
ltr 12 sf
(21) 12 484 -315 s
(6.3.1) 23 137 -332 s
(GtGetSchemaExtension) 117 169 -332 s
ltr 8 sf
286 -332 181 Pes
ltr 12 sf
(21) 12 484 -332 s
(6.3.2) 23 137 -347 s
(GtGetDocumentName) 108 169 -347 s
ltr 8 sf
277 -347 190 Pes
ltr 12 sf
(21) 12 484 -347 s
(6.3.3) 23 137 -361 s
(GtGetDocumentFromName) 134 169 -361 s
ltr 8 sf
303 -361 164 Pes
ltr 12 sf
(21) 12 484 -361 s
(6.3.4) 23 137 -375 s
(GtGetDocumentSSchema) 124 169 -375 s
ltr 8 sf
293 -375 175 Pes
ltr 12 sf
(22) 12 484 -375 s
(6.3.5) 23 137 -390 s
(GtGetSSchemaName) 104 169 -390 s
ltr 8 sf
273 -390 195 Pes
ltr 12 sf
(22) 12 484 -390 s
(6.3.6) 23 137 -404 s
(GtGetPSchemaName) 104 169 -404 s
ltr 8 sf
273 -404 195 Pes
ltr 12 sf
(23) 12 484 -404 s
(6.3.7) 23 137 -419 s
(GtGetDocumentDirectory) 125 169 -419 s
ltr 8 sf
294 -419 174 Pes
ltr 12 sf
(23) 12 484 -419 s
(6.3.8) 23 137 -433 s
(GtGetSSchema) 75 169 -433 s
ltr 8 sf
244 -433 224 Pes
ltr 12 sf
(23) 12 484 -433 s
(6.3.9) 23 137 -447 s
(GtSameSSchemas) 89 169 -447 s
ltr 8 sf
258 -447 209 Pes
ltr 12 sf
(24) 12 484 -447 s
(6.3.10) 29 137 -462 s
(GtGiveSchemasOfDocument) 139 175 -462 s
ltr 8 sf
314 -462 154 Pes
ltr 12 sf
(24) 12 484 -462 s
(6.3.11) 29 137 -476 s
(GtNextSchemaExtension) 123 175 -476 s
ltr 8 sf
298 -476 170 Pes
ltr 12 sf
(25) 12 484 -476 s
(6.3.12) 29 137 -491 s
(GtNextNature) 70 175 -491 s
ltr 8 sf
245 -491 223 Pes
ltr 12 sf
(25) 12 484 -491 s
(6.3.13) 29 137 -505 s
(GtIsDocumentModified) 113 175 -505 s
ltr 8 sf
288 -505 180 Pes
ltr 12 sf
(26) 12 484 -505 s
(6.3.14) 29 137 -519 s
(GtGetDocumentBackUpInterval) 155 175 -519 s
ltr 8 sf
329 -519 138 Pes
ltr 12 sf
(26) 12 484 -519 s
(6.3.15) 29 137 -534 s
(GtGetDocumentAccessMode) 143 175 -534 s
ltr 8 sf
318 -534 150 Pes
ltr 12 sf
(27) 12 484 -534 s
(6.3.16) 29 137 -548 s
(GtGetNotificationMode) 114 175 -548 s
ltr 8 sf
289 -548 179 Pes
ltr 12 sf
(27) 12 484 -548 s
(6.3.17) 29 137 -563 s
(GtGetDocumentPath) 102 175 -563 s
ltr 8 sf
276 -563 191 Pes
ltr 12 sf
(27) 12 484 -563 s
(6.3.18) 29 137 -577 s
(GtGetSchemaPath) 90 175 -577 s
ltr 8 sf
265 -577 203 Pes
ltr 12 sf
(28) 12 484 -577 s
(6.3.19) 29 137 -591 s
(GtGetDocumentOfSavedElements) 167 175 -591 s
ltr 8 sf
342 -591 126 Pes
ltr 12 sf
(28) 12 484 -591 s
ltb 12 sf
(7) 6 99 -611 s
(Tree structures) 1 83 113 -611 j
ltr 8 sf
196 -611 272 Pes
ltr 12 sf
(29) 12 484 -611 s
(7.1) 14 118 -625 s
(Constructors) 62 141 -625 s
ltr 8 sf
204 -625 264 Pes
ltr 12 sf
(31) 12 484 -625 s
(7.1.1) 23 137 -642 s
(GtNewElement) 76 169 -642 s
ltr 8 sf
245 -642 223 Pes
ltr 12 sf
(31) 12 484 -642 s
(7.1.2) 23 137 -657 s
(GtNewTree) 58 169 -657 s
ltr 8 sf
227 -657 241 Pes
ltr 12 sf
(31) 12 484 -657 s
(7.1.3) 23 137 -671 s
(GtCopyTree) 60 169 -671 s
ltr 8 sf
228 -671 239 Pes
ltr 12 sf
(32) 12 484 -671 s
(7.1.4) 23 137 -685 s
(GtCreateDescent) 85 169 -685 s
ltr 8 sf
254 -685 213 Pes
ltr 12 sf
(32) 12 484 -685 s
(7.1.5) 23 137 -700 s
(GtCreateDescentWithContent) 148 169 -700 s
ltr 8 sf
317 -700 151 Pes
ltr 12 sf
(33) 12 484 -700 s
(7.1.6) 23 137 -714 s
(GtDeleteTree) 67 169 -714 s
ltr 8 sf
236 -714 231 Pes
ltr 12 sf
(33) 12 484 -714 s
(ii) 6 294 -760 s
( ) 1 1 99 -737 j
2 414 669 nwpage
%%Page: 4 4
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 495 -68 j
(7.1.7) 23 137 -96 s
(GtAttachNewTree) 90 169 -96 s
ltr 8 sf
259 -96 208 Pes
ltr 12 sf
(33) 12 484 -96 s
(7.2) 14 118 -110 s
(Modificators) 60 141 -110 s
ltr 8 sf
202 -110 266 Pes
ltr 12 sf
(34) 12 484 -110 s
(7.2.1) 23 137 -128 s
(GtInsertSibling) 74 169 -128 s
ltr 8 sf
243 -128 225 Pes
ltr 12 sf
(34) 12 484 -128 s
(7.2.2) 23 137 -142 s
(GtInsertFirstChild) 90 169 -142 s
ltr 8 sf
259 -142 208 Pes
ltr 12 sf
(34) 12 484 -142 s
(7.2.3) 23 137 -156 s
(GtRemoveTree) 74 169 -156 s
ltr 8 sf
243 -156 225 Pes
ltr 12 sf
(35) 12 484 -156 s
(7.2.4) 23 137 -171 s
(GtSetAccessRight) 90 169 -171 s
ltr 8 sf
259 -171 208 Pes
ltr 12 sf
(35) 12 484 -171 s
(7.2.5) 23 137 -185 s
(GtHolophrastElement) 107 169 -185 s
ltr 8 sf
276 -185 192 Pes
ltr 12 sf
(36) 12 484 -185 s
(7.2.6) 23 137 -200 s
(GtSetCheckingMode) 101 169 -200 s
ltr 8 sf
270 -200 198 Pes
ltr 12 sf
(36) 12 484 -200 s
(7.3) 14 118 -214 s
(Accessors) 51 141 -214 s
ltr 8 sf
192 -214 276 Pes
ltr 12 sf
(36) 12 484 -214 s
(7.3.1) 23 137 -231 s
(GtGetMainRoot) 79 169 -231 s
ltr 8 sf
248 -231 220 Pes
ltr 12 sf
(36) 12 484 -231 s
(7.3.2) 23 137 -246 s
(GtNextAssociatedRoot) 114 169 -246 s
ltr 8 sf
283 -246 184 Pes
ltr 12 sf
(37) 12 484 -246 s
(7.3.3) 23 137 -260 s
(GtGetFirstChild) 80 169 -260 s
ltr 8 sf
249 -260 219 Pes
ltr 12 sf
(37) 12 484 -260 s
(7.3.4) 23 137 -275 s
(GtGetLastChild) 78 169 -275 s
ltr 8 sf
247 -275 221 Pes
ltr 12 sf
(38) 12 484 -275 s
(7.3.5) 23 137 -289 s
(GtPreviousSibling) 87 169 -289 s
ltr 8 sf
256 -289 211 Pes
ltr 12 sf
(38) 12 484 -289 s
(7.3.6) 23 137 -303 s
(GtNextSibling) 69 169 -303 s
ltr 8 sf
238 -303 229 Pes
ltr 12 sf
(38) 12 484 -303 s
(7.3.7) 23 137 -318 s
(GtGetSuccessor) 80 169 -318 s
ltr 8 sf
249 -318 219 Pes
ltr 12 sf
(39) 12 484 -318 s
(7.3.8) 23 137 -332 s
(GtGetPredecessor) 90 169 -332 s
ltr 8 sf
259 -332 208 Pes
ltr 12 sf
(39) 12 484 -332 s
(7.3.9) 23 137 -347 s
(GtGetParent) 62 169 -347 s
ltr 8 sf
231 -347 236 Pes
ltr 12 sf
(39) 12 484 -347 s
(7.3.10) 29 137 -361 s
(GtGetCommonAncestor) 117 175 -361 s
ltr 8 sf
292 -361 176 Pes
ltr 12 sf
(40) 12 484 -361 s
(7.3.11) 29 137 -375 s
(GtGetTypedAncestor) 105 175 -375 s
ltr 8 sf
279 -375 188 Pes
ltr 12 sf
(40) 12 484 -375 s
(7.3.12) 29 137 -390 s
(GtGetElementType) 95 175 -390 s
ltr 8 sf
270 -390 198 Pes
ltr 12 sf
(41) 12 484 -390 s
(7.3.13) 29 137 -404 s
(GtGetElementTypeName) 124 175 -404 s
ltr 8 sf
299 -404 169 Pes
ltr 12 sf
(41) 12 484 -404 s
(7.3.14) 29 137 -419 s
(GtGiveTypeFromName) 114 175 -419 s
ltr 8 sf
289 -419 179 Pes
ltr 12 sf
(41) 12 484 -419 s
(7.3.15) 29 137 -433 s
(GtSameTypes) 69 175 -433 s
ltr 8 sf
244 -433 224 Pes
ltr 12 sf
(42) 12 484 -433 s
(7.3.16) 29 137 -447 s
(GtGetElementLabel) 98 175 -447 s
ltr 8 sf
273 -447 195 Pes
ltr 12 sf
(42) 12 484 -447 s
(7.3.17) 29 137 -462 s
(GtIsConstant) 66 175 -462 s
ltr 8 sf
241 -462 227 Pes
ltr 12 sf
(43) 12 484 -462 s
(7.3.18) 29 137 -476 s
(GtIsLeaf) 43 175 -476 s
ltr 8 sf
218 -476 250 Pes
ltr 12 sf
(43) 12 484 -476 s
(7.3.19) 29 137 -491 s
(GtGetConstructOfType) 113 175 -491 s
ltr 8 sf
288 -491 180 Pes
ltr 12 sf
(43) 12 484 -491 s
(7.3.20) 29 137 -505 s
(GtGetConstruct) 78 175 -505 s
ltr 8 sf
252 -505 215 Pes
ltr 12 sf
(44) 12 484 -505 s
(7.3.21) 29 137 -519 s
(GtGetAccessRight) 92 175 -519 s
ltr 8 sf
267 -519 201 Pes
ltr 12 sf
(44) 12 484 -519 s
(7.3.22) 29 137 -534 s
(GtIsHolophrasted) 87 175 -534 s
ltr 8 sf
262 -534 205 Pes
ltr 12 sf
(44) 12 484 -534 s
(7.3.23) 29 137 -548 s
(GtIsReadOnly) 70 175 -548 s
ltr 8 sf
245 -548 223 Pes
ltr 12 sf
(45) 12 484 -548 s
(7.3.24) 29 137 -563 s
(GtIsHidden) 57 175 -563 s
ltr 8 sf
231 -563 236 Pes
ltr 12 sf
(45) 12 484 -563 s
(7.3.25) 29 137 -577 s
(GtIsInAnInclusion) 89 175 -577 s
ltr 8 sf
264 -577 204 Pes
ltr 12 sf
(45) 12 484 -577 s
(7.3.26) 29 137 -591 s
(GtIsAncestor) 66 175 -591 s
ltr 8 sf
241 -591 227 Pes
ltr 12 sf
(46) 12 484 -591 s
(7.3.27) 29 137 -606 s
(GtIsBefore) 54 175 -606 s
ltr 8 sf
228 -606 239 Pes
ltr 12 sf
(46) 12 484 -606 s
(7.3.28) 29 137 -620 s
(GtIsFirstPairedElement) 117 175 -620 s
ltr 8 sf
292 -620 176 Pes
ltr 12 sf
(46) 12 484 -620 s
(7.3.29) 29 137 -635 s
(GtGetDocument) 80 175 -635 s
ltr 8 sf
254 -635 213 Pes
ltr 12 sf
(47) 12 484 -635 s
(7.3.30) 29 137 -649 s
(GtNextCopiedElement) 110 175 -649 s
ltr 8 sf
285 -649 182 Pes
ltr 12 sf
(47) 12 484 -649 s
(7.3.31) 29 137 -663 s
(GtGetCopiedDocument) 113 175 -663 s
ltr 8 sf
288 -663 180 Pes
ltr 12 sf
(48) 12 484 -663 s
(iii) 9 293 -760 s
( ) 1 1 99 -737 j
3 414 669 nwpage
%%Page: 5 5
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 495 -68 j
(7.4) 14 118 -96 s
(Locators) 42 141 -96 s
ltr 8 sf
183 -96 284 Pes
ltr 12 sf
(48) 12 484 -96 s
(7.4.1) 23 137 -113 s
(GtSearchTypedElement) 115 169 -113 s
ltr 8 sf
284 -113 183 Pes
ltr 12 sf
(48) 12 484 -113 s
(7.4.2) 23 137 -128 s
(GtSearchElementByLabel) 126 169 -128 s
ltr 8 sf
295 -128 173 Pes
ltr 12 sf
(49) 12 484 -128 s
(7.4.3) 23 137 -142 s
(GtSearchEmptyElement) 117 169 -142 s
ltr 8 sf
286 -142 181 Pes
ltr 12 sf
(49) 12 484 -142 s
(7.4.4) 23 137 -156 s
(GtSearchOtherPairedElement) 144 169 -156 s
ltr 8 sf
313 -156 155 Pes
ltr 12 sf
(50) 12 484 -156 s
(7.4.5) 23 137 -171 s
(GtSearchNoPageBreak) 112 169 -171 s
ltr 8 sf
281 -171 186 Pes
ltr 12 sf
(50) 12 484 -171 s
(7.5) 14 118 -185 s
(Help) 23 141 -185 s
ltr 8 sf
164 -185 303 Pes
ltr 12 sf
(50) 12 484 -185 s
(7.5.1) 23 137 -203 s
(GtListAbstractTree) 96 169 -203 s
ltr 8 sf
265 -203 203 Pes
ltr 12 sf
(50) 12 484 -203 s
ltb 12 sf
(8) 6 99 -222 s
(Contents) 46 113 -222 s
ltr 8 sf
159 -222 308 Pes
ltr 12 sf
(52) 12 484 -222 s
(8.1) 14 118 -239 s
(Modificators) 60 141 -239 s
ltr 8 sf
202 -239 266 Pes
ltr 12 sf
(52) 12 484 -239 s
(8.1.1) 23 137 -256 s
(GtSetTextContent) 89 169 -256 s
ltr 8 sf
258 -256 209 Pes
ltr 12 sf
(52) 12 484 -256 s
(8.1.2) 23 137 -271 s
(GtAppendTextContent) 110 169 -271 s
ltr 8 sf
279 -271 188 Pes
ltr 12 sf
(52) 12 484 -271 s
(8.1.3) 23 137 -285 s
(GtInsertTextContent) 102 169 -285 s
ltr 8 sf
271 -285 197 Pes
ltr 12 sf
(53) 12 484 -285 s
(8.1.4) 23 137 -300 s
(GtDeleteTextContent) 106 169 -300 s
ltr 8 sf
275 -300 193 Pes
ltr 12 sf
(53) 12 484 -300 s
(8.1.5) 23 137 -314 s
(GtSplitText) 57 169 -314 s
ltr 8 sf
226 -314 242 Pes
ltr 12 sf
(53) 12 484 -314 s
(8.1.6) 23 137 -328 s
(GtMergeText) 66 169 -328 s
ltr 8 sf
235 -328 232 Pes
ltr 12 sf
(54) 12 484 -328 s
(8.1.7) 23 137 -343 s
(GtSetGraphicsShape) 102 169 -343 s
ltr 8 sf
271 -343 197 Pes
ltr 12 sf
(54) 12 484 -343 s
(8.1.8) 23 137 -357 s
(GtAddPointInPolyline) 106 169 -357 s
ltr 8 sf
275 -357 193 Pes
ltr 12 sf
(55) 12 484 -357 s
(8.1.9) 23 137 -372 s
(GtDeletePointInPolyline) 118 169 -372 s
ltr 8 sf
287 -372 180 Pes
ltr 12 sf
(55) 12 484 -372 s
(8.1.10) 29 137 -386 s
(GtModifyPointInPolyline) 119 175 -386 s
ltr 8 sf
294 -386 174 Pes
ltr 12 sf
(56) 12 484 -386 s
(8.1.11) 29 137 -400 s
(GtChangeLimitOfPolyline) 124 175 -400 s
ltr 8 sf
299 -400 169 Pes
ltr 12 sf
(56) 12 484 -400 s
(8.1.12) 29 137 -415 s
(GtCopyPage) 61 175 -415 s
ltr 8 sf
236 -415 231 Pes
ltr 12 sf
(57) 12 484 -415 s
(8.2) 14 118 -429 s
(Accessors) 51 141 -429 s
ltr 8 sf
192 -429 276 Pes
ltr 12 sf
(57) 12 484 -429 s
(8.2.1) 23 137 -446 s
(GtGetTextLength) 86 169 -446 s
ltr 8 sf
255 -446 212 Pes
ltr 12 sf
(57) 12 484 -446 s
(8.2.2) 23 137 -461 s
(GtGiveTextContent) 96 169 -461 s
ltr 8 sf
265 -461 203 Pes
ltr 12 sf
(57) 12 484 -461 s
(8.2.3) 23 137 -475 s
(GtGiveSubString) 83 169 -475 s
ltr 8 sf
252 -475 216 Pes
ltr 12 sf
(58) 12 484 -475 s
(8.2.4) 23 137 -490 s
(GtGetGraphicsShape) 104 169 -490 s
ltr 8 sf
273 -490 195 Pes
ltr 12 sf
(59) 12 484 -490 s
(8.2.5) 23 137 -504 s
(GtGetPolylineLength) 103 169 -504 s
ltr 8 sf
272 -504 196 Pes
ltr 12 sf
(59) 12 484 -504 s
(8.2.6) 23 137 -518 s
(GtGivePolylinePoint) 99 169 -518 s
ltr 8 sf
268 -518 200 Pes
ltr 12 sf
(59) 12 484 -518 s
(8.2.7) 23 137 -533 s
(GtGetPageNumber) 93 169 -533 s
ltr 8 sf
262 -533 205 Pes
ltr 12 sf
(60) 12 484 -533 s
(iv) 9 293 -759 s
( ) 1 1 99 -736 j
4 414 669 nwpage
%%Page: 6 6
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 495 -68 j
(8.2.8) 23 137 -96 s
(GtGetPageView) 81 169 -96 s
ltr 8 sf
250 -96 218 Pes
ltr 12 sf
(60) 12 484 -96 s
ltb 12 sf
(9) 6 99 -115 s
(Logical attributes) 1 91 113 -115 j
ltr 8 sf
204 -115 263 Pes
ltr 12 sf
(61) 12 484 -115 s
(9.1) 14 118 -130 s
(Constructors) 62 141 -130 s
ltr 8 sf
204 -130 264 Pes
ltr 12 sf
(61) 12 484 -130 s
(9.1.1) 23 137 -147 s
(GtNewAttribute) 80 169 -147 s
ltr 8 sf
249 -147 219 Pes
ltr 12 sf
(61) 12 484 -147 s
(9.1.2) 23 137 -161 s
(GtAttachAttribute) 89 169 -161 s
ltr 8 sf
258 -161 209 Pes
ltr 12 sf
(61) 12 484 -161 s
(9.1.3) 23 137 -176 s
(GtRemoveAttribute) 96 169 -176 s
ltr 8 sf
265 -176 203 Pes
ltr 12 sf
(62) 12 484 -176 s
(9.2) 14 118 -190 s
(Modificators) 60 141 -190 s
ltr 8 sf
202 -190 266 Pes
ltr 12 sf
(62) 12 484 -190 s
(9.2.1) 23 137 -207 s
(GtSetAttributeValue) 102 169 -207 s
ltr 8 sf
271 -207 197 Pes
ltr 12 sf
(62) 12 484 -207 s
(9.2.2) 23 137 -222 s
(GtSetAttributeText) 95 169 -222 s
ltr 8 sf
264 -222 204 Pes
ltr 12 sf
(63) 12 484 -222 s
(9.3) 14 118 -236 s
(Accessors) 51 141 -236 s
ltr 8 sf
192 -236 276 Pes
ltr 12 sf
(63) 12 484 -236 s
(9.3.1) 23 137 -253 s
(GtNextAttribute) 81 169 -253 s
ltr 8 sf
250 -253 218 Pes
ltr 12 sf
(63) 12 484 -253 s
(9.3.2) 23 137 -268 s
(GtGetAttribute) 75 169 -268 s
ltr 8 sf
244 -268 224 Pes
ltr 12 sf
(64) 12 484 -268 s
(9.3.3) 23 137 -282 s
(GtGiveAttributeType) 104 169 -282 s
ltr 8 sf
273 -282 195 Pes
ltr 12 sf
(64) 12 484 -282 s
(9.3.4) 23 137 -297 s
(GtGiveAttributeTypeFromName) 158 169 -297 s
ltr 8 sf
327 -297 140 Pes
ltr 12 sf
(65) 12 484 -297 s
(9.3.5) 23 137 -311 s
(GtGetAttributeName) 104 169 -311 s
ltr 8 sf
273 -311 195 Pes
ltr 12 sf
(65) 12 484 -311 s
(9.3.6) 23 137 -325 s
(GtSameAttributeTypes) 113 169 -325 s
ltr 8 sf
282 -325 185 Pes
ltr 12 sf
(65) 12 484 -325 s
(9.3.7) 23 137 -340 s
(GtGetAttributeValue) 104 169 -340 s
ltr 8 sf
273 -340 195 Pes
ltr 12 sf
(66) 12 484 -340 s
(9.3.8) 23 137 -354 s
(GtGetTextAttributeLength) 131 169 -354 s
ltr 8 sf
300 -354 168 Pes
ltr 12 sf
(66) 12 484 -354 s
(9.3.9) 23 137 -369 s
(GtGiveTextAttributeValue) 131 169 -369 s
ltr 8 sf
300 -369 168 Pes
ltr 12 sf
(67) 12 484 -369 s
(9.4) 14 118 -383 s
(Locators) 42 141 -383 s
ltr 8 sf
183 -383 284 Pes
ltr 12 sf
(67) 12 484 -383 s
(9.4.1) 23 137 -400 s
(GtSearchAttribute) 89 169 -400 s
ltr 8 sf
258 -400 209 Pes
ltr 12 sf
(67) 12 484 -400 s
ltb 12 sf
(10) 12 99 -420 s
(References and links) 2 109 119 -420 j
ltr 8 sf
228 -420 239 Pes
ltr 12 sf
(69) 12 484 -420 s
(10.1) 20 118 -437 s
(Modificators) 60 147 -437 s
ltr 8 sf
207 -437 260 Pes
ltr 12 sf
(69) 12 484 -437 s
(10.1.1) 29 137 -454 s
(GtSetReference) 77 175 -454 s
ltr 8 sf
252 -454 216 Pes
ltr 12 sf
(69) 12 484 -454 s
(10.1.2) 29 137 -468 s
(GtNewInclusion) 79 175 -468 s
ltr 8 sf
253 -468 214 Pes
ltr 12 sf
(69) 12 484 -468 s
(10.1.3) 29 137 -483 s
(GtCopyReference) 85 175 -483 s
ltr 8 sf
260 -483 207 Pes
ltr 12 sf
(70) 12 484 -483 s
(10.1.4) 29 137 -497 s
(GtSetAttributeReference) 121 175 -497 s
ltr 8 sf
296 -497 172 Pes
ltr 12 sf
(70) 12 484 -497 s
(10.1.5) 29 137 -512 s
(GtCopyAttributeReference) 130 175 -512 s
ltr 8 sf
304 -512 163 Pes
ltr 12 sf
(70) 12 484 -512 s
(10.2) 20 118 -526 s
(Accessors) 51 147 -526 s
ltr 8 sf
198 -526 270 Pes
ltr 12 sf
(71) 12 484 -526 s
(10.2.1) 29 137 -543 s
(GtGiveReferredElement) 117 175 -543 s
ltr 8 sf
292 -543 176 Pes
ltr 12 sf
(71) 12 484 -543 s
(10.2.2) 29 137 -558 s
(GtIsElementTypeReference) 134 175 -558 s
ltr 8 sf
309 -558 158 Pes
ltr 12 sf
(71) 12 484 -558 s
(10.2.3) 29 137 -572 s
(GtSameReferences) 93 175 -572 s
ltr 8 sf
268 -572 200 Pes
ltr 12 sf
(72) 12 484 -572 s
(10.2.4) 29 137 -587 s
(GtGiveReferenceAttributeValue) 156 175 -587 s
ltr 8 sf
331 -587 136 Pes
ltr 12 sf
(72) 12 484 -587 s
(10.2.5) 29 137 -601 s
(GtIsElementReferred) 104 175 -601 s
ltr 8 sf
278 -601 189 Pes
ltr 12 sf
(73) 12 484 -601 s
(10.2.6) 29 137 -615 s
(GtSameReferenceAttributes) 137 175 -615 s
ltr 8 sf
312 -615 156 Pes
ltr 12 sf
(73) 12 484 -615 s
(v) 6 294 -760 s
( ) 1 1 99 -737 j
5 414 669 nwpage
%%Page: 7 7
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 495 -68 j
(10.3) 20 118 -96 s
(Locators) 42 147 -96 s
ltr 8 sf
189 -96 278 Pes
ltr 12 sf
(74) 12 484 -96 s
(10.3.1) 29 137 -113 s
(GtNextLoadedReference) 120 175 -113 s
ltr 8 sf
295 -113 173 Pes
ltr 12 sf
(74) 12 484 -113 s
(10.3.2) 29 137 -128 s
(GtNextUnloadedReferringDocument) 175 175 -128 s
ltr 8 sf
349 -128 118 Pes
ltr 12 sf
(75) 12 484 -128 s
(10.3.3) 29 137 -142 s
(GtSearchReferenceElement) 133 175 -142 s
ltr 8 sf
308 -142 159 Pes
ltr 12 sf
(75) 12 484 -142 s
ltb 12 sf
(11) 12 99 -161 s
(Languages) 57 119 -161 s
ltr 8 sf
176 -161 292 Pes
ltr 12 sf
(70) 12 484 -161 s
(11.1) 20 118 -179 s
(Constructors) 62 147 -179 s
ltr 8 sf
209 -179 258 Pes
ltr 12 sf
(70) 12 484 -179 s
(11.1.1) 29 137 -196 s
(GtNewLanguage) 83 175 -196 s
ltr 8 sf
257 -196 210 Pes
ltr 12 sf
(70) 12 484 -196 s
(11.1.2) 29 137 -210 s
(GtLoadLanguageDictionaries) 142 175 -210 s
ltr 8 sf
317 -210 151 Pes
ltr 12 sf
(71) 12 484 -210 s
(11.1.3) 29 137 -225 s
(GtUnLoadLanguageDictionaries) 156 175 -225 s
ltr 8 sf
330 -225 137 Pes
ltr 12 sf
(72) 12 484 -225 s
(11.1.4) 29 137 -239 s
(GtLoadTypoDictionaries) 119 175 -239 s
ltr 8 sf
294 -239 174 Pes
ltr 12 sf
(72) 12 484 -239 s
(11.1.5) 29 137 -253 s
(GtUnLoadTypoDictionaries) 132 175 -253 s
ltr 8 sf
307 -253 160 Pes
ltr 12 sf
(72) 12 484 -253 s
(11.2) 20 118 -268 s
(Accessors) 51 147 -268 s
ltr 8 sf
198 -268 270 Pes
ltr 12 sf
(73) 12 484 -268 s
(11.2.1) 29 137 -285 s
(GtGetLanguageIdFromName) 142 175 -285 s
ltr 8 sf
317 -285 151 Pes
ltr 12 sf
(73) 12 484 -285 s
(11.2.2) 29 137 -300 s
(GtGetDefaultLanguage) 113 175 -300 s
ltr 8 sf
288 -300 180 Pes
ltr 12 sf
(73) 12 484 -300 s
(11.2.3) 29 137 -314 s
(GtGetLanguageIdFromAlphabet) 157 175 -314 s
ltr 8 sf
332 -314 135 Pes
ltr 12 sf
(73) 12 484 -314 s
(11.2.4) 29 137 -328 s
(GtGetAlphabet) 75 175 -328 s
ltr 8 sf
250 -328 218 Pes
ltr 12 sf
(74) 12 484 -328 s
(11.2.5) 29 137 -343 s
(GtGetLanguageName) 107 175 -343 s
ltr 8 sf
281 -343 186 Pes
ltr 12 sf
(74) 12 484 -343 s
(11.2.6) 29 137 -357 s
(GtGetPrincipalDictionary) 122 175 -357 s
ltr 8 sf
297 -357 171 Pes
ltr 12 sf
(74) 12 484 -357 s
(11.2.7) 29 137 -372 s
(GtGetSecondaryDictionary) 131 175 -372 s
ltr 8 sf
305 -372 162 Pes
ltr 12 sf
(75) 12 484 -372 s
(11.2.8) 29 137 -386 s
(GtGetPrincipalTypoDictionary) 146 175 -386 s
ltr 8 sf
321 -386 147 Pes
ltr 12 sf
(75) 12 484 -386 s
(11.2.9) 29 137 -400 s
(GtGetSecondaryTypoDictionary) 155 175 -400 s
ltr 8 sf
329 -400 138 Pes
ltr 12 sf
(75) 12 484 -400 s
(11.2.10) 35 137 -415 s
(GtGetNumberOfLanguages) 133 180 -415 s
ltr 8 sf
314 -415 154 Pes
ltr 12 sf
(76) 12 484 -415 s
ltb 12 sf
(12) 12 99 -434 s
(Specific presentation) 1 108 119 -434 j
ltr 8 sf
228 -434 240 Pes
ltr 12 sf
(77) 12 484 -434 s
(12.1) 20 118 -448 s
(Constructors) 62 147 -448 s
ltr 8 sf
209 -448 258 Pes
ltr 12 sf
(77) 12 484 -448 s
(12.1.1) 29 137 -466 s
(GtNewPRule) 64 175 -466 s
ltr 8 sf
239 -466 228 Pes
ltr 12 sf
(77) 12 484 -466 s
(12.1.2) 29 137 -480 s
(GtNewPRuleForNamedView) 142 175 -480 s
ltr 8 sf
317 -480 151 Pes
ltr 12 sf
(78) 12 484 -480 s
(12.1.3) 29 137 -494 s
(GtCopyPRule) 66 175 -494 s
ltr 8 sf
241 -494 227 Pes
ltr 12 sf
(78) 12 484 -494 s
(12.1.4) 29 137 -509 s
(GtAttachPRule) 74 175 -509 s
ltr 8 sf
249 -509 219 Pes
ltr 12 sf
(79) 12 484 -509 s
(12.1.5) 29 137 -523 s
(GtRemovePRule) 81 175 -523 s
ltr 8 sf
255 -523 212 Pes
ltr 12 sf
(79) 12 484 -523 s
(12.2) 20 118 -538 s
(Modificators) 60 147 -538 s
ltr 8 sf
207 -538 260 Pes
ltr 12 sf
(80) 12 484 -538 s
(12.2.1) 29 137 -555 s
(GtSetPRuleValue) 86 175 -555 s
ltr 8 sf
261 -555 206 Pes
ltr 12 sf
(80) 12 484 -555 s
(12.2.2) 29 137 -569 s
(GtChangeBoxSize) 89 175 -569 s
ltr 8 sf
264 -569 204 Pes
ltr 12 sf
(81) 12 484 -569 s
(12.2.3) 29 137 -584 s
(GtChangeBoxPosition) 108 175 -584 s
ltr 8 sf
282 -584 185 Pes
ltr 12 sf
(81) 12 484 -584 s
(12.3) 20 118 -598 s
(Accessors) 51 147 -598 s
ltr 8 sf
198 -598 270 Pes
ltr 12 sf
(82) 12 484 -598 s
(12.3.1) 29 137 -615 s
(GtGiveBoxSize) 76 175 -615 s
ltr 8 sf
251 -615 217 Pes
ltr 12 sf
(82) 12 484 -615 s
(12.3.2) 29 137 -630 s
(GtGiveBoxPosition) 94 175 -630 s
ltr 8 sf
269 -630 199 Pes
ltr 12 sf
(82) 12 484 -630 s
(12.3.3) 29 137 -644 s
(GtNextPRule) 65 175 -644 s
ltr 8 sf
240 -644 228 Pes
ltr 12 sf
(83) 12 484 -644 s
(12.3.4) 29 137 -659 s
(GtGetPRule) 60 175 -659 s
ltr 8 sf
234 -659 233 Pes
ltr 12 sf
(83) 12 484 -659 s
(12.3.5) 29 137 -673 s
(GtGetPRuleType) 84 175 -673 s
ltr 8 sf
258 -673 209 Pes
ltr 12 sf
(84) 12 484 -673 s
(12.3.6) 29 137 -687 s
(GtGetPRuleValue) 88 175 -687 s
ltr 8 sf
263 -687 204 Pes
ltr 12 sf
(84) 12 484 -687 s
(12.3.7) 29 137 -702 s
(GtSamePRules) 74 175 -702 s
ltr 8 sf
249 -702 219 Pes
ltr 12 sf
(85) 12 484 -702 s
(vi) 9 293 -759 s
( ) 1 1 99 -736 j
6 414 669 nwpage
%%Page: 8 8
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 495 -68 j
ltb 12 sf
(13) 12 99 -101 s
(Views) 33 119 -101 s
ltr 8 sf
152 -101 316 Pes
ltr 12 sf
(86) 12 484 -101 s
(13.1) 20 118 -118 s
(Constructors) 62 147 -118 s
ltr 8 sf
209 -118 258 Pes
ltr 12 sf
(86) 12 484 -118 s
(13.1.1) 29 137 -135 s
(GtOpenMainView) 89 175 -135 s
ltr 8 sf
264 -135 204 Pes
ltr 12 sf
(86) 12 484 -135 s
(13.1.2) 29 137 -150 s
(GtOpenView) 64 175 -150 s
ltr 8 sf
239 -150 228 Pes
ltr 12 sf
(86) 12 484 -150 s
(13.1.3) 29 137 -164 s
(GtOpenSubView) 83 175 -164 s
ltr 8 sf
257 -164 210 Pes
ltr 12 sf
(87) 12 484 -164 s
(13.1.4) 29 137 -179 s
(GtChangeViewTitle) 97 175 -179 s
ltr 8 sf
272 -179 196 Pes
ltr 12 sf
(88) 12 484 -179 s
(13.1.5) 29 137 -193 s
(GtCloseView) 66 175 -193 s
ltr 8 sf
241 -193 227 Pes
ltr 12 sf
(88) 12 484 -193 s
(13.2) 20 118 -207 s
(Modificators) 60 147 -207 s
ltr 8 sf
207 -207 260 Pes
ltr 12 sf
(88) 12 484 -207 s
(13.2.1) 29 137 -225 s
(GtSetSensibility) 80 175 -225 s
ltr 8 sf
254 -225 213 Pes
ltr 12 sf
(88) 12 484 -225 s
(13.2.2) 29 137 -239 s
(GtSetZoom) 57 175 -239 s
ltr 8 sf
231 -239 236 Pes
ltr 12 sf
(89) 12 484 -239 s
(13.2.3) 29 137 -253 s
(GtShowElement) 80 175 -253 s
ltr 8 sf
254 -253 213 Pes
ltr 12 sf
(89) 12 484 -253 s
(13.2.4) 29 137 -268 s
(GtRaiseView) 66 175 -268 s
ltr 8 sf
241 -268 227 Pes
ltr 12 sf
(90) 12 484 -268 s
(13.2.5) 29 137 -282 s
(GtSetDisplayMode) 94 175 -282 s
ltr 8 sf
269 -282 199 Pes
ltr 12 sf
(90) 12 484 -282 s
(13.3) 20 118 -297 s
(Accessors) 51 147 -297 s
ltr 8 sf
198 -297 270 Pes
ltr 12 sf
(91) 12 484 -297 s
(13.3.1) 29 137 -314 s
(GtGetSensibility) 82 175 -314 s
ltr 8 sf
256 -314 211 Pes
ltr 12 sf
(91) 12 484 -314 s
(13.3.2) 29 137 -328 s
(GtGetZoom) 59 175 -328 s
ltr 8 sf
233 -328 234 Pes
ltr 12 sf
(91) 12 484 -328 s
(13.3.3) 29 137 -343 s
(GtGetDisplayMode) 96 175 -343 s
ltr 8 sf
271 -343 197 Pes
ltr 12 sf
(92) 12 484 -343 s
(13.3.4) 29 137 -357 s
(GtIsPSchemaValid) 92 175 -357 s
ltr 8 sf
267 -357 201 Pes
ltr 12 sf
(92) 12 484 -357 s
(13.3.5) 29 137 -372 s
(GtGiveViewsToOpen) 106 175 -372 s
ltr 8 sf
280 -372 187 Pes
ltr 12 sf
(92) 12 484 -372 s
(13.3.6) 29 137 -386 s
(GtGetViewName) 85 175 -386 s
ltr 8 sf
260 -386 207 Pes
ltr 12 sf
(93) 12 484 -386 s
(13.3.7) 29 137 -400 s
(GtGetViewFromName) 111 175 -400 s
ltr 8 sf
286 -400 181 Pes
ltr 12 sf
(93) 12 484 -400 s
(13.3.8) 29 137 -415 s
(GtGiveActiveView) 93 175 -415 s
ltr 8 sf
268 -415 200 Pes
ltr 12 sf
(94) 12 484 -415 s
(13.3.9) 29 137 -429 s
(GtIsViewOpened) 85 175 -429 s
ltr 8 sf
260 -429 207 Pes
ltr 12 sf
(94) 12 484 -429 s
(13.4) 20 118 -444 s
(Help) 23 147 -444 s
ltr 8 sf
170 -444 298 Pes
ltr 12 sf
(95) 12 484 -444 s
(13.4.1) 29 137 -461 s
(GtListView) 58 175 -461 s
ltr 8 sf
232 -461 235 Pes
ltr 12 sf
(95) 12 484 -461 s
ltb 12 sf
(14) 12 99 -480 s
(Selection) 48 119 -480 s
ltr 8 sf
167 -480 300 Pes
ltr 12 sf
(96) 12 484 -480 s
(14.1) 20 118 -497 s
(Constructors) 62 147 -497 s
ltr 8 sf
209 -497 258 Pes
ltr 12 sf
(96) 12 484 -497 s
(14.1.1) 29 137 -515 s
(GtSelectElement) 83 175 -515 s
ltr 8 sf
257 -515 210 Pes
ltr 12 sf
(96) 12 484 -515 s
(14.1.2) 29 137 -529 s
(GtSelectString) 71 175 -529 s
ltr 8 sf
246 -529 222 Pes
ltr 12 sf
(96) 12 484 -529 s
(14.1.3) 29 137 -543 s
(GtExtendSelection) 91 175 -543 s
ltr 8 sf
266 -543 202 Pes
ltr 12 sf
(97) 12 484 -543 s
(14.1.4) 29 137 -558 s
(GtSelectInterval) 80 175 -558 s
ltr 8 sf
254 -558 213 Pes
ltr 12 sf
(97) 12 484 -558 s
(14.1.5) 29 137 -572 s
(GtUnselect) 55 175 -572 s
ltr 8 sf
229 -572 238 Pes
ltr 12 sf
(98) 12 484 -572 s
(14.1.6) 29 137 -587 s
(GtSetSelectionMode) 101 175 -587 s
ltr 8 sf
276 -587 192 Pes
ltr 12 sf
(98) 12 484 -587 s
(14.2) 20 118 -601 s
(Accessors) 51 147 -601 s
ltr 8 sf
198 -601 270 Pes
ltr 12 sf
(98) 12 484 -601 s
(14.2.1) 29 137 -618 s
(GtGiveFirstSelectedElement) 141 175 -618 s
ltr 8 sf
316 -618 152 Pes
ltr 12 sf
(98) 12 484 -618 s
(14.2.2) 29 137 -633 s
(GtGiveNextSelectedElement) 141 175 -633 s
ltr 8 sf
316 -633 152 Pes
ltr 12 sf
(99) 12 484 -633 s
(vii) 12 291 -760 s
( ) 1 1 99 -737 j
7 414 669 nwpage
%%Page: 9 9
0.000000 0.000000 0.000000 setrgbcolor
ltr 12 sf
( ) 1 1 495 -68 j
ltb 12 sf
(15) 12 99 -101 s
(Interface) 49 119 -101 s
ltr 8 sf
168 -101 300 Pes
ltr 12 sf
(101) 17 478 -101 s
(15.1) 20 118 -118 s
(Constructors) 62 147 -118 s
ltr 8 sf
209 -118 258 Pes
ltr 12 sf
(101) 17 478 -118 s
(15.1.1) 29 137 -135 s
(GtSetCallback) 70 175 -135 s
ltr 8 sf
245 -135 223 Pes
ltr 12 sf
(101) 17 478 -135 s
(15.1.2) 29 137 -150 s
(GtMainLoop) 61 175 -150 s
ltr 8 sf
236 -150 231 Pes
ltr 12 sf
(101) 17 478 -150 s
(15.1.3) 29 137 -164 s
(GtHandlePendingEvents) 120 175 -164 s
ltr 8 sf
295 -164 173 Pes
ltr 12 sf
(102) 17 478 -164 s
(15.1.4) 29 137 -179 s
(GtHandleOneEvent) 96 175 -179 s
ltr 8 sf
271 -179 197 Pes
ltr 12 sf
(102) 17 478 -179 s
(15.1.5) 29 137 -193 s
(GtOpenMainWindow) 104 175 -193 s
ltr 8 sf
278 -193 189 Pes
ltr 12 sf
(102) 17 478 -193 s
(15.1.6) 29 137 -207 s
(GtCreatePixmapLogo) 105 175 -207 s
ltr 8 sf
279 -207 188 Pes
ltr 12 sf
(103) 17 478 -207 s
(15.1.7) 29 137 -222 s
(GtCreateBitmapLogo) 104 175 -222 s
ltr 8 sf
278 -222 189 Pes
ltr 12 sf
(103) 17 478 -222 s
(15.1.8) 29 137 -236 s
(GtAddAction) 64 175 -236 s
ltr 8 sf
239 -236 228 Pes
ltr 12 sf
(104) 17 478 -236 s
(15.1.9) 29 137 -251 s
(GtRemoveAction) 84 175 -251 s
ltr 8 sf
258 -251 209 Pes
ltr 12 sf
(104) 17 478 -251 s
(15.1.10) 35 137 -265 s
(GtMapKeyboard) 81 180 -265 s
ltr 8 sf
261 -265 206 Pes
ltr 12 sf
(105) 17 478 -265 s
(15.2) 20 118 -279 s
(Accessors) 51 147 -279 s
ltr 8 sf
198 -279 270 Pes
ltr 12 sf
(105) 17 478 -279 s
(15.2.1) 29 137 -297 s
(GtGetButton) 63 175 -297 s
ltr 8 sf
238 -297 229 Pes
ltr 12 sf
(105) 17 478 -297 s
(15.2.2) 29 137 -311 s
(GtGetMenuColor) 84 175 -311 s
ltr 8 sf
259 -311 208 Pes
ltr 12 sf
(106) 17 478 -311 s
(15.2.3) 29 137 -325 s
(GtGetButtonColor) 89 175 -325 s
ltr 8 sf
264 -325 204 Pes
ltr 12 sf
(106) 17 478 -325 s
(15.2.4) 29 137 -340 s
(GtGetCurrentDisplay) 105 175 -340 s
ltr 8 sf
279 -340 188 Pes
ltr 12 sf
(106) 17 478 -340 s
(15.2.5) 29 137 -354 s
(GtGetScreenDepth) 93 175 -354 s
ltr 8 sf
268 -354 200 Pes
ltr 12 sf
(106) 17 478 -354 s
(15.2.6) 29 137 -369 s
(GtClickAnElement) 91 175 -369 s
ltr 8 sf
266 -369 202 Pes
ltr 12 sf
(106) 17 478 -369 s
(15.3) 20 118 -383 s
(Modificators) 60 147 -383 s
ltr 8 sf
207 -383 260 Pes
ltr 12 sf
(107) 17 478 -383 s
(15.3.1) 29 137 -400 s
(GtResetButton) 74 175 -400 s
ltr 8 sf
249 -400 219 Pes
ltr 12 sf
(107) 17 478 -400 s
(15.3.2) 29 137 -415 s
(GtSuspendButton) 86 175 -415 s
ltr 8 sf
261 -415 206 Pes
ltr 12 sf
(107) 17 478 -415 s
(15.3.3) 29 137 -429 s
(GtSetCursorWatch) 93 175 -429 s
ltr 8 sf
268 -429 200 Pes
ltr 12 sf
(108) 17 478 -429 s
(15.3.4) 29 137 -444 s
(GtResetCursor) 74 175 -444 s
ltr 8 sf
249 -444 219 Pes
ltr 12 sf
(108) 17 478 -444 s
ltb 12 sf
(16) 12 99 -463 s
(Messages) 54 119 -463 s
ltr 8 sf
173 -463 295 Pes
ltr 12 sf
(109) 17 478 -463 s
(16.1) 20 118 -477 s
(Constructors) 62 147 -477 s
ltr 8 sf
209 -477 258 Pes
ltr 12 sf
(109) 17 478 -477 s
(16.1.1) 29 137 -494 s
(GtGetOriginMessageTable) 132 175 -494 s
ltr 8 sf
307 -494 160 Pes
ltr 12 sf
(109) 17 478 -494 s
(16.2) 20 118 -509 s
(Accessors) 51 147 -509 s
ltr 8 sf
198 -509 270 Pes
ltr 12 sf
(110) 17 478 -509 s
(16.2.1) 29 137 -526 s
(GtGetMessage) 76 175 -526 s
ltr 8 sf
251 -526 217 Pes
ltr 12 sf
(110) 17 478 -526 s
(16.2.2) 29 137 -540 s
(GtDisplaySimpleMessage) 128 175 -540 s
ltr 8 sf
302 -540 165 Pes
ltr 12 sf
(110) 17 478 -540 s
(16.2.3) 29 137 -555 s
(GtDisplayComplexMessage) 137 175 -555 s
ltr 8 sf
312 -555 156 Pes
ltr 12 sf
(111) 17 478 -555 s
ltb 12 sf
(17) 12 99 -574 s
(Dialogue) 46 119 -574 s
ltr 8 sf
165 -574 302 Pes
ltr 12 sf
(113) 17 478 -574 s
(17.1) 20 118 -591 s
(Constructors) 62 147 -591 s
ltr 8 sf
209 -591 258 Pes
ltr 12 sf
(113) 17 478 -591 s
(17.1.1) 29 137 -609 s
(GtListDirectory) 77 175 -609 s
ltr 8 sf
252 -609 216 Pes
ltr 12 sf
(113) 17 478 -609 s
(17.1.2) 29 137 -623 s
(GtIsSuffixFileIn) 78 175 -623 s
ltr 8 sf
252 -623 215 Pes
ltr 12 sf
(114) 17 478 -623 s
(viii) 14 290 -759 s
( ) 1 1 99 -736 j
8 414 669 nwpage
%%Page: 10 10
%%Trailer
EndThot
%%Pages: 10
