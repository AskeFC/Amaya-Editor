SchemaTypo =	'TYPOGRAPHY' IdentType ';'
	      [ 'ALINEA' SuiteType]
	      [ 'FUNCTION' SuiteFunct ]
	      [ 'COMPOSITION' SuiteMod ]
	      [ 'ELEMENT' SuiteTypo ]
	      [ 'ATTR' SuiteTypoAttr ]
		'END' . 

SuiteType =	IdentType < ',' IdentType > ';' .
SuiteFunct =	Funct < Funct > .
Funct =		TypeFunct ':' IdentFunct { '=' DefFunct } ';' .
{ DefFunct =	'BEGIN' Cmd_List 'END' . }
TypeFunct =	'Capitalization' / 'Punctuation' / 'InsertPair' /
		'Distance' / 'Exponent' / 'Abbreviation' /
		'Attribute' / 'Word' / 'SpaceTable' .
IdentFunct =	NAME .

RegleTypo =	[ 'IF' '(' SuiteCondition ')' ] SuiteParam ';' .
SuiteParam =	'BEGIN' ParamTypo < ParamTypo > 'END' ';' / ParamTypo .
ParamTypo =	TypeFunct ':' IdFunct / IdentMod .
IdFunct =	IdentFunct / 'FunctNil' .

SuiteCondition = Condition < 'AND' Condition > .
Condition =	[ 'NOT' ] ConditionElem .
ConditionElem =	'First' / 
		'Last' / 
		 RelType OpType IdentType /
		'IN' IdentType /
		'LANGUAGE' '=' Language /
		'IS' LexicalUnit .
OpType =	'IN' / '=' .
RelType =	'Next' / 'Previous' .
LexicalUnit =	NAME .
Language =	NAME .

SuiteMod =	Mod < Mod > .
Mod =		IdentMod '=' SuiteRegles . 
IdentMod =	NAME .
SuiteRegles =	'BEGIN' RegleTypo < RegleTypo > 'END' ';' / RegleTypo .

SuiteTypo =	Typo < Typo > .
Typo =		IdentType ':' SuiteRegles .

SuiteTypoAttr =	TransAttr < TransAttr > .
TransAttr =	AttrIdent [ '(' IdentType ')' ] [ AttrRelat ] ':'
		SuiteRegles .
AttrIdent =	NAME .
AttrRelat =	'=' AttrValue / '>' [ '-' ] MinVal / '<' [ '-' ] MaxVal /
		'IN' '[' ['-'] MinInterval '.' '.' ['-'] MaxInterval ']' .
AttrValue =	[ '-' ] ValEqual / TextEqual / AttrValIdent .
MinVal =	NUMBER .
MaxVal =	NUMBER .
MinInterval =	NUMBER .
MaxInterval =	NUMBER .
ValEqual =	NUMBER .
TextEqual =	STRING .
AttrValIdent =	NAME .
IdentType =	NAME .

END
