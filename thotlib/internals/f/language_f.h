/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 */

#ifndef __CEXTRACT__
#ifdef __STDC__

extern void InitLanguage ( void );
extern Language TtaNewLanguage ( char *languageName,
                                 char languageAlphabet,
                                 char *principalDictionary,
                                 char *secondDictionary );
extern Language TtaGetLanguageIdFromName ( char *languageName );
extern char *TtaGetVarLANG ( void );
extern Language TtaGetDefaultLanguage ( void );
extern Language TtaGetLanguageIdFromAlphabet ( char languageAlphabet );
extern char TtaGetAlphabet ( Language languageId );
extern char *TtaGetLanguageName ( Language languageId );
extern int TtaGetNumberOfLanguages ( void );
extern boolean GetPatternList ( Language langageId );
extern char *FoundPatternInList ( Language langageId,
                                  unsigned char substring[MAX_LET_PATTERN] );
extern void FoundHyphenPoints ( Language langageId,
                                char wordToCut[MAX_CHAR] );
extern int *TtaGetPatternHyphenList ( char word[MAX_CHAR],
                                      Language languageId );
extern boolean TtaExistPatternList ( Language languageId );

#else /* __STDC__ */

extern void InitLanguage (/* void */);
extern Language TtaNewLanguage (/* char *languageName,
                                   char languageAlphabet,
                                   char *principalDictionary,
                                   char *secondDictionary */);
extern Language TtaGetLanguageIdFromName (/* char *languageName */);
extern char *TtaGetVarLANG (/* void */);
extern Language TtaGetDefaultLanguage (/* void */);
extern Language TtaGetLanguageIdFromAlphabet (/* char languageAlphabet */);
extern char TtaGetAlphabet (/* Language languageId */);
extern char *TtaGetLanguageName (/* Language languageId */);
extern int TtaGetNumberOfLanguages (/* void */);
extern boolean GetPatternList (/* Language langageId */);
extern char *FoundPatternInList (/* Language langageId,
                                    unsigned char substring[MAX_LET_PATTERN] */);
extern void FoundHyphenPoints (/* Language langageId,
                                  char wordToCut[MAX_CHAR] */);
extern int *TtaGetPatternHyphenList (/* char word[MAX_CHAR],
                                        Language languageId */);
extern boolean TtaExistPatternList (/* Language languageId */);

#endif /* __STDC__ */
#endif /* __CEXTRACT__ */
