/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 */

#ifndef __CEXTRACT__

#ifdef __STDC__

extern void *AHTCallback_bridge ( caddr_t cd,
                                  int *s,
                                  XtInputId * id );
extern void ProcessTerminateRequest ( HTRequest * request,
                                      HTResponse * response,
                                      void *param,
                                      int status );
extern int Add_NewSocket_to_Loop ( HTRequest * request,
                                   HTAlertOpcode op,
                                   int msgnum,
                                   const char *dfault,
                                   void *input,
                                   HTAlertPar * reply );
extern int AHTEvent_register ( SOCKET sock, 
			       HTEventType type,
			       HTEvent *event );
extern int AHTEvent_unregister ( SOCKET sock,
				 HTEventType type);
extern void RequestKillAllXtevents ( AHTReqContext * me );
void SetTimer ( HTTimer *libwww_timer );
void DeleteTimer ( HTTimer *timer );
#else /* __STDC__ */

extern void *AHTCallback_bridge (/* caddr_t cd,
                                    int *s,
                                    XtInputId * id */);
extern void ProcessTerminateRequest (/* HTRequest * request,
                                      HTResponse * response,
                                      void *param,
                                      int status */);
extern int Add_NewSocket_to_Loop (/* HTRequest * request,
                                     HTAlertOpcode op,
                                     int msgnum,
                                     const char *dfault,
                                     void *input,
                                     HTAlertPar * reply */);
extern int AHTEvent_register (/* SOCKET sock,
				 HTEventType type,
				 HTEvent *event */);
extern int AHTEvent_unregister (/* SOCKET sock,
				   HTEventType type */);
extern void RequestKillAllXtevents (/* AHTReqContext * me */);
void SetTimer (/* HTTimer *libwww_timer */);
void DeleteTimer (/* HTTimer *timer */);
#endif /* __STDC__ */

extern boolean libDoStop;

#endif /* __CEXTRACT__ */
