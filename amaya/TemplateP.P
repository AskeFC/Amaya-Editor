	{ Presentation Schema for Templates.
	  A. Tollenaere		July 2005 }


PRESENTATION Template;

VIEWS
   Formatted_view,
   Structure_view merge with Structure_view;


#define STRUCT_INDENT 1.5
#define TAG_Color DarkIndigo1
#define TAG_Weight Bold
#define TAG_Visibility 7
#define TAG_FONTSIZE 12 pt
#define ATTR_Font Helvetica
#define ATTR_Style Roman
#define ATTR_Weight Normal
#define ATTR_Visibility 6
#define INVALID_Style Roman
#define INVALID_Weight Normal
#define INVALID_Visibility 7
#define INVALID_Font Helvetica
#define ATTR_Color DarkIndigo1
#define ATTRVALUE_Color DarkMagenta2
#define INVALID_Color Red
   
DEFAULT
   BEGIN
   Visibility: Enclosing =;
   VertRef: * . Left ;
   HorizRef: Enclosed . HRef;
   Height: Enclosed . Height;
   Width: Enclosed . Width;
   VertPos: HRef = Previous . HRef;
   HorizPos: Left = Previous . Right;
   LineBreak: No;
   Font: Enclosing =;
   Style: Roman;
   Weight: Enclosing =;
   Size: Enclosing =;
   Indent: 0;
   Adjust: Left;
   LineSpacing: 1;
   Depth : Enclosing =;
   UnderLine: Enclosing =;
   Thickness: Enclosing =;
   LineStyle: Enclosing =;
   LineWeight: Enclosing =;
   Background: Enclosing =;
   Foreground: Enclosing =;
   FillPattern: Enclosing =;
   IN Structure_view BEGIN
	    VertPos: Top = Previous . Bottom;
	    HorizPos: Left = Enclosing . Left;
	    END;
   END;

BOXES
  AttrName: BEGIN
    Content: (Text ' ' AttributeName Text '=');
    Visibility: 0;
    IN Structure_view BEGIN
      HorizPos: Left = Previous . Right;
      VertPos: HRef = Previous . HRef;
      Size: TAG_FONTSIZE;
      Font: ATTR_Font; Style: ATTR_Style; Weight: ATTR_Weight;
      Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
 	    END;
   END;

  AttrValue: BEGIN
    Content: (AttributeValue);
    Visibility: 0;
    IN Structure_view BEGIN
      HorizPos: Left = Previous . Right;
      VertPos: HRef = Previous . HRef;
      Size: TAG_FONTSIZE;
      Font: ATTR_Font; Style: ATTR_Style; Weight: ATTR_Weight;
      Visibility: ATTR_Visibility;  Foreground: ATTRVALUE_Color;
      END;
   END;

  AttrNameAndValue: BEGIN
    Content: (Text ' ' AttributeName Text '=' AttributeValue);
    Visibility: 0;
    IN Structure_view BEGIN
      HorizPos: Left = Previous . Right;
      VertPos: HRef = Previous . HRef;
      Size: TAG_FONTSIZE;
      Font: ATTR_Font; Style: ATTR_Style; Weight: ATTR_Weight;
      Visibility: ATTR_Visibility;  Foreground: ATTR_Color;
      END;
    END;
  
 ElementName: BEGIN
   Content: (ElemName);
   Visibility: 0;
	 IN Structure_view BEGIN
		 Size: TAG_FONTSIZE;
		 Font: TAG_Font;
		 Weight: TAG_Weight;
		 Visibility: TAG_Visibility;  Foreground: TAG_Color;
		 END;
	 END;

 VerticalLine: BEGIN
	 Content: Graphics 'W';
	 Visibility: 0;
	 IN Structure_view BEGIN
		 VertPos: Top = Creator . Top;
		 Height: Creator . Height;
		 Width: 1.1;
		 LineWeight: 1 px;
		 Visibility: TAG_Visibility;  Foreground: TAG_Color;
		 END;
	 END;

 UnknownAttrValue: BEGIN
	Content: (AttributeValue);
	Visibility: 0;
	IN Structure_view BEGIN
    HorizPos: Left = Previous . Right;
    VertPos: HRef = Previous . HRef;
		Size: TAG_FONTSIZE;
    Font: INVALID_Font;
		Style: INVALID_Style;
		Visibility: INVALID_Visibility;
		Foreground: INVALID_Color;
		END;	
	END;

 Unknown_End: BEGIN
	Content: Text '>';
	Visibility: 0;
	IN Structure_view BEGIN
		HorizPos: Left = Previous . Right;
		VertPos: HRef = Previous . HRef;
		Size: TAG_FONTSIZE;
		Style: INVALID_Style;
		Visibility: INVALID_Visibility;
		Foreground: Creator =;
		END;
	END;

 UseMenu_Gif: BEGIN
	Content: Picture 'xtigeruse.gif';
	HorizPos: Left = Enclosing . Left;
	VertPos: Top = Enclosing . Top;
	MarginTop: 0 px;
	MarginBottom: 0 px;
	MarginLeft: 0 px;
	MarginRight: 0 px;
	Depth: Creator - 2;
	IN Structure_view
		Visibility: 0;
	END;

 BagMenu_Gif: BEGIN
	Content: Picture 'xtigerbag.gif';
	HorizPos: Left = Enclosing . Left;
	VertPos: Top = Enclosing . Top;
	MarginTop: 0 px;
	MarginBottom: 0 px;
	MarginLeft: 0 px;
	MarginRight: 0 px;
	Depth: Creator - 2;
	IN Structure_view
		Visibility: 0;
	END;

 OptionMenu_Gif: BEGIN
	Content: Picture 'xtigeroption.gif';
	HorizPos: Left = Enclosing . Left;
	VertPos: Top = Enclosing . Top;
	MarginTop: 0 px;
	MarginBottom: 0 px;
	MarginLeft: 0 px;
	MarginRight: 0 px;
	Depth: Creator - 2;
	IN Structure_view
		Visibility: 0;
	END;

 RepeatMenu_Gif: BEGIN
	Content: Picture 'xtigerrepeat.gif';
	HorizPos: Left = Enclosing . Left;
	VertPos: Top = Enclosing . Top;
	MarginTop: 0 px;
	MarginBottom: 0 px;
	MarginLeft: 0 px;
	MarginRight: 0 px;
	Depth: Creator - 2;
	IN Structure_view
		Visibility: 0;
	END;

RULES

  head :
    BEGIN
      Visibility : 0;
    END;
    
  attribute:
		BEGIN
		Visibility : 0;
	  CreateBefore(ElementName);
	  CreateWith(VerticalLine);

  	IN Structure_view BEGIN
  	  Visibility : 1;
		  HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
	    Width: Enclosing . Width - STRUCT_INDENT;
		  VertPos: Top = Previous . Bottom;
		  END;
	 END;

  folder : 
	BEGIN
		Width: auto{Enclosing . Width};
		Height: auto{Enclosing . Height};
		{Display: Block;}
		MarginTop: 3 px;
		VertPos: Top 			= 		Previous . Bottom;
		HorizPos: Left 			=		Enclosing . Left; 
		BorderTopWidth			: 	 	1 px;
		BorderLeftWidth			: 		1 px;
		BorderBottomWidth		: 		1 px;
		BorderRightWidth		: 		1 px;
		BorderTopStyle			: 		Dashed;
		BorderLeftStyle			: 		Dashed;
		BorderBottomStyle		:	 	Dashed;
		BorderRightStyle		:	 	Dashed;
		BorderTopColor			:		Violet;
		BorderLeftColor			: 		Violet;
		BorderBottomColor		:	 	Violet;
		BorderRightColor		:	 	Violet;
		PaddingRight			:		2 px;
		PaddingLeft				:		2 px;
		PaddingTop				:		2 px;
		PaddingBottom			:		2 px;		
		IN Structure_view
		BEGIN
			BorderTopStyle		: 		None;
			BorderLeftStyle		: 		None;
			BorderBottomStyle	:	 	None;
			BorderRightStyle	:	 	None;
			PaddingRight		:		0 px;
			PaddingLeft			:		0 px;
			PaddingTop			:		0 px;
			PaddingBottom		:		0 px;
			BorderTopWidth		:	 	0 px;
			BorderLeftWidth		:		0 px;
			BorderBottomWidth	:	 	0 px;
			BorderRightWidth	:	 	0 px;					
		END;
	END;


	bagMenu:
	  BEGIN
	    CreateFirst(BagMenu_Gif);
      VertPos: Top = 			Enclosing . Top - 5 px;
      HorizPos: Left =		Enclosing . Left - 5 px;
	    HorizRef : * . Bottom;
      MarginTop: 				0 px;
      MarginBottom: 		0 px;
      MarginRight: 			0 px;
      MarginLeft: 			0 px;
	    IN Structure_view
	 	    Visibility: 0;
	  END;

  bag:
		BEGIN
    CreateBefore(ElementName);
  	CreateWith(VerticalLine);
    Width: auto{Enclosing . Width};
    Height: auto{Enclosing . Height};
    {Display: Block;}
    VertPos: Top = 			Previous . Bottom;
    HorizPos: Left =		Enclosing . Left; 
		BorderTopWidth: 	 	1 px;
		BorderLeftWidth: 		1 px;
		BorderBottomWidth: 	1 px;
		BorderRightWidth: 	1 px;
		BorderTopStyle: 		Dashed;
		BorderLeftStyle: 		Dashed;
		BorderBottomStyle: 	Dashed;
		BorderRightStyle: 	Dashed;
		BorderTopColor: 		Green;
		BorderLeftColor: 		Green;
		BorderBottomColor: 	Green;
		BorderRightColor: 	Green;
		PaddingRight: 			2 px;
		PaddingLeft: 				2 px;
		PaddingTop: 				2 px;
		PaddingBottom: 			2 px;
  	IN Structure_view BEGIN
			BorderTopWidth: 0;
			BorderLeftWidth: 0;
			BorderBottomWidth: 0;
		  BorderRightWidth: 0;
		  HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
	    Width: Enclosing . Width - STRUCT_INDENT;
		  VertPos: Top = Previous . Bottom;
		  END;
	 END;
	 
	useMenu:
	  BEGIN
	    CreateFirst(UseMenu_Gif);
      VertPos: Top = 			Enclosing . Top - 5 px;
      HorizPos: Left =		Enclosing . Left - 5 px;
	    HorizRef : * . Bottom;
      MarginTop: 				0 px;
      MarginBottom: 		0 px;
      MarginRight: 			0 px;
      MarginLeft: 			0 px;
	    IN Structure_view
	 	    Visibility: 0;
	  END;
	 
  useEl:	
		BEGIN
    CreateBefore(ElementName);
  	CreateWith(VerticalLine);
    Width: auto{Enclosing . Width};
    Height: auto{Enclosing . Height};
    LineBreak : no;
    {Display: Block;}
    VertPos: Top = 			Previous . Bottom;
    HorizPos: Left =		Enclosing . Left; 
		BorderTopWidth: 	 	1 px;
		BorderLeftWidth: 		1 px;
		BorderBottomWidth: 	1 px;
		BorderRightWidth: 	1 px;
		BorderTopStyle: 		Dashed;
		BorderLeftStyle: 		Dashed;
		BorderBottomStyle: 	Dashed;
		BorderRightStyle: 	Dashed;
		BorderTopColor: 		Blue;
		BorderLeftColor: 		Blue;
		BorderBottomColor: 	Blue;
		BorderRightColor: 	Blue;
		PaddingRight: 			2 px;
		PaddingLeft: 				2 px;
		PaddingTop: 				2 px;
		PaddingBottom: 			2 px;
  	IN Structure_view BEGIN
			BorderTopWidth: 0;
			BorderLeftWidth: 0;
			BorderBottomWidth: 0;
		  BorderRightWidth: 0;
		  HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
	    Width: Enclosing . Width - STRUCT_INDENT;
		  VertPos: Top = Previous . Bottom;
		  END;
	 END;

	repeatMenu:
	  BEGIN
	    CreateFirst(RepeatMenu_Gif);
      VertPos: Top = 			Enclosing . Top - 11 px;
      HorizPos: Left =		Enclosing . Left - 11 px;
	    HorizRef : * . Bottom;
      MarginTop: 				0 px;
      MarginBottom: 		0 px;
      MarginRight: 			0 px;
      MarginLeft: 			0 px;
	    IN Structure_view
	 	    Visibility: 0;
	  END;
	 
  repeat:
	BEGIN	
		CreateBefore(ElementName);
		CreateWith(VerticalLine);
		Width: auto{Enclosing . Width};
		{Display: Block;}
		VertPos: Top 			=		Previous . Bottom;
		MarginTop				:		3 px;
		HorizPos: Left 			=		Enclosing . Left; 
		BorderTopWidth			: 		2 pt;
		BorderLeftWidth			: 		2 pt;
		BorderBottomWidth		: 		2 pt;
		BorderRightWidth		: 		2 pt;
		BorderTopStyle			:		Dotted;
		BorderLeftStyle			: 		Dotted;
		BorderBottomStyle		: 		Dotted;
		BorderRightStyle		: 		Dotted;
		BorderTopColor			: 		Purple;
		BorderLeftColor			: 		Purple;
		BorderBottomColor		:		Purple;
		BorderRightColor		: 		Purple;
		PaddingRight			: 		3 px;
		PaddingLeft				: 		8 px;
		PaddingTop				:		8 px;
		PaddingBottom			:		3 px;		
		IN Structure_view BEGIN
			BorderTopWidth		: 		0;
			BorderLeftWidth		:	 	0;
			BorderBottomWidth	:		0;
			BorderRightWidth	:		0;
			HorizPos: Left 		=		Enclosing . Left + STRUCT_INDENT;
			Width				: 		Enclosing . Width - STRUCT_INDENT;
			VertPos	: Top 		= 		Previous . Bottom;
		END;
	 END;	 

	optionMenu:
	  BEGIN
	    CreateFirst(OptionMenu_Gif);
      VertPos: Top = 			Enclosing . Top - 5 px;
      HorizPos: Left =		Enclosing . Left - 5 px;
	    HorizRef : * . Bottom;
      MarginTop: 				0 px;
      MarginBottom: 		0 px;
      MarginRight: 			0 px;
      MarginLeft: 			0 px;
	    IN Structure_view
	 	    Visibility: 0;
	  END;
	 
  option:	
		BEGIN
    CreateBefore(ElementName);
  	CreateWith(VerticalLine);
    Width: auto{Enclosing . Width};
    {Display: Block;}
    VertPos: Top = Previous . Bottom;
    MarginTop: 0;
    HorizPos: Left = Enclosing . Left; 
		BorderTopWidth: 1 pt;
		BorderLeftWidth: 1 pt;
		BorderBottomWidth: 1 pt;
		BorderRightWidth: 1 pt;
		BorderTopStyle: Dashed;
		BorderLeftStyle: Dashed;
		BorderBottomStyle: Dashed;
		BorderRightStyle: Dashed;
		BorderTopColor: Orange;
		BorderLeftColor: Orange;
		BorderBottomColor: Orange;
		BorderRightColor: Orange;
		PaddingRight: 			2 px;
		PaddingLeft: 				2 px;
		PaddingTop: 				2 px;
		PaddingBottom: 			2 px;		
  	IN Structure_view BEGIN
			BorderTopWidth: 0;
			BorderLeftWidth: 0;
			BorderBottomWidth: 0;
		  BorderRightWidth: 0;
		  HorizPos: Left = Enclosing . Left + STRUCT_INDENT;
	    Width: Enclosing . Width - STRUCT_INDENT;
		  VertPos: Top = Previous . Bottom;
		  END;
	 END;	 


ATTRIBUTES

  name :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  title :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    
	
  includeAt :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  exclude :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  src :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    
	
  minOccurs :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  maxOccurs :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  types :
  BEGIN
	CreateBefore(AttrNameAndValue);
	END;    

  currentType :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    
	
  type :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  useAt :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  defaultAt :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  fixed :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  values :
  BEGIN
	CreateBefore(AttrName);
	CreateBefore(AttrValue);
	END;    

  Unknown_attribute:
	BEGIN
	if TEXT_UNIT
	   CreateBefore(UnknownAttrValue);
	if PICTURE_UNIT
	   CreateBefore(UnknownAttrValue);
	if Unknown_namespace
	   CreateAfter(UnknownAttrValue);
	if Unknown_namespace and LastAttr
	   CreateAfter(Unknown_End);
	if NOT TEXT_UNIT and NOT PICTURE_UNIT and NOT Unknown_namespace
  	 CreateBefore(UnknownAttrValue);
	END;	

END
